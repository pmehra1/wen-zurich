#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAO
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
    using System.Xml;
    using Microsoft.SharePoint;
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="zurichdata")]
	public partial class dbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertpersonalUseAssetsOther(personalUseAssetsOther instance);
    partial void UpdatepersonalUseAssetsOther(personalUseAssetsOther instance);
    partial void DeletepersonalUseAssetsOther(personalUseAssetsOther instance);
    partial void InsertinvestedAssetOther(investedAssetOther instance);
    partial void UpdateinvestedAssetOther(investedAssetOther instance);
    partial void DeleteinvestedAssetOther(investedAssetOther instance);
    partial void InsertliabilityOther(liabilityOther instance);
    partial void UpdateliabilityOther(liabilityOther instance);
    partial void DeleteliabilityOther(liabilityOther instance);
    partial void Insertexistingassetsg(existingassetsg instance);
    partial void Updateexistingassetsg(existingassetsg instance);
    partial void Deleteexistingassetsg(existingassetsg instance);
    partial void InsertfamilyNeedsAsset(familyNeedsAsset instance);
    partial void UpdatefamilyNeedsAsset(familyNeedsAsset instance);
    partial void DeletefamilyNeedsAsset(familyNeedsAsset instance);
    partial void InsertmyNeedsCriticalAsset(myNeedsCriticalAsset instance);
    partial void UpdatemyNeedsCriticalAsset(myNeedsCriticalAsset instance);
    partial void DeletemyNeedsCriticalAsset(myNeedsCriticalAsset instance);
    partial void InsertmyNeedsDisabilityAsset(myNeedsDisabilityAsset instance);
    partial void UpdatemyNeedsDisabilityAsset(myNeedsDisabilityAsset instance);
    partial void DeletemyNeedsDisabilityAsset(myNeedsDisabilityAsset instance);
    partial void Insertassumption(assumption instance);
    partial void Updateassumption(assumption instance);
    partial void Deleteassumption(assumption instance);
    partial void Insertexistingassetrg(existingassetrg instance);
    partial void Updateexistingassetrg(existingassetrg instance);
    partial void Deleteexistingassetrg(existingassetrg instance);
    partial void Insertcountrycostofeducation(countrycostofeducation instance);
    partial void Updatecountrycostofeducation(countrycostofeducation instance);
    partial void Deletecountrycostofeducation(countrycostofeducation instance);
    partial void Insertexistingasseteg(existingasseteg instance);
    partial void Updateexistingasseteg(existingasseteg instance);
    partial void Deleteexistingasseteg(existingasseteg instance);
    partial void InsertRiskProfileAnalysis(RiskProfileAnalysis instance);
    partial void UpdateRiskProfileAnalysis(RiskProfileAnalysis instance);
    partial void DeleteRiskProfileAnalysis(RiskProfileAnalysis instance);
    partial void InsertincomeExpenseOther(incomeExpenseOther instance);
    partial void UpdateincomeExpenseOther(incomeExpenseOther instance);
    partial void DeleteincomeExpenseOther(incomeExpenseOther instance);
    partial void Insertactivitystatus(activitystatus instance);
    partial void Updateactivitystatus(activitystatus instance);
    partial void Deleteactivitystatus(activitystatus instance);
    partial void Insertactivity(activity instance);
    partial void Updateactivity(activity instance);
    partial void Deleteactivity(activity instance);
    partial void InsertfamilyMemberDetail(familyMemberDetail instance);
    partial void UpdatefamilyMemberDetail(familyMemberDetail instance);
    partial void DeletefamilyMemberDetail(familyMemberDetail instance);
    partial void Insertmyzurichadviser(myzurichadviser instance);
    partial void Updatemyzurichadviser(myzurichadviser instance);
    partial void Deletemyzurichadviser(myzurichadviser instance);
    partial void Insertexceptionlog(exceptionlog instance);
    partial void Updateexceptionlog(exceptionlog instance);
    partial void Deleteexceptionlog(exceptionlog instance);
    partial void Insertsalesportalinfo(salesportalinfo instance);
    partial void Updatesalesportalinfo(salesportalinfo instance);
    partial void Deletesalesportalinfo(salesportalinfo instance);
    partial void Insertclonemappingid(clonemappingid instance);
    partial void Updateclonemappingid(clonemappingid instance);
    partial void Deleteclonemappingid(clonemappingid instance);
    partial void InsertinsuranceArrangementSaving(insuranceArrangementSaving instance);
    partial void UpdateinsuranceArrangementSaving(insuranceArrangementSaving instance);
    partial void DeleteinsuranceArrangementSaving(insuranceArrangementSaving instance);
    partial void InsertinsuranceArrangementRetirement(insuranceArrangementRetirement instance);
    partial void UpdateinsuranceArrangementRetirement(insuranceArrangementRetirement instance);
    partial void DeleteinsuranceArrangementRetirement(insuranceArrangementRetirement instance);
    partial void InsertinsuranceArrangementEducation(insuranceArrangementEducation instance);
    partial void UpdateinsuranceArrangementEducation(insuranceArrangementEducation instance);
    partial void DeleteinsuranceArrangementEducation(insuranceArrangementEducation instance);
    partial void Insertsavinggoal(savinggoal instance);
    partial void Updatesavinggoal(savinggoal instance);
    partial void Deletesavinggoal(savinggoal instance);
    partial void Insertpersonaldetail(personaldetail instance);
    partial void Updatepersonaldetail(personaldetail instance);
    partial void Deletepersonaldetail(personaldetail instance);
    partial void InsertpriorityDetail(priorityDetail instance);
    partial void UpdatepriorityDetail(priorityDetail instance);
    partial void DeletepriorityDetail(priorityDetail instance);
    partial void Inserteducationgoal(educationgoal instance);
    partial void Updateeducationgoal(educationgoal instance);
    partial void Deleteeducationgoal(educationgoal instance);
    partial void InsertassetAndLiability(assetAndLiability instance);
    partial void UpdateassetAndLiability(assetAndLiability instance);
    partial void DeleteassetAndLiability(assetAndLiability instance);
    partial void Insertretirementgoal(retirementgoal instance);
    partial void Updateretirementgoal(retirementgoal instance);
    partial void Deleteretirementgoal(retirementgoal instance);
    partial void InsertfamilyNeed(familyNeed instance);
    partial void UpdatefamilyNeed(familyNeed instance);
    partial void DeletefamilyNeed(familyNeed instance);
    partial void InsertincomeExpense(incomeExpense instance);
    partial void UpdateincomeExpense(incomeExpense instance);
    partial void DeleteincomeExpense(incomeExpense instance);
    partial void InsertCkaAssessment(CkaAssessment instance);
    partial void UpdateCkaAssessment(CkaAssessment instance);
    partial void DeleteCkaAssessment(CkaAssessment instance);
    partial void InsertmyNeed(myNeed instance);
    partial void UpdatemyNeed(myNeed instance);
    partial void DeletemyNeed(myNeed instance);
    #endregion

    public static class DbConnectionStringClass
    {
        public static string dbConnString;
        public static string checkdbconn;
    }

    static readonly object _object = new object();

    public static string getZurichConnectionString()
    {

        if (DbConnectionStringClass.dbConnString == null || DbConnectionStringClass.dbConnString == "")
        {
            string connectionString = "";

            //SPSecurity.RunWithElevatedPrivileges(delegate()
            //{

            lock (_object)
            {
                System.IO.FileStream fileStream = new System.IO.FileStream(@"C:\Program Files\Common Files\Microsoft Shared\Web Server Extensions\14\template\layouts\Zurich\config\config.xml", System.IO.FileMode.Open);

                XmlTextReader reader = new XmlTextReader(fileStream);

                while (reader.Read())
                {
                    if (reader.NodeType == XmlNodeType.Text)
                    {
                        connectionString = reader.Value;
                        break;
                    }
                }

                reader.Close();
                fileStream.Close();
            }
            //});

            DbConnectionStringClass.dbConnString = connectionString;
            DbConnectionStringClass.checkdbconn = "reading file";

            return connectionString;
        }
        else
        {
            DbConnectionStringClass.checkdbconn = "from static";
            return DbConnectionStringClass.dbConnString;
        }

    }

    public dbDataContext() :
        base(getZurichConnectionString(), mappingSource)
    {
        OnCreated();
    }
		
		public dbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<personalUseAssetsOther> personalUseAssetsOthers
		{
			get
			{
				return this.GetTable<personalUseAssetsOther>();
			}
		}
		
		public System.Data.Linq.Table<investedAssetOther> investedAssetOthers
		{
			get
			{
				return this.GetTable<investedAssetOther>();
			}
		}
		
		public System.Data.Linq.Table<liabilityOther> liabilityOthers
		{
			get
			{
				return this.GetTable<liabilityOther>();
			}
		}
		
		public System.Data.Linq.Table<existingassetsg> existingassetsgs
		{
			get
			{
				return this.GetTable<existingassetsg>();
			}
		}
		
		public System.Data.Linq.Table<familyNeedsAsset> familyNeedsAssets
		{
			get
			{
				return this.GetTable<familyNeedsAsset>();
			}
		}
		
		public System.Data.Linq.Table<myNeedsCriticalAsset> myNeedsCriticalAssets
		{
			get
			{
				return this.GetTable<myNeedsCriticalAsset>();
			}
		}
		
		public System.Data.Linq.Table<myNeedsDisabilityAsset> myNeedsDisabilityAssets
		{
			get
			{
				return this.GetTable<myNeedsDisabilityAsset>();
			}
		}
		
		public System.Data.Linq.Table<assumption> assumptions
		{
			get
			{
				return this.GetTable<assumption>();
			}
		}
		
		public System.Data.Linq.Table<existingassetrg> existingassetrgs
		{
			get
			{
				return this.GetTable<existingassetrg>();
			}
		}
		
		public System.Data.Linq.Table<countrycostofeducation> countrycostofeducations
		{
			get
			{
				return this.GetTable<countrycostofeducation>();
			}
		}
		
		public System.Data.Linq.Table<existingasseteg> existingassetegs
		{
			get
			{
				return this.GetTable<existingasseteg>();
			}
		}
		
		public System.Data.Linq.Table<RiskProfileAnalysis> RiskProfileAnalysis
		{
			get
			{
				return this.GetTable<RiskProfileAnalysis>();
			}
		}
		
		public System.Data.Linq.Table<incomeExpenseOther> incomeExpenseOthers
		{
			get
			{
				return this.GetTable<incomeExpenseOther>();
			}
		}
		
		public System.Data.Linq.Table<activitystatus> activitystatus
		{
			get
			{
				return this.GetTable<activitystatus>();
			}
		}
		
		public System.Data.Linq.Table<activity> activities
		{
			get
			{
				return this.GetTable<activity>();
			}
		}
		
		public System.Data.Linq.Table<familyMemberDetail> familyMemberDetails
		{
			get
			{
				return this.GetTable<familyMemberDetail>();
			}
		}
		
		public System.Data.Linq.Table<myzurichadviser> myzurichadvisers
		{
			get
			{
				return this.GetTable<myzurichadviser>();
			}
		}
		
		public System.Data.Linq.Table<exceptionlog> exceptionlogs
		{
			get
			{
				return this.GetTable<exceptionlog>();
			}
		}
		
		public System.Data.Linq.Table<salesportalinfo> salesportalinfos
		{
			get
			{
				return this.GetTable<salesportalinfo>();
			}
		}
		
		public System.Data.Linq.Table<clonemappingid> clonemappingids
		{
			get
			{
				return this.GetTable<clonemappingid>();
			}
		}
		
		public System.Data.Linq.Table<insuranceArrangementSaving> insuranceArrangementSavings
		{
			get
			{
				return this.GetTable<insuranceArrangementSaving>();
			}
		}
		
		public System.Data.Linq.Table<insuranceArrangementRetirement> insuranceArrangementRetirements
		{
			get
			{
				return this.GetTable<insuranceArrangementRetirement>();
			}
		}
		
		public System.Data.Linq.Table<insuranceArrangementEducation> insuranceArrangementEducations
		{
			get
			{
				return this.GetTable<insuranceArrangementEducation>();
			}
		}
		
		public System.Data.Linq.Table<savinggoal> savinggoals
		{
			get
			{
				return this.GetTable<savinggoal>();
			}
		}
		
		public System.Data.Linq.Table<personaldetail> personaldetails
		{
			get
			{
				return this.GetTable<personaldetail>();
			}
		}
		
		public System.Data.Linq.Table<priorityDetail> priorityDetails
		{
			get
			{
				return this.GetTable<priorityDetail>();
			}
		}
		
		public System.Data.Linq.Table<educationgoal> educationgoals
		{
			get
			{
				return this.GetTable<educationgoal>();
			}
		}
		
		public System.Data.Linq.Table<assetAndLiability> assetAndLiabilities
		{
			get
			{
				return this.GetTable<assetAndLiability>();
			}
		}
		
		public System.Data.Linq.Table<retirementgoal> retirementgoals
		{
			get
			{
				return this.GetTable<retirementgoal>();
			}
		}
		
		public System.Data.Linq.Table<familyNeed> familyNeeds
		{
			get
			{
				return this.GetTable<familyNeed>();
			}
		}
		
		public System.Data.Linq.Table<incomeExpense> incomeExpenses
		{
			get
			{
				return this.GetTable<incomeExpense>();
			}
		}
		
		public System.Data.Linq.Table<CkaAssessment> CkaAssessments
		{
			get
			{
				return this.GetTable<CkaAssessment>();
			}
		}
		
		public System.Data.Linq.Table<myNeed> myNeeds
		{
			get
			{
				return this.GetTable<myNeed>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.personalUseAssetsOthers")]
	public partial class personalUseAssetsOther : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _assetLiabilityId;
		
		private string _caseId;
		
		private string _assetDesc;
		
		private string _cpf;
		
		private string _cash;
		
		private System.Nullable<System.DateTime> _date;
		
		private EntityRef<assetAndLiability> _assetAndLiability;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnassetLiabilityIdChanging(int value);
    partial void OnassetLiabilityIdChanged();
    partial void OncaseIdChanging(string value);
    partial void OncaseIdChanged();
    partial void OnassetDescChanging(string value);
    partial void OnassetDescChanged();
    partial void OncpfChanging(string value);
    partial void OncpfChanged();
    partial void OncashChanging(string value);
    partial void OncashChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    #endregion
		
		public personalUseAssetsOther()
		{
			this._assetAndLiability = default(EntityRef<assetAndLiability>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_assetLiabilityId", DbType="Int NOT NULL")]
		public int assetLiabilityId
		{
			get
			{
				return this._assetLiabilityId;
			}
			set
			{
				if ((this._assetLiabilityId != value))
				{
					if (this._assetAndLiability.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnassetLiabilityIdChanging(value);
					this.SendPropertyChanging();
					this._assetLiabilityId = value;
					this.SendPropertyChanged("assetLiabilityId");
					this.OnassetLiabilityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_caseId", DbType="NVarChar(50)")]
		public string caseId
		{
			get
			{
				return this._caseId;
			}
			set
			{
				if ((this._caseId != value))
				{
					this.OncaseIdChanging(value);
					this.SendPropertyChanging();
					this._caseId = value;
					this.SendPropertyChanged("caseId");
					this.OncaseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_assetDesc", DbType="NVarChar(50)")]
		public string assetDesc
		{
			get
			{
				return this._assetDesc;
			}
			set
			{
				if ((this._assetDesc != value))
				{
					this.OnassetDescChanging(value);
					this.SendPropertyChanging();
					this._assetDesc = value;
					this.SendPropertyChanged("assetDesc");
					this.OnassetDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cpf", DbType="NVarChar(50)")]
		public string cpf
		{
			get
			{
				return this._cpf;
			}
			set
			{
				if ((this._cpf != value))
				{
					this.OncpfChanging(value);
					this.SendPropertyChanging();
					this._cpf = value;
					this.SendPropertyChanged("cpf");
					this.OncpfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cash", DbType="NVarChar(50)")]
		public string cash
		{
			get
			{
				return this._cash;
			}
			set
			{
				if ((this._cash != value))
				{
					this.OncashChanging(value);
					this.SendPropertyChanging();
					this._cash = value;
					this.SendPropertyChanged("cash");
					this.OncashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="assetAndLiability_personalUseAssetsOther", Storage="_assetAndLiability", ThisKey="assetLiabilityId", OtherKey="id", IsForeignKey=true)]
		public assetAndLiability assetAndLiability
		{
			get
			{
				return this._assetAndLiability.Entity;
			}
			set
			{
				assetAndLiability previousValue = this._assetAndLiability.Entity;
				if (((previousValue != value) 
							|| (this._assetAndLiability.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._assetAndLiability.Entity = null;
						previousValue.personalUseAssetsOthers.Remove(this);
					}
					this._assetAndLiability.Entity = value;
					if ((value != null))
					{
						value.personalUseAssetsOthers.Add(this);
						this._assetLiabilityId = value.id;
					}
					else
					{
						this._assetLiabilityId = default(int);
					}
					this.SendPropertyChanged("assetAndLiability");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.investedAssetOthers")]
	public partial class investedAssetOther : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _assetLiabilityId;
		
		private string _caseId;
		
		private string _assetDesc;
		
		private string _cash;
		
		private string _cpf;
		
		private System.Nullable<System.DateTime> _date;
		
		private EntityRef<assetAndLiability> _assetAndLiability;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnassetLiabilityIdChanging(int value);
    partial void OnassetLiabilityIdChanged();
    partial void OncaseIdChanging(string value);
    partial void OncaseIdChanged();
    partial void OnassetDescChanging(string value);
    partial void OnassetDescChanged();
    partial void OncashChanging(string value);
    partial void OncashChanged();
    partial void OncpfChanging(string value);
    partial void OncpfChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    #endregion
		
		public investedAssetOther()
		{
			this._assetAndLiability = default(EntityRef<assetAndLiability>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_assetLiabilityId", DbType="Int NOT NULL")]
		public int assetLiabilityId
		{
			get
			{
				return this._assetLiabilityId;
			}
			set
			{
				if ((this._assetLiabilityId != value))
				{
					if (this._assetAndLiability.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnassetLiabilityIdChanging(value);
					this.SendPropertyChanging();
					this._assetLiabilityId = value;
					this.SendPropertyChanged("assetLiabilityId");
					this.OnassetLiabilityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_caseId", DbType="NVarChar(50)")]
		public string caseId
		{
			get
			{
				return this._caseId;
			}
			set
			{
				if ((this._caseId != value))
				{
					this.OncaseIdChanging(value);
					this.SendPropertyChanging();
					this._caseId = value;
					this.SendPropertyChanged("caseId");
					this.OncaseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_assetDesc", DbType="NVarChar(50)")]
		public string assetDesc
		{
			get
			{
				return this._assetDesc;
			}
			set
			{
				if ((this._assetDesc != value))
				{
					this.OnassetDescChanging(value);
					this.SendPropertyChanging();
					this._assetDesc = value;
					this.SendPropertyChanged("assetDesc");
					this.OnassetDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cash", DbType="NVarChar(50)")]
		public string cash
		{
			get
			{
				return this._cash;
			}
			set
			{
				if ((this._cash != value))
				{
					this.OncashChanging(value);
					this.SendPropertyChanging();
					this._cash = value;
					this.SendPropertyChanged("cash");
					this.OncashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cpf", DbType="NVarChar(50)")]
		public string cpf
		{
			get
			{
				return this._cpf;
			}
			set
			{
				if ((this._cpf != value))
				{
					this.OncpfChanging(value);
					this.SendPropertyChanging();
					this._cpf = value;
					this.SendPropertyChanged("cpf");
					this.OncpfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="assetAndLiability_investedAssetOther", Storage="_assetAndLiability", ThisKey="assetLiabilityId", OtherKey="id", IsForeignKey=true)]
		public assetAndLiability assetAndLiability
		{
			get
			{
				return this._assetAndLiability.Entity;
			}
			set
			{
				assetAndLiability previousValue = this._assetAndLiability.Entity;
				if (((previousValue != value) 
							|| (this._assetAndLiability.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._assetAndLiability.Entity = null;
						previousValue.investedAssetOthers.Remove(this);
					}
					this._assetAndLiability.Entity = value;
					if ((value != null))
					{
						value.investedAssetOthers.Add(this);
						this._assetLiabilityId = value.id;
					}
					else
					{
						this._assetLiabilityId = default(int);
					}
					this.SendPropertyChanged("assetAndLiability");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.liabilityOthers")]
	public partial class liabilityOther : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _assetLiabilityId;
		
		private string _caseId;
		
		private string _liabilityDesc;
		
		private string _cash;
		
		private System.Nullable<System.DateTime> _date;
		
		private EntityRef<assetAndLiability> _assetAndLiability;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnassetLiabilityIdChanging(int value);
    partial void OnassetLiabilityIdChanged();
    partial void OncaseIdChanging(string value);
    partial void OncaseIdChanged();
    partial void OnliabilityDescChanging(string value);
    partial void OnliabilityDescChanged();
    partial void OncashChanging(string value);
    partial void OncashChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    #endregion
		
		public liabilityOther()
		{
			this._assetAndLiability = default(EntityRef<assetAndLiability>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_assetLiabilityId", DbType="Int NOT NULL")]
		public int assetLiabilityId
		{
			get
			{
				return this._assetLiabilityId;
			}
			set
			{
				if ((this._assetLiabilityId != value))
				{
					if (this._assetAndLiability.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnassetLiabilityIdChanging(value);
					this.SendPropertyChanging();
					this._assetLiabilityId = value;
					this.SendPropertyChanged("assetLiabilityId");
					this.OnassetLiabilityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_caseId", DbType="NVarChar(50)")]
		public string caseId
		{
			get
			{
				return this._caseId;
			}
			set
			{
				if ((this._caseId != value))
				{
					this.OncaseIdChanging(value);
					this.SendPropertyChanging();
					this._caseId = value;
					this.SendPropertyChanged("caseId");
					this.OncaseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_liabilityDesc", DbType="NVarChar(50)")]
		public string liabilityDesc
		{
			get
			{
				return this._liabilityDesc;
			}
			set
			{
				if ((this._liabilityDesc != value))
				{
					this.OnliabilityDescChanging(value);
					this.SendPropertyChanging();
					this._liabilityDesc = value;
					this.SendPropertyChanged("liabilityDesc");
					this.OnliabilityDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cash", DbType="NVarChar(50)")]
		public string cash
		{
			get
			{
				return this._cash;
			}
			set
			{
				if ((this._cash != value))
				{
					this.OncashChanging(value);
					this.SendPropertyChanging();
					this._cash = value;
					this.SendPropertyChanged("cash");
					this.OncashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="assetAndLiability_liabilityOther", Storage="_assetAndLiability", ThisKey="assetLiabilityId", OtherKey="id", IsForeignKey=true)]
		public assetAndLiability assetAndLiability
		{
			get
			{
				return this._assetAndLiability.Entity;
			}
			set
			{
				assetAndLiability previousValue = this._assetAndLiability.Entity;
				if (((previousValue != value) 
							|| (this._assetAndLiability.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._assetAndLiability.Entity = null;
						previousValue.liabilityOthers.Remove(this);
					}
					this._assetAndLiability.Entity = value;
					if ((value != null))
					{
						value.liabilityOthers.Add(this);
						this._assetLiabilityId = value.id;
					}
					else
					{
						this._assetLiabilityId = default(int);
					}
					this.SendPropertyChanged("assetAndLiability");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.existingassetsg")]
	public partial class existingassetsg : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _asset;
		
		private string _presentvalue;
		
		private string _percentpa;
		
		private int _savinggoalsid;
		
		private EntityRef<savinggoal> _savinggoal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnassetChanging(string value);
    partial void OnassetChanged();
    partial void OnpresentvalueChanging(string value);
    partial void OnpresentvalueChanged();
    partial void OnpercentpaChanging(string value);
    partial void OnpercentpaChanged();
    partial void OnsavinggoalsidChanging(int value);
    partial void OnsavinggoalsidChanged();
    #endregion
		
		public existingassetsg()
		{
			this._savinggoal = default(EntityRef<savinggoal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_asset", DbType="NVarChar(50)")]
		public string asset
		{
			get
			{
				return this._asset;
			}
			set
			{
				if ((this._asset != value))
				{
					this.OnassetChanging(value);
					this.SendPropertyChanging();
					this._asset = value;
					this.SendPropertyChanged("asset");
					this.OnassetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_presentvalue", DbType="NVarChar(50)")]
		public string presentvalue
		{
			get
			{
				return this._presentvalue;
			}
			set
			{
				if ((this._presentvalue != value))
				{
					this.OnpresentvalueChanging(value);
					this.SendPropertyChanging();
					this._presentvalue = value;
					this.SendPropertyChanged("presentvalue");
					this.OnpresentvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_percentpa", DbType="NVarChar(3)")]
		public string percentpa
		{
			get
			{
				return this._percentpa;
			}
			set
			{
				if ((this._percentpa != value))
				{
					this.OnpercentpaChanging(value);
					this.SendPropertyChanging();
					this._percentpa = value;
					this.SendPropertyChanged("percentpa");
					this.OnpercentpaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_savinggoalsid", DbType="Int NOT NULL")]
		public int savinggoalsid
		{
			get
			{
				return this._savinggoalsid;
			}
			set
			{
				if ((this._savinggoalsid != value))
				{
					if (this._savinggoal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsavinggoalsidChanging(value);
					this.SendPropertyChanging();
					this._savinggoalsid = value;
					this.SendPropertyChanged("savinggoalsid");
					this.OnsavinggoalsidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="savinggoal_existingassetsg", Storage="_savinggoal", ThisKey="savinggoalsid", OtherKey="id", IsForeignKey=true)]
		public savinggoal savinggoal
		{
			get
			{
				return this._savinggoal.Entity;
			}
			set
			{
				savinggoal previousValue = this._savinggoal.Entity;
				if (((previousValue != value) 
							|| (this._savinggoal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._savinggoal.Entity = null;
						previousValue.existingassetsgs.Remove(this);
					}
					this._savinggoal.Entity = value;
					if ((value != null))
					{
						value.existingassetsgs.Add(this);
						this._savinggoalsid = value.id;
					}
					else
					{
						this._savinggoalsid = default(int);
					}
					this.SendPropertyChanged("savinggoal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.familyNeedsAssets")]
	public partial class familyNeedsAsset : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _familyNeedId;
		
		private string _asset;
		
		private string _presentValue;
		
		private EntityRef<familyNeed> _familyNeed;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnfamilyNeedIdChanging(int value);
    partial void OnfamilyNeedIdChanged();
    partial void OnassetChanging(string value);
    partial void OnassetChanged();
    partial void OnpresentValueChanging(string value);
    partial void OnpresentValueChanged();
    #endregion
		
		public familyNeedsAsset()
		{
			this._familyNeed = default(EntityRef<familyNeed>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_familyNeedId", DbType="Int NOT NULL")]
		public int familyNeedId
		{
			get
			{
				return this._familyNeedId;
			}
			set
			{
				if ((this._familyNeedId != value))
				{
					if (this._familyNeed.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfamilyNeedIdChanging(value);
					this.SendPropertyChanging();
					this._familyNeedId = value;
					this.SendPropertyChanged("familyNeedId");
					this.OnfamilyNeedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_asset", DbType="NVarChar(50)")]
		public string asset
		{
			get
			{
				return this._asset;
			}
			set
			{
				if ((this._asset != value))
				{
					this.OnassetChanging(value);
					this.SendPropertyChanging();
					this._asset = value;
					this.SendPropertyChanged("asset");
					this.OnassetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_presentValue", DbType="NVarChar(50)")]
		public string presentValue
		{
			get
			{
				return this._presentValue;
			}
			set
			{
				if ((this._presentValue != value))
				{
					this.OnpresentValueChanging(value);
					this.SendPropertyChanging();
					this._presentValue = value;
					this.SendPropertyChanged("presentValue");
					this.OnpresentValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="familyNeed_familyNeedsAsset", Storage="_familyNeed", ThisKey="familyNeedId", OtherKey="id", IsForeignKey=true)]
		public familyNeed familyNeed
		{
			get
			{
				return this._familyNeed.Entity;
			}
			set
			{
				familyNeed previousValue = this._familyNeed.Entity;
				if (((previousValue != value) 
							|| (this._familyNeed.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._familyNeed.Entity = null;
						previousValue.familyNeedsAssets.Remove(this);
					}
					this._familyNeed.Entity = value;
					if ((value != null))
					{
						value.familyNeedsAssets.Add(this);
						this._familyNeedId = value.id;
					}
					else
					{
						this._familyNeedId = default(int);
					}
					this.SendPropertyChanged("familyNeed");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.myNeedsCriticalAssets")]
	public partial class myNeedsCriticalAsset : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _myNeedId;
		
		private string _asset;
		
		private string _presentValue;
		
		private EntityRef<myNeed> _myNeed;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnmyNeedIdChanging(int value);
    partial void OnmyNeedIdChanged();
    partial void OnassetChanging(string value);
    partial void OnassetChanged();
    partial void OnpresentValueChanging(string value);
    partial void OnpresentValueChanged();
    #endregion
		
		public myNeedsCriticalAsset()
		{
			this._myNeed = default(EntityRef<myNeed>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_myNeedId", DbType="Int NOT NULL")]
		public int myNeedId
		{
			get
			{
				return this._myNeedId;
			}
			set
			{
				if ((this._myNeedId != value))
				{
					if (this._myNeed.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmyNeedIdChanging(value);
					this.SendPropertyChanging();
					this._myNeedId = value;
					this.SendPropertyChanged("myNeedId");
					this.OnmyNeedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_asset", DbType="NVarChar(50)")]
		public string asset
		{
			get
			{
				return this._asset;
			}
			set
			{
				if ((this._asset != value))
				{
					this.OnassetChanging(value);
					this.SendPropertyChanging();
					this._asset = value;
					this.SendPropertyChanged("asset");
					this.OnassetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_presentValue", DbType="NVarChar(50)")]
		public string presentValue
		{
			get
			{
				return this._presentValue;
			}
			set
			{
				if ((this._presentValue != value))
				{
					this.OnpresentValueChanging(value);
					this.SendPropertyChanging();
					this._presentValue = value;
					this.SendPropertyChanged("presentValue");
					this.OnpresentValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="myNeed_myNeedsCriticalAsset", Storage="_myNeed", ThisKey="myNeedId", OtherKey="id", IsForeignKey=true)]
		public myNeed myNeed
		{
			get
			{
				return this._myNeed.Entity;
			}
			set
			{
				myNeed previousValue = this._myNeed.Entity;
				if (((previousValue != value) 
							|| (this._myNeed.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._myNeed.Entity = null;
						previousValue.myNeedsCriticalAssets.Remove(this);
					}
					this._myNeed.Entity = value;
					if ((value != null))
					{
						value.myNeedsCriticalAssets.Add(this);
						this._myNeedId = value.id;
					}
					else
					{
						this._myNeedId = default(int);
					}
					this.SendPropertyChanged("myNeed");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.myNeedsDisabilityAssets")]
	public partial class myNeedsDisabilityAsset : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _myNeedId;
		
		private string _asset;
		
		private string _presentValue;
		
		private EntityRef<myNeed> _myNeed;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnmyNeedIdChanging(int value);
    partial void OnmyNeedIdChanged();
    partial void OnassetChanging(string value);
    partial void OnassetChanged();
    partial void OnpresentValueChanging(string value);
    partial void OnpresentValueChanged();
    #endregion
		
		public myNeedsDisabilityAsset()
		{
			this._myNeed = default(EntityRef<myNeed>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_myNeedId", DbType="Int NOT NULL")]
		public int myNeedId
		{
			get
			{
				return this._myNeedId;
			}
			set
			{
				if ((this._myNeedId != value))
				{
					if (this._myNeed.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmyNeedIdChanging(value);
					this.SendPropertyChanging();
					this._myNeedId = value;
					this.SendPropertyChanged("myNeedId");
					this.OnmyNeedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_asset", DbType="NVarChar(50)")]
		public string asset
		{
			get
			{
				return this._asset;
			}
			set
			{
				if ((this._asset != value))
				{
					this.OnassetChanging(value);
					this.SendPropertyChanging();
					this._asset = value;
					this.SendPropertyChanged("asset");
					this.OnassetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_presentValue", DbType="NVarChar(50)")]
		public string presentValue
		{
			get
			{
				return this._presentValue;
			}
			set
			{
				if ((this._presentValue != value))
				{
					this.OnpresentValueChanging(value);
					this.SendPropertyChanging();
					this._presentValue = value;
					this.SendPropertyChanged("presentValue");
					this.OnpresentValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="myNeed_myNeedsDisabilityAsset", Storage="_myNeed", ThisKey="myNeedId", OtherKey="id", IsForeignKey=true)]
		public myNeed myNeed
		{
			get
			{
				return this._myNeed.Entity;
			}
			set
			{
				myNeed previousValue = this._myNeed.Entity;
				if (((previousValue != value) 
							|| (this._myNeed.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._myNeed.Entity = null;
						previousValue.myNeedsDisabilityAssets.Remove(this);
					}
					this._myNeed.Entity = value;
					if ((value != null))
					{
						value.myNeedsDisabilityAssets.Add(this);
						this._myNeedId = value.id;
					}
					else
					{
						this._myNeedId = default(int);
					}
					this.SendPropertyChanged("myNeed");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.assumption")]
	public partial class assumption : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _id;
		
		private string _name;
		
		private string _desc;
		
		private string _code;
		
		private System.Nullable<double> _percentage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(short value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndescChanging(string value);
    partial void OndescChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OnpercentageChanging(System.Nullable<double> value);
    partial void OnpercentageChanged();
    #endregion
		
		public assumption()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(90)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[desc]", Storage="_desc", DbType="NVarChar(90)")]
		public string desc
		{
			get
			{
				return this._desc;
			}
			set
			{
				if ((this._desc != value))
				{
					this.OndescChanging(value);
					this.SendPropertyChanging();
					this._desc = value;
					this.SendPropertyChanged("desc");
					this.OndescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="NChar(10)")]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_percentage", DbType="Float")]
		public System.Nullable<double> percentage
		{
			get
			{
				return this._percentage;
			}
			set
			{
				if ((this._percentage != value))
				{
					this.OnpercentageChanging(value);
					this.SendPropertyChanging();
					this._percentage = value;
					this.SendPropertyChanged("percentage");
					this.OnpercentageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.existingassetrg")]
	public partial class existingassetrg : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _asset;
		
		private string _presentvalue;
		
		private string _percentpa;
		
		private int _retirementgoalsid;
		
		private EntityRef<retirementgoal> _retirementgoal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnassetChanging(string value);
    partial void OnassetChanged();
    partial void OnpresentvalueChanging(string value);
    partial void OnpresentvalueChanged();
    partial void OnpercentpaChanging(string value);
    partial void OnpercentpaChanged();
    partial void OnretirementgoalsidChanging(int value);
    partial void OnretirementgoalsidChanged();
    #endregion
		
		public existingassetrg()
		{
			this._retirementgoal = default(EntityRef<retirementgoal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_asset", DbType="NVarChar(50)")]
		public string asset
		{
			get
			{
				return this._asset;
			}
			set
			{
				if ((this._asset != value))
				{
					this.OnassetChanging(value);
					this.SendPropertyChanging();
					this._asset = value;
					this.SendPropertyChanged("asset");
					this.OnassetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_presentvalue", DbType="NVarChar(50)")]
		public string presentvalue
		{
			get
			{
				return this._presentvalue;
			}
			set
			{
				if ((this._presentvalue != value))
				{
					this.OnpresentvalueChanging(value);
					this.SendPropertyChanging();
					this._presentvalue = value;
					this.SendPropertyChanged("presentvalue");
					this.OnpresentvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_percentpa", DbType="NVarChar(3)")]
		public string percentpa
		{
			get
			{
				return this._percentpa;
			}
			set
			{
				if ((this._percentpa != value))
				{
					this.OnpercentpaChanging(value);
					this.SendPropertyChanging();
					this._percentpa = value;
					this.SendPropertyChanged("percentpa");
					this.OnpercentpaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_retirementgoalsid", DbType="Int NOT NULL")]
		public int retirementgoalsid
		{
			get
			{
				return this._retirementgoalsid;
			}
			set
			{
				if ((this._retirementgoalsid != value))
				{
					if (this._retirementgoal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnretirementgoalsidChanging(value);
					this.SendPropertyChanging();
					this._retirementgoalsid = value;
					this.SendPropertyChanged("retirementgoalsid");
					this.OnretirementgoalsidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="retirementgoal_existingassetrg", Storage="_retirementgoal", ThisKey="retirementgoalsid", OtherKey="id", IsForeignKey=true)]
		public retirementgoal retirementgoal
		{
			get
			{
				return this._retirementgoal.Entity;
			}
			set
			{
				retirementgoal previousValue = this._retirementgoal.Entity;
				if (((previousValue != value) 
							|| (this._retirementgoal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._retirementgoal.Entity = null;
						previousValue.existingassetrgs.Remove(this);
					}
					this._retirementgoal.Entity = value;
					if ((value != null))
					{
						value.existingassetrgs.Add(this);
						this._retirementgoalsid = value.id;
					}
					else
					{
						this._retirementgoalsid = default(int);
					}
					this.SendPropertyChanged("retirementgoal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.countrycostofeducation")]
	public partial class countrycostofeducation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _country;
		
		private string _costofeducation;
		
		private EntitySet<educationgoal> _educationgoals;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncountryChanging(string value);
    partial void OncountryChanged();
    partial void OncostofeducationChanging(string value);
    partial void OncostofeducationChanged();
    #endregion
		
		public countrycostofeducation()
		{
			this._educationgoals = new EntitySet<educationgoal>(new Action<educationgoal>(this.attach_educationgoals), new Action<educationgoal>(this.detach_educationgoals));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string country
		{
			get
			{
				return this._country;
			}
			set
			{
				if ((this._country != value))
				{
					this.OncountryChanging(value);
					this.SendPropertyChanging();
					this._country = value;
					this.SendPropertyChanged("country");
					this.OncountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_costofeducation", DbType="NVarChar(50)")]
		public string costofeducation
		{
			get
			{
				return this._costofeducation;
			}
			set
			{
				if ((this._costofeducation != value))
				{
					this.OncostofeducationChanging(value);
					this.SendPropertyChanging();
					this._costofeducation = value;
					this.SendPropertyChanged("costofeducation");
					this.OncostofeducationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="countrycostofeducation_educationgoal", Storage="_educationgoals", ThisKey="id", OtherKey="countryofstudyid")]
		public EntitySet<educationgoal> educationgoals
		{
			get
			{
				return this._educationgoals;
			}
			set
			{
				this._educationgoals.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_educationgoals(educationgoal entity)
		{
			this.SendPropertyChanging();
			entity.countrycostofeducation = this;
		}
		
		private void detach_educationgoals(educationgoal entity)
		{
			this.SendPropertyChanging();
			entity.countrycostofeducation = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.existingasseteg")]
	public partial class existingasseteg : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _asset;
		
		private string _presentvalue;
		
		private string _percentpa;
		
		private int _educationgoalsid;
		
		private EntityRef<educationgoal> _educationgoal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnassetChanging(string value);
    partial void OnassetChanged();
    partial void OnpresentvalueChanging(string value);
    partial void OnpresentvalueChanged();
    partial void OnpercentpaChanging(string value);
    partial void OnpercentpaChanged();
    partial void OneducationgoalsidChanging(int value);
    partial void OneducationgoalsidChanged();
    #endregion
		
		public existingasseteg()
		{
			this._educationgoal = default(EntityRef<educationgoal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_asset", DbType="NVarChar(50)")]
		public string asset
		{
			get
			{
				return this._asset;
			}
			set
			{
				if ((this._asset != value))
				{
					this.OnassetChanging(value);
					this.SendPropertyChanging();
					this._asset = value;
					this.SendPropertyChanged("asset");
					this.OnassetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_presentvalue", DbType="NVarChar(50)")]
		public string presentvalue
		{
			get
			{
				return this._presentvalue;
			}
			set
			{
				if ((this._presentvalue != value))
				{
					this.OnpresentvalueChanging(value);
					this.SendPropertyChanging();
					this._presentvalue = value;
					this.SendPropertyChanged("presentvalue");
					this.OnpresentvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_percentpa", DbType="NVarChar(3)")]
		public string percentpa
		{
			get
			{
				return this._percentpa;
			}
			set
			{
				if ((this._percentpa != value))
				{
					this.OnpercentpaChanging(value);
					this.SendPropertyChanging();
					this._percentpa = value;
					this.SendPropertyChanged("percentpa");
					this.OnpercentpaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_educationgoalsid", DbType="Int NOT NULL")]
		public int educationgoalsid
		{
			get
			{
				return this._educationgoalsid;
			}
			set
			{
				if ((this._educationgoalsid != value))
				{
					if (this._educationgoal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OneducationgoalsidChanging(value);
					this.SendPropertyChanging();
					this._educationgoalsid = value;
					this.SendPropertyChanged("educationgoalsid");
					this.OneducationgoalsidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="educationgoal_existingasseteg", Storage="_educationgoal", ThisKey="educationgoalsid", OtherKey="id", IsForeignKey=true)]
		public educationgoal educationgoal
		{
			get
			{
				return this._educationgoal.Entity;
			}
			set
			{
				educationgoal previousValue = this._educationgoal.Entity;
				if (((previousValue != value) 
							|| (this._educationgoal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._educationgoal.Entity = null;
						previousValue.existingassetegs.Remove(this);
					}
					this._educationgoal.Entity = value;
					if ((value != null))
					{
						value.existingassetegs.Add(this);
						this._educationgoalsid = value.id;
					}
					else
					{
						this._educationgoalsid = default(int);
					}
					this.SendPropertyChanged("educationgoal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RiskProfileAnalysis")]
	public partial class RiskProfileAnalysis : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _riskApetiteQuestion1option1;
		
		private string _riskApetiteQuestion1option2;
		
		private string _riskApetiteQuestion1option3;
		
		private string _riskApetiteQuestion1option4;
		
		private string _riskApetiteQuestion1option5;
		
		private string _riskApetiteQuestion1option6;
		
		private string _riskApetiteQuestion2option1;
		
		private string _riskApetiteQuestion2option2;
		
		private string _riskApetiteQuestion2option3;
		
		private string _riskApetiteQuestion2option4;
		
		private string _riskApetiteQuestion3option1;
		
		private string _riskApetiteQuestion3option2;
		
		private string _riskApetiteQuestion3option3;
		
		private string _riskApetiteQuestion3option4;
		
		private string _riskApetiteQuestion3option5;
		
		private string _riskApetiteQuestion4option1;
		
		private string _riskApetiteQuestion4option2;
		
		private string _riskApetiteQuestion4option3;
		
		private string _measuringRiskTakingAbilityQuestion1option1;
		
		private string _measuringRiskTakingAbilityQuestion1option2;
		
		private string _measuringRiskTakingAbilityQuestion1option3;
		
		private string _measuringRiskTakingAbilityQuestion1option4;
		
		private string _measuringRiskTakingAbilityQuestion2option1;
		
		private string _measuringRiskTakingAbilityQuestion2option2;
		
		private string _measuringRiskTakingAbilityQuestion2option3;
		
		private string _measuringRiskTakingAbilityQuestion3option1;
		
		private string _measuringRiskTakingAbilityQuestion3option2;
		
		private string _measuringRiskTakingAbilityQuestion3option3;
		
		private string _measuringRiskTakingAbilityQuestion3option4;
		
		private string _measuringRiskTakingAbilityQuestion4option1;
		
		private string _measuringRiskTakingAbilityQuestion4option2;
		
		private string _measuringRiskTakingAbilityQuestion4option3;
		
		private string _measuringRiskTakingAbilityQuestion4option4;
		
		private string _agreeWithRiskProfileoption1;
		
		private string _agreeWithRiskProfileoption2;
		
		private string _riskProfileValue;
		
		private string _caseId;
		
		private string _riskProfileName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnriskApetiteQuestion1option1Changing(string value);
    partial void OnriskApetiteQuestion1option1Changed();
    partial void OnriskApetiteQuestion1option2Changing(string value);
    partial void OnriskApetiteQuestion1option2Changed();
    partial void OnriskApetiteQuestion1option3Changing(string value);
    partial void OnriskApetiteQuestion1option3Changed();
    partial void OnriskApetiteQuestion1option4Changing(string value);
    partial void OnriskApetiteQuestion1option4Changed();
    partial void OnriskApetiteQuestion1option5Changing(string value);
    partial void OnriskApetiteQuestion1option5Changed();
    partial void OnriskApetiteQuestion1option6Changing(string value);
    partial void OnriskApetiteQuestion1option6Changed();
    partial void OnriskApetiteQuestion2option1Changing(string value);
    partial void OnriskApetiteQuestion2option1Changed();
    partial void OnriskApetiteQuestion2option2Changing(string value);
    partial void OnriskApetiteQuestion2option2Changed();
    partial void OnriskApetiteQuestion2option3Changing(string value);
    partial void OnriskApetiteQuestion2option3Changed();
    partial void OnriskApetiteQuestion2option4Changing(string value);
    partial void OnriskApetiteQuestion2option4Changed();
    partial void OnriskApetiteQuestion3option1Changing(string value);
    partial void OnriskApetiteQuestion3option1Changed();
    partial void OnriskApetiteQuestion3option2Changing(string value);
    partial void OnriskApetiteQuestion3option2Changed();
    partial void OnriskApetiteQuestion3option3Changing(string value);
    partial void OnriskApetiteQuestion3option3Changed();
    partial void OnriskApetiteQuestion3option4Changing(string value);
    partial void OnriskApetiteQuestion3option4Changed();
    partial void OnriskApetiteQuestion3option5Changing(string value);
    partial void OnriskApetiteQuestion3option5Changed();
    partial void OnriskApetiteQuestion4option1Changing(string value);
    partial void OnriskApetiteQuestion4option1Changed();
    partial void OnriskApetiteQuestion4option2Changing(string value);
    partial void OnriskApetiteQuestion4option2Changed();
    partial void OnriskApetiteQuestion4option3Changing(string value);
    partial void OnriskApetiteQuestion4option3Changed();
    partial void OnmeasuringRiskTakingAbilityQuestion1option1Changing(string value);
    partial void OnmeasuringRiskTakingAbilityQuestion1option1Changed();
    partial void OnmeasuringRiskTakingAbilityQuestion1option2Changing(string value);
    partial void OnmeasuringRiskTakingAbilityQuestion1option2Changed();
    partial void OnmeasuringRiskTakingAbilityQuestion1option3Changing(string value);
    partial void OnmeasuringRiskTakingAbilityQuestion1option3Changed();
    partial void OnmeasuringRiskTakingAbilityQuestion1option4Changing(string value);
    partial void OnmeasuringRiskTakingAbilityQuestion1option4Changed();
    partial void OnmeasuringRiskTakingAbilityQuestion2option1Changing(string value);
    partial void OnmeasuringRiskTakingAbilityQuestion2option1Changed();
    partial void OnmeasuringRiskTakingAbilityQuestion2option2Changing(string value);
    partial void OnmeasuringRiskTakingAbilityQuestion2option2Changed();
    partial void OnmeasuringRiskTakingAbilityQuestion2option3Changing(string value);
    partial void OnmeasuringRiskTakingAbilityQuestion2option3Changed();
    partial void OnmeasuringRiskTakingAbilityQuestion3option1Changing(string value);
    partial void OnmeasuringRiskTakingAbilityQuestion3option1Changed();
    partial void OnmeasuringRiskTakingAbilityQuestion3option2Changing(string value);
    partial void OnmeasuringRiskTakingAbilityQuestion3option2Changed();
    partial void OnmeasuringRiskTakingAbilityQuestion3option3Changing(string value);
    partial void OnmeasuringRiskTakingAbilityQuestion3option3Changed();
    partial void OnmeasuringRiskTakingAbilityQuestion3option4Changing(string value);
    partial void OnmeasuringRiskTakingAbilityQuestion3option4Changed();
    partial void OnmeasuringRiskTakingAbilityQuestion4option1Changing(string value);
    partial void OnmeasuringRiskTakingAbilityQuestion4option1Changed();
    partial void OnmeasuringRiskTakingAbilityQuestion4option2Changing(string value);
    partial void OnmeasuringRiskTakingAbilityQuestion4option2Changed();
    partial void OnmeasuringRiskTakingAbilityQuestion4option3Changing(string value);
    partial void OnmeasuringRiskTakingAbilityQuestion4option3Changed();
    partial void OnmeasuringRiskTakingAbilityQuestion4option4Changing(string value);
    partial void OnmeasuringRiskTakingAbilityQuestion4option4Changed();
    partial void OnagreeWithRiskProfileoption1Changing(string value);
    partial void OnagreeWithRiskProfileoption1Changed();
    partial void OnagreeWithRiskProfileoption2Changing(string value);
    partial void OnagreeWithRiskProfileoption2Changed();
    partial void OnriskProfileValueChanging(string value);
    partial void OnriskProfileValueChanged();
    partial void OncaseIdChanging(string value);
    partial void OncaseIdChanged();
    partial void OnriskProfileNameChanging(string value);
    partial void OnriskProfileNameChanged();
    #endregion
		
		public RiskProfileAnalysis()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_riskApetiteQuestion1option1", DbType="NVarChar(10)")]
		public string riskApetiteQuestion1option1
		{
			get
			{
				return this._riskApetiteQuestion1option1;
			}
			set
			{
				if ((this._riskApetiteQuestion1option1 != value))
				{
					this.OnriskApetiteQuestion1option1Changing(value);
					this.SendPropertyChanging();
					this._riskApetiteQuestion1option1 = value;
					this.SendPropertyChanged("riskApetiteQuestion1option1");
					this.OnriskApetiteQuestion1option1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_riskApetiteQuestion1option2", DbType="NVarChar(10)")]
		public string riskApetiteQuestion1option2
		{
			get
			{
				return this._riskApetiteQuestion1option2;
			}
			set
			{
				if ((this._riskApetiteQuestion1option2 != value))
				{
					this.OnriskApetiteQuestion1option2Changing(value);
					this.SendPropertyChanging();
					this._riskApetiteQuestion1option2 = value;
					this.SendPropertyChanged("riskApetiteQuestion1option2");
					this.OnriskApetiteQuestion1option2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_riskApetiteQuestion1option3", DbType="NVarChar(10)")]
		public string riskApetiteQuestion1option3
		{
			get
			{
				return this._riskApetiteQuestion1option3;
			}
			set
			{
				if ((this._riskApetiteQuestion1option3 != value))
				{
					this.OnriskApetiteQuestion1option3Changing(value);
					this.SendPropertyChanging();
					this._riskApetiteQuestion1option3 = value;
					this.SendPropertyChanged("riskApetiteQuestion1option3");
					this.OnriskApetiteQuestion1option3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_riskApetiteQuestion1option4", DbType="NVarChar(10)")]
		public string riskApetiteQuestion1option4
		{
			get
			{
				return this._riskApetiteQuestion1option4;
			}
			set
			{
				if ((this._riskApetiteQuestion1option4 != value))
				{
					this.OnriskApetiteQuestion1option4Changing(value);
					this.SendPropertyChanging();
					this._riskApetiteQuestion1option4 = value;
					this.SendPropertyChanged("riskApetiteQuestion1option4");
					this.OnriskApetiteQuestion1option4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_riskApetiteQuestion1option5", DbType="NVarChar(10)")]
		public string riskApetiteQuestion1option5
		{
			get
			{
				return this._riskApetiteQuestion1option5;
			}
			set
			{
				if ((this._riskApetiteQuestion1option5 != value))
				{
					this.OnriskApetiteQuestion1option5Changing(value);
					this.SendPropertyChanging();
					this._riskApetiteQuestion1option5 = value;
					this.SendPropertyChanged("riskApetiteQuestion1option5");
					this.OnriskApetiteQuestion1option5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_riskApetiteQuestion1option6", DbType="NVarChar(10)")]
		public string riskApetiteQuestion1option6
		{
			get
			{
				return this._riskApetiteQuestion1option6;
			}
			set
			{
				if ((this._riskApetiteQuestion1option6 != value))
				{
					this.OnriskApetiteQuestion1option6Changing(value);
					this.SendPropertyChanging();
					this._riskApetiteQuestion1option6 = value;
					this.SendPropertyChanged("riskApetiteQuestion1option6");
					this.OnriskApetiteQuestion1option6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_riskApetiteQuestion2option1", DbType="NVarChar(10)")]
		public string riskApetiteQuestion2option1
		{
			get
			{
				return this._riskApetiteQuestion2option1;
			}
			set
			{
				if ((this._riskApetiteQuestion2option1 != value))
				{
					this.OnriskApetiteQuestion2option1Changing(value);
					this.SendPropertyChanging();
					this._riskApetiteQuestion2option1 = value;
					this.SendPropertyChanged("riskApetiteQuestion2option1");
					this.OnriskApetiteQuestion2option1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_riskApetiteQuestion2option2", DbType="NVarChar(10)")]
		public string riskApetiteQuestion2option2
		{
			get
			{
				return this._riskApetiteQuestion2option2;
			}
			set
			{
				if ((this._riskApetiteQuestion2option2 != value))
				{
					this.OnriskApetiteQuestion2option2Changing(value);
					this.SendPropertyChanging();
					this._riskApetiteQuestion2option2 = value;
					this.SendPropertyChanged("riskApetiteQuestion2option2");
					this.OnriskApetiteQuestion2option2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_riskApetiteQuestion2option3", DbType="NVarChar(10)")]
		public string riskApetiteQuestion2option3
		{
			get
			{
				return this._riskApetiteQuestion2option3;
			}
			set
			{
				if ((this._riskApetiteQuestion2option3 != value))
				{
					this.OnriskApetiteQuestion2option3Changing(value);
					this.SendPropertyChanging();
					this._riskApetiteQuestion2option3 = value;
					this.SendPropertyChanged("riskApetiteQuestion2option3");
					this.OnriskApetiteQuestion2option3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_riskApetiteQuestion2option4", DbType="NVarChar(10)")]
		public string riskApetiteQuestion2option4
		{
			get
			{
				return this._riskApetiteQuestion2option4;
			}
			set
			{
				if ((this._riskApetiteQuestion2option4 != value))
				{
					this.OnriskApetiteQuestion2option4Changing(value);
					this.SendPropertyChanging();
					this._riskApetiteQuestion2option4 = value;
					this.SendPropertyChanged("riskApetiteQuestion2option4");
					this.OnriskApetiteQuestion2option4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_riskApetiteQuestion3option1", DbType="NVarChar(10)")]
		public string riskApetiteQuestion3option1
		{
			get
			{
				return this._riskApetiteQuestion3option1;
			}
			set
			{
				if ((this._riskApetiteQuestion3option1 != value))
				{
					this.OnriskApetiteQuestion3option1Changing(value);
					this.SendPropertyChanging();
					this._riskApetiteQuestion3option1 = value;
					this.SendPropertyChanged("riskApetiteQuestion3option1");
					this.OnriskApetiteQuestion3option1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_riskApetiteQuestion3option2", DbType="NVarChar(10)")]
		public string riskApetiteQuestion3option2
		{
			get
			{
				return this._riskApetiteQuestion3option2;
			}
			set
			{
				if ((this._riskApetiteQuestion3option2 != value))
				{
					this.OnriskApetiteQuestion3option2Changing(value);
					this.SendPropertyChanging();
					this._riskApetiteQuestion3option2 = value;
					this.SendPropertyChanged("riskApetiteQuestion3option2");
					this.OnriskApetiteQuestion3option2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_riskApetiteQuestion3option3", DbType="NVarChar(10)")]
		public string riskApetiteQuestion3option3
		{
			get
			{
				return this._riskApetiteQuestion3option3;
			}
			set
			{
				if ((this._riskApetiteQuestion3option3 != value))
				{
					this.OnriskApetiteQuestion3option3Changing(value);
					this.SendPropertyChanging();
					this._riskApetiteQuestion3option3 = value;
					this.SendPropertyChanged("riskApetiteQuestion3option3");
					this.OnriskApetiteQuestion3option3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_riskApetiteQuestion3option4", DbType="NVarChar(10)")]
		public string riskApetiteQuestion3option4
		{
			get
			{
				return this._riskApetiteQuestion3option4;
			}
			set
			{
				if ((this._riskApetiteQuestion3option4 != value))
				{
					this.OnriskApetiteQuestion3option4Changing(value);
					this.SendPropertyChanging();
					this._riskApetiteQuestion3option4 = value;
					this.SendPropertyChanged("riskApetiteQuestion3option4");
					this.OnriskApetiteQuestion3option4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_riskApetiteQuestion3option5", DbType="NVarChar(10)")]
		public string riskApetiteQuestion3option5
		{
			get
			{
				return this._riskApetiteQuestion3option5;
			}
			set
			{
				if ((this._riskApetiteQuestion3option5 != value))
				{
					this.OnriskApetiteQuestion3option5Changing(value);
					this.SendPropertyChanging();
					this._riskApetiteQuestion3option5 = value;
					this.SendPropertyChanged("riskApetiteQuestion3option5");
					this.OnriskApetiteQuestion3option5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_riskApetiteQuestion4option1", DbType="NVarChar(10)")]
		public string riskApetiteQuestion4option1
		{
			get
			{
				return this._riskApetiteQuestion4option1;
			}
			set
			{
				if ((this._riskApetiteQuestion4option1 != value))
				{
					this.OnriskApetiteQuestion4option1Changing(value);
					this.SendPropertyChanging();
					this._riskApetiteQuestion4option1 = value;
					this.SendPropertyChanged("riskApetiteQuestion4option1");
					this.OnriskApetiteQuestion4option1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_riskApetiteQuestion4option2", DbType="NVarChar(10)")]
		public string riskApetiteQuestion4option2
		{
			get
			{
				return this._riskApetiteQuestion4option2;
			}
			set
			{
				if ((this._riskApetiteQuestion4option2 != value))
				{
					this.OnriskApetiteQuestion4option2Changing(value);
					this.SendPropertyChanging();
					this._riskApetiteQuestion4option2 = value;
					this.SendPropertyChanged("riskApetiteQuestion4option2");
					this.OnriskApetiteQuestion4option2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_riskApetiteQuestion4option3", DbType="NVarChar(10)")]
		public string riskApetiteQuestion4option3
		{
			get
			{
				return this._riskApetiteQuestion4option3;
			}
			set
			{
				if ((this._riskApetiteQuestion4option3 != value))
				{
					this.OnriskApetiteQuestion4option3Changing(value);
					this.SendPropertyChanging();
					this._riskApetiteQuestion4option3 = value;
					this.SendPropertyChanged("riskApetiteQuestion4option3");
					this.OnriskApetiteQuestion4option3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_measuringRiskTakingAbilityQuestion1option1", DbType="NVarChar(10)")]
		public string measuringRiskTakingAbilityQuestion1option1
		{
			get
			{
				return this._measuringRiskTakingAbilityQuestion1option1;
			}
			set
			{
				if ((this._measuringRiskTakingAbilityQuestion1option1 != value))
				{
					this.OnmeasuringRiskTakingAbilityQuestion1option1Changing(value);
					this.SendPropertyChanging();
					this._measuringRiskTakingAbilityQuestion1option1 = value;
					this.SendPropertyChanged("measuringRiskTakingAbilityQuestion1option1");
					this.OnmeasuringRiskTakingAbilityQuestion1option1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_measuringRiskTakingAbilityQuestion1option2", DbType="NVarChar(10)")]
		public string measuringRiskTakingAbilityQuestion1option2
		{
			get
			{
				return this._measuringRiskTakingAbilityQuestion1option2;
			}
			set
			{
				if ((this._measuringRiskTakingAbilityQuestion1option2 != value))
				{
					this.OnmeasuringRiskTakingAbilityQuestion1option2Changing(value);
					this.SendPropertyChanging();
					this._measuringRiskTakingAbilityQuestion1option2 = value;
					this.SendPropertyChanged("measuringRiskTakingAbilityQuestion1option2");
					this.OnmeasuringRiskTakingAbilityQuestion1option2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_measuringRiskTakingAbilityQuestion1option3", DbType="NVarChar(10)")]
		public string measuringRiskTakingAbilityQuestion1option3
		{
			get
			{
				return this._measuringRiskTakingAbilityQuestion1option3;
			}
			set
			{
				if ((this._measuringRiskTakingAbilityQuestion1option3 != value))
				{
					this.OnmeasuringRiskTakingAbilityQuestion1option3Changing(value);
					this.SendPropertyChanging();
					this._measuringRiskTakingAbilityQuestion1option3 = value;
					this.SendPropertyChanged("measuringRiskTakingAbilityQuestion1option3");
					this.OnmeasuringRiskTakingAbilityQuestion1option3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_measuringRiskTakingAbilityQuestion1option4", DbType="NVarChar(10)")]
		public string measuringRiskTakingAbilityQuestion1option4
		{
			get
			{
				return this._measuringRiskTakingAbilityQuestion1option4;
			}
			set
			{
				if ((this._measuringRiskTakingAbilityQuestion1option4 != value))
				{
					this.OnmeasuringRiskTakingAbilityQuestion1option4Changing(value);
					this.SendPropertyChanging();
					this._measuringRiskTakingAbilityQuestion1option4 = value;
					this.SendPropertyChanged("measuringRiskTakingAbilityQuestion1option4");
					this.OnmeasuringRiskTakingAbilityQuestion1option4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_measuringRiskTakingAbilityQuestion2option1", DbType="NVarChar(10)")]
		public string measuringRiskTakingAbilityQuestion2option1
		{
			get
			{
				return this._measuringRiskTakingAbilityQuestion2option1;
			}
			set
			{
				if ((this._measuringRiskTakingAbilityQuestion2option1 != value))
				{
					this.OnmeasuringRiskTakingAbilityQuestion2option1Changing(value);
					this.SendPropertyChanging();
					this._measuringRiskTakingAbilityQuestion2option1 = value;
					this.SendPropertyChanged("measuringRiskTakingAbilityQuestion2option1");
					this.OnmeasuringRiskTakingAbilityQuestion2option1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_measuringRiskTakingAbilityQuestion2option2", DbType="NVarChar(10)")]
		public string measuringRiskTakingAbilityQuestion2option2
		{
			get
			{
				return this._measuringRiskTakingAbilityQuestion2option2;
			}
			set
			{
				if ((this._measuringRiskTakingAbilityQuestion2option2 != value))
				{
					this.OnmeasuringRiskTakingAbilityQuestion2option2Changing(value);
					this.SendPropertyChanging();
					this._measuringRiskTakingAbilityQuestion2option2 = value;
					this.SendPropertyChanged("measuringRiskTakingAbilityQuestion2option2");
					this.OnmeasuringRiskTakingAbilityQuestion2option2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_measuringRiskTakingAbilityQuestion2option3", DbType="NVarChar(10)")]
		public string measuringRiskTakingAbilityQuestion2option3
		{
			get
			{
				return this._measuringRiskTakingAbilityQuestion2option3;
			}
			set
			{
				if ((this._measuringRiskTakingAbilityQuestion2option3 != value))
				{
					this.OnmeasuringRiskTakingAbilityQuestion2option3Changing(value);
					this.SendPropertyChanging();
					this._measuringRiskTakingAbilityQuestion2option3 = value;
					this.SendPropertyChanged("measuringRiskTakingAbilityQuestion2option3");
					this.OnmeasuringRiskTakingAbilityQuestion2option3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_measuringRiskTakingAbilityQuestion3option1", DbType="NVarChar(10)")]
		public string measuringRiskTakingAbilityQuestion3option1
		{
			get
			{
				return this._measuringRiskTakingAbilityQuestion3option1;
			}
			set
			{
				if ((this._measuringRiskTakingAbilityQuestion3option1 != value))
				{
					this.OnmeasuringRiskTakingAbilityQuestion3option1Changing(value);
					this.SendPropertyChanging();
					this._measuringRiskTakingAbilityQuestion3option1 = value;
					this.SendPropertyChanged("measuringRiskTakingAbilityQuestion3option1");
					this.OnmeasuringRiskTakingAbilityQuestion3option1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_measuringRiskTakingAbilityQuestion3option2", DbType="NVarChar(10)")]
		public string measuringRiskTakingAbilityQuestion3option2
		{
			get
			{
				return this._measuringRiskTakingAbilityQuestion3option2;
			}
			set
			{
				if ((this._measuringRiskTakingAbilityQuestion3option2 != value))
				{
					this.OnmeasuringRiskTakingAbilityQuestion3option2Changing(value);
					this.SendPropertyChanging();
					this._measuringRiskTakingAbilityQuestion3option2 = value;
					this.SendPropertyChanged("measuringRiskTakingAbilityQuestion3option2");
					this.OnmeasuringRiskTakingAbilityQuestion3option2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_measuringRiskTakingAbilityQuestion3option3", DbType="NVarChar(10)")]
		public string measuringRiskTakingAbilityQuestion3option3
		{
			get
			{
				return this._measuringRiskTakingAbilityQuestion3option3;
			}
			set
			{
				if ((this._measuringRiskTakingAbilityQuestion3option3 != value))
				{
					this.OnmeasuringRiskTakingAbilityQuestion3option3Changing(value);
					this.SendPropertyChanging();
					this._measuringRiskTakingAbilityQuestion3option3 = value;
					this.SendPropertyChanged("measuringRiskTakingAbilityQuestion3option3");
					this.OnmeasuringRiskTakingAbilityQuestion3option3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_measuringRiskTakingAbilityQuestion3option4", DbType="NVarChar(10)")]
		public string measuringRiskTakingAbilityQuestion3option4
		{
			get
			{
				return this._measuringRiskTakingAbilityQuestion3option4;
			}
			set
			{
				if ((this._measuringRiskTakingAbilityQuestion3option4 != value))
				{
					this.OnmeasuringRiskTakingAbilityQuestion3option4Changing(value);
					this.SendPropertyChanging();
					this._measuringRiskTakingAbilityQuestion3option4 = value;
					this.SendPropertyChanged("measuringRiskTakingAbilityQuestion3option4");
					this.OnmeasuringRiskTakingAbilityQuestion3option4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_measuringRiskTakingAbilityQuestion4option1", DbType="NVarChar(10)")]
		public string measuringRiskTakingAbilityQuestion4option1
		{
			get
			{
				return this._measuringRiskTakingAbilityQuestion4option1;
			}
			set
			{
				if ((this._measuringRiskTakingAbilityQuestion4option1 != value))
				{
					this.OnmeasuringRiskTakingAbilityQuestion4option1Changing(value);
					this.SendPropertyChanging();
					this._measuringRiskTakingAbilityQuestion4option1 = value;
					this.SendPropertyChanged("measuringRiskTakingAbilityQuestion4option1");
					this.OnmeasuringRiskTakingAbilityQuestion4option1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_measuringRiskTakingAbilityQuestion4option2", DbType="NVarChar(10)")]
		public string measuringRiskTakingAbilityQuestion4option2
		{
			get
			{
				return this._measuringRiskTakingAbilityQuestion4option2;
			}
			set
			{
				if ((this._measuringRiskTakingAbilityQuestion4option2 != value))
				{
					this.OnmeasuringRiskTakingAbilityQuestion4option2Changing(value);
					this.SendPropertyChanging();
					this._measuringRiskTakingAbilityQuestion4option2 = value;
					this.SendPropertyChanged("measuringRiskTakingAbilityQuestion4option2");
					this.OnmeasuringRiskTakingAbilityQuestion4option2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_measuringRiskTakingAbilityQuestion4option3", DbType="NVarChar(10)")]
		public string measuringRiskTakingAbilityQuestion4option3
		{
			get
			{
				return this._measuringRiskTakingAbilityQuestion4option3;
			}
			set
			{
				if ((this._measuringRiskTakingAbilityQuestion4option3 != value))
				{
					this.OnmeasuringRiskTakingAbilityQuestion4option3Changing(value);
					this.SendPropertyChanging();
					this._measuringRiskTakingAbilityQuestion4option3 = value;
					this.SendPropertyChanged("measuringRiskTakingAbilityQuestion4option3");
					this.OnmeasuringRiskTakingAbilityQuestion4option3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_measuringRiskTakingAbilityQuestion4option4", DbType="NVarChar(10)")]
		public string measuringRiskTakingAbilityQuestion4option4
		{
			get
			{
				return this._measuringRiskTakingAbilityQuestion4option4;
			}
			set
			{
				if ((this._measuringRiskTakingAbilityQuestion4option4 != value))
				{
					this.OnmeasuringRiskTakingAbilityQuestion4option4Changing(value);
					this.SendPropertyChanging();
					this._measuringRiskTakingAbilityQuestion4option4 = value;
					this.SendPropertyChanged("measuringRiskTakingAbilityQuestion4option4");
					this.OnmeasuringRiskTakingAbilityQuestion4option4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_agreeWithRiskProfileoption1", DbType="NVarChar(10)")]
		public string agreeWithRiskProfileoption1
		{
			get
			{
				return this._agreeWithRiskProfileoption1;
			}
			set
			{
				if ((this._agreeWithRiskProfileoption1 != value))
				{
					this.OnagreeWithRiskProfileoption1Changing(value);
					this.SendPropertyChanging();
					this._agreeWithRiskProfileoption1 = value;
					this.SendPropertyChanged("agreeWithRiskProfileoption1");
					this.OnagreeWithRiskProfileoption1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_agreeWithRiskProfileoption2", DbType="NVarChar(10)")]
		public string agreeWithRiskProfileoption2
		{
			get
			{
				return this._agreeWithRiskProfileoption2;
			}
			set
			{
				if ((this._agreeWithRiskProfileoption2 != value))
				{
					this.OnagreeWithRiskProfileoption2Changing(value);
					this.SendPropertyChanging();
					this._agreeWithRiskProfileoption2 = value;
					this.SendPropertyChanged("agreeWithRiskProfileoption2");
					this.OnagreeWithRiskProfileoption2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_riskProfileValue", DbType="NVarChar(10)")]
		public string riskProfileValue
		{
			get
			{
				return this._riskProfileValue;
			}
			set
			{
				if ((this._riskProfileValue != value))
				{
					this.OnriskProfileValueChanging(value);
					this.SendPropertyChanging();
					this._riskProfileValue = value;
					this.SendPropertyChanged("riskProfileValue");
					this.OnriskProfileValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_caseId", DbType="VarChar(50)")]
		public string caseId
		{
			get
			{
				return this._caseId;
			}
			set
			{
				if ((this._caseId != value))
				{
					this.OncaseIdChanging(value);
					this.SendPropertyChanging();
					this._caseId = value;
					this.SendPropertyChanged("caseId");
					this.OncaseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_riskProfileName", DbType="VarChar(50)")]
		public string riskProfileName
		{
			get
			{
				return this._riskProfileName;
			}
			set
			{
				if ((this._riskProfileName != value))
				{
					this.OnriskProfileNameChanging(value);
					this.SendPropertyChanging();
					this._riskProfileName = value;
					this.SendPropertyChanged("riskProfileName");
					this.OnriskProfileNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.incomeExpenseOthers")]
	public partial class incomeExpenseOther : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _incomeExpenseId;
		
		private string _sumAssured;
		
		private string _maturedValue;
		
		private string _expiry;
		
		private string _premium;
		
		private string _remarks;
		
		private string _name;
		
		private EntityRef<incomeExpense> _incomeExpense;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnincomeExpenseIdChanging(int value);
    partial void OnincomeExpenseIdChanged();
    partial void OnsumAssuredChanging(string value);
    partial void OnsumAssuredChanged();
    partial void OnmaturedValueChanging(string value);
    partial void OnmaturedValueChanged();
    partial void OnexpiryChanging(string value);
    partial void OnexpiryChanged();
    partial void OnpremiumChanging(string value);
    partial void OnpremiumChanged();
    partial void OnremarksChanging(string value);
    partial void OnremarksChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public incomeExpenseOther()
		{
			this._incomeExpense = default(EntityRef<incomeExpense>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_incomeExpenseId", DbType="Int NOT NULL")]
		public int incomeExpenseId
		{
			get
			{
				return this._incomeExpenseId;
			}
			set
			{
				if ((this._incomeExpenseId != value))
				{
					if (this._incomeExpense.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnincomeExpenseIdChanging(value);
					this.SendPropertyChanging();
					this._incomeExpenseId = value;
					this.SendPropertyChanged("incomeExpenseId");
					this.OnincomeExpenseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sumAssured", DbType="NVarChar(50)")]
		public string sumAssured
		{
			get
			{
				return this._sumAssured;
			}
			set
			{
				if ((this._sumAssured != value))
				{
					this.OnsumAssuredChanging(value);
					this.SendPropertyChanging();
					this._sumAssured = value;
					this.SendPropertyChanged("sumAssured");
					this.OnsumAssuredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maturedValue", DbType="NVarChar(50)")]
		public string maturedValue
		{
			get
			{
				return this._maturedValue;
			}
			set
			{
				if ((this._maturedValue != value))
				{
					this.OnmaturedValueChanging(value);
					this.SendPropertyChanging();
					this._maturedValue = value;
					this.SendPropertyChanged("maturedValue");
					this.OnmaturedValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_expiry", DbType="NVarChar(50)")]
		public string expiry
		{
			get
			{
				return this._expiry;
			}
			set
			{
				if ((this._expiry != value))
				{
					this.OnexpiryChanging(value);
					this.SendPropertyChanging();
					this._expiry = value;
					this.SendPropertyChanged("expiry");
					this.OnexpiryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_premium", DbType="NVarChar(50)")]
		public string premium
		{
			get
			{
				return this._premium;
			}
			set
			{
				if ((this._premium != value))
				{
					this.OnpremiumChanging(value);
					this.SendPropertyChanging();
					this._premium = value;
					this.SendPropertyChanged("premium");
					this.OnpremiumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remarks", DbType="NVarChar(150)")]
		public string remarks
		{
			get
			{
				return this._remarks;
			}
			set
			{
				if ((this._remarks != value))
				{
					this.OnremarksChanging(value);
					this.SendPropertyChanging();
					this._remarks = value;
					this.SendPropertyChanged("remarks");
					this.OnremarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(150)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="incomeExpense_incomeExpenseOther", Storage="_incomeExpense", ThisKey="incomeExpenseId", OtherKey="id", IsForeignKey=true)]
		public incomeExpense incomeExpense
		{
			get
			{
				return this._incomeExpense.Entity;
			}
			set
			{
				incomeExpense previousValue = this._incomeExpense.Entity;
				if (((previousValue != value) 
							|| (this._incomeExpense.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._incomeExpense.Entity = null;
						previousValue.incomeExpenseOthers.Remove(this);
					}
					this._incomeExpense.Entity = value;
					if ((value != null))
					{
						value.incomeExpenseOthers.Add(this);
						this._incomeExpenseId = value.id;
					}
					else
					{
						this._incomeExpenseId = default(int);
					}
					this.SendPropertyChanged("incomeExpense");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.activitystatus")]
	public partial class activitystatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _caseid;
		
		private string _activity;
		
		private string _status;
		
		private int _id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncaseidChanging(string value);
    partial void OncaseidChanged();
    partial void OnactivityChanging(string value);
    partial void OnactivityChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    #endregion
		
		public activitystatus()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_caseid", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string caseid
		{
			get
			{
				return this._caseid;
			}
			set
			{
				if ((this._caseid != value))
				{
					this.OncaseidChanging(value);
					this.SendPropertyChanging();
					this._caseid = value;
					this.SendPropertyChanged("caseid");
					this.OncaseidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activity", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string activity
		{
			get
			{
				return this._activity;
			}
			set
			{
				if ((this._activity != value))
				{
					this.OnactivityChanging(value);
					this.SendPropertyChanging();
					this._activity = value;
					this.SendPropertyChanged("activity");
					this.OnactivityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.activity")]
	public partial class activity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _activity1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onactivity1Changing(string value);
    partial void Onactivity1Changed();
    #endregion
		
		public activity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="activity", Storage="_activity1", DbType="NVarChar(25)")]
		public string activity1
		{
			get
			{
				return this._activity1;
			}
			set
			{
				if ((this._activity1 != value))
				{
					this.Onactivity1Changing(value);
					this.SendPropertyChanging();
					this._activity1 = value;
					this.SendPropertyChanged("activity1");
					this.Onactivity1Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.familyMemberDetails")]
	public partial class familyMemberDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _memberId;
		
		private int _personalDetailId;
		
		private string _name;
		
		private string _occupation;
		
		private string _relationship;
		
		private string _dob;
		
		private System.Nullable<int> _yrstosupport;
		
		private string _monthlyIncome;
		
		private EntityRef<personaldetail> _personaldetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmemberIdChanging(int value);
    partial void OnmemberIdChanged();
    partial void OnpersonalDetailIdChanging(int value);
    partial void OnpersonalDetailIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnoccupationChanging(string value);
    partial void OnoccupationChanged();
    partial void OnrelationshipChanging(string value);
    partial void OnrelationshipChanged();
    partial void OndobChanging(string value);
    partial void OndobChanged();
    partial void OnyrstosupportChanging(System.Nullable<int> value);
    partial void OnyrstosupportChanged();
    partial void OnmonthlyIncomeChanging(string value);
    partial void OnmonthlyIncomeChanged();
    #endregion
		
		public familyMemberDetail()
		{
			this._personaldetail = default(EntityRef<personaldetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_memberId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int memberId
		{
			get
			{
				return this._memberId;
			}
			set
			{
				if ((this._memberId != value))
				{
					this.OnmemberIdChanging(value);
					this.SendPropertyChanging();
					this._memberId = value;
					this.SendPropertyChanged("memberId");
					this.OnmemberIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_personalDetailId", DbType="Int NOT NULL")]
		public int personalDetailId
		{
			get
			{
				return this._personalDetailId;
			}
			set
			{
				if ((this._personalDetailId != value))
				{
					if (this._personaldetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpersonalDetailIdChanging(value);
					this.SendPropertyChanging();
					this._personalDetailId = value;
					this.SendPropertyChanged("personalDetailId");
					this.OnpersonalDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(MAX)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_occupation", DbType="NVarChar(50)")]
		public string occupation
		{
			get
			{
				return this._occupation;
			}
			set
			{
				if ((this._occupation != value))
				{
					this.OnoccupationChanging(value);
					this.SendPropertyChanging();
					this._occupation = value;
					this.SendPropertyChanged("occupation");
					this.OnoccupationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_relationship", DbType="NVarChar(50)")]
		public string relationship
		{
			get
			{
				return this._relationship;
			}
			set
			{
				if ((this._relationship != value))
				{
					this.OnrelationshipChanging(value);
					this.SendPropertyChanging();
					this._relationship = value;
					this.SendPropertyChanged("relationship");
					this.OnrelationshipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dob", DbType="NVarChar(50)")]
		public string dob
		{
			get
			{
				return this._dob;
			}
			set
			{
				if ((this._dob != value))
				{
					this.OndobChanging(value);
					this.SendPropertyChanging();
					this._dob = value;
					this.SendPropertyChanged("dob");
					this.OndobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_yrstosupport", DbType="Int")]
		public System.Nullable<int> yrstosupport
		{
			get
			{
				return this._yrstosupport;
			}
			set
			{
				if ((this._yrstosupport != value))
				{
					this.OnyrstosupportChanging(value);
					this.SendPropertyChanging();
					this._yrstosupport = value;
					this.SendPropertyChanged("yrstosupport");
					this.OnyrstosupportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_monthlyIncome", DbType="NVarChar(50)")]
		public string monthlyIncome
		{
			get
			{
				return this._monthlyIncome;
			}
			set
			{
				if ((this._monthlyIncome != value))
				{
					this.OnmonthlyIncomeChanging(value);
					this.SendPropertyChanging();
					this._monthlyIncome = value;
					this.SendPropertyChanged("monthlyIncome");
					this.OnmonthlyIncomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="personaldetail_familyMemberDetail", Storage="_personaldetail", ThisKey="personalDetailId", OtherKey="id", IsForeignKey=true)]
		public personaldetail personaldetail
		{
			get
			{
				return this._personaldetail.Entity;
			}
			set
			{
				personaldetail previousValue = this._personaldetail.Entity;
				if (((previousValue != value) 
							|| (this._personaldetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._personaldetail.Entity = null;
						previousValue.familyMemberDetails.Remove(this);
					}
					this._personaldetail.Entity = value;
					if ((value != null))
					{
						value.familyMemberDetails.Add(this);
						this._personalDetailId = value.id;
					}
					else
					{
						this._personalDetailId = default(int);
					}
					this.SendPropertyChanged("personaldetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.myzurichadviser")]
	public partial class myzurichadviser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _caseid;
		
		private System.Nullable<int> _selectedoptionid;
		
		private string _selectedoptionothers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncaseidChanging(string value);
    partial void OncaseidChanged();
    partial void OnselectedoptionidChanging(System.Nullable<int> value);
    partial void OnselectedoptionidChanged();
    partial void OnselectedoptionothersChanging(string value);
    partial void OnselectedoptionothersChanged();
    #endregion
		
		public myzurichadviser()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_caseid", DbType="NVarChar(50)")]
		public string caseid
		{
			get
			{
				return this._caseid;
			}
			set
			{
				if ((this._caseid != value))
				{
					this.OncaseidChanging(value);
					this.SendPropertyChanging();
					this._caseid = value;
					this.SendPropertyChanged("caseid");
					this.OncaseidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_selectedoptionid", DbType="Int")]
		public System.Nullable<int> selectedoptionid
		{
			get
			{
				return this._selectedoptionid;
			}
			set
			{
				if ((this._selectedoptionid != value))
				{
					this.OnselectedoptionidChanging(value);
					this.SendPropertyChanging();
					this._selectedoptionid = value;
					this.SendPropertyChanged("selectedoptionid");
					this.OnselectedoptionidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_selectedoptionothers", DbType="NVarChar(250)")]
		public string selectedoptionothers
		{
			get
			{
				return this._selectedoptionothers;
			}
			set
			{
				if ((this._selectedoptionothers != value))
				{
					this.OnselectedoptionothersChanging(value);
					this.SendPropertyChanging();
					this._selectedoptionothers = value;
					this.SendPropertyChanged("selectedoptionothers");
					this.OnselectedoptionothersChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.exceptionlog")]
	public partial class exceptionlog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _message;
		
		private string _source;
		
		private string _stacktrace;
		
		private string _targetsitename;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnmessageChanging(string value);
    partial void OnmessageChanged();
    partial void OnsourceChanging(string value);
    partial void OnsourceChanged();
    partial void OnstacktraceChanging(string value);
    partial void OnstacktraceChanged();
    partial void OntargetsitenameChanging(string value);
    partial void OntargetsitenameChanged();
    #endregion
		
		public exceptionlog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_message", DbType="NVarChar(2000)")]
		public string message
		{
			get
			{
				return this._message;
			}
			set
			{
				if ((this._message != value))
				{
					this.OnmessageChanging(value);
					this.SendPropertyChanging();
					this._message = value;
					this.SendPropertyChanged("message");
					this.OnmessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_source", DbType="NVarChar(2000)")]
		public string source
		{
			get
			{
				return this._source;
			}
			set
			{
				if ((this._source != value))
				{
					this.OnsourceChanging(value);
					this.SendPropertyChanging();
					this._source = value;
					this.SendPropertyChanged("source");
					this.OnsourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stacktrace", DbType="NVarChar(4000)")]
		public string stacktrace
		{
			get
			{
				return this._stacktrace;
			}
			set
			{
				if ((this._stacktrace != value))
				{
					this.OnstacktraceChanging(value);
					this.SendPropertyChanging();
					this._stacktrace = value;
					this.SendPropertyChanged("stacktrace");
					this.OnstacktraceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_targetsitename", DbType="NVarChar(2000)")]
		public string targetsitename
		{
			get
			{
				return this._targetsitename;
			}
			set
			{
				if ((this._targetsitename != value))
				{
					this.OntargetsitenameChanging(value);
					this.SendPropertyChanging();
					this._targetsitename = value;
					this.SendPropertyChanged("targetsitename");
					this.OntargetsitenameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.salesportalinfo")]
	public partial class salesportalinfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _caseid;
		
		private string _activityid;
		
		private string _casestatus;
		
		private string _userid;
		
		private string _activitytype;
		
		private string _redirecturl;
		
		private string _salesportalurl;
		
		private string _userfirstname;
		
		private string _userlastname;
		
		private string _roletype;
		
		private string _usertype;
		
		private string _country;
		
		private string _saleschannel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncaseidChanging(string value);
    partial void OncaseidChanged();
    partial void OnactivityidChanging(string value);
    partial void OnactivityidChanged();
    partial void OncasestatusChanging(string value);
    partial void OncasestatusChanged();
    partial void OnuseridChanging(string value);
    partial void OnuseridChanged();
    partial void OnactivitytypeChanging(string value);
    partial void OnactivitytypeChanged();
    partial void OnredirecturlChanging(string value);
    partial void OnredirecturlChanged();
    partial void OnsalesportalurlChanging(string value);
    partial void OnsalesportalurlChanged();
    partial void OnuserfirstnameChanging(string value);
    partial void OnuserfirstnameChanged();
    partial void OnuserlastnameChanging(string value);
    partial void OnuserlastnameChanged();
    partial void OnroletypeChanging(string value);
    partial void OnroletypeChanged();
    partial void OnusertypeChanging(string value);
    partial void OnusertypeChanged();
    partial void OncountryChanging(string value);
    partial void OncountryChanged();
    partial void OnsaleschannelChanging(string value);
    partial void OnsaleschannelChanged();
    #endregion
		
		public salesportalinfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_caseid", DbType="NVarChar(50)")]
		public string caseid
		{
			get
			{
				return this._caseid;
			}
			set
			{
				if ((this._caseid != value))
				{
					this.OncaseidChanging(value);
					this.SendPropertyChanging();
					this._caseid = value;
					this.SendPropertyChanged("caseid");
					this.OncaseidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activityid", DbType="NVarChar(50)")]
		public string activityid
		{
			get
			{
				return this._activityid;
			}
			set
			{
				if ((this._activityid != value))
				{
					this.OnactivityidChanging(value);
					this.SendPropertyChanging();
					this._activityid = value;
					this.SendPropertyChanged("activityid");
					this.OnactivityidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_casestatus", DbType="NVarChar(500)")]
		public string casestatus
		{
			get
			{
				return this._casestatus;
			}
			set
			{
				if ((this._casestatus != value))
				{
					this.OncasestatusChanging(value);
					this.SendPropertyChanging();
					this._casestatus = value;
					this.SendPropertyChanged("casestatus");
					this.OncasestatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userid", DbType="NVarChar(500)")]
		public string userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if ((this._userid != value))
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activitytype", DbType="NVarChar(500)")]
		public string activitytype
		{
			get
			{
				return this._activitytype;
			}
			set
			{
				if ((this._activitytype != value))
				{
					this.OnactivitytypeChanging(value);
					this.SendPropertyChanging();
					this._activitytype = value;
					this.SendPropertyChanged("activitytype");
					this.OnactivitytypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_redirecturl", DbType="NVarChar(500)")]
		public string redirecturl
		{
			get
			{
				return this._redirecturl;
			}
			set
			{
				if ((this._redirecturl != value))
				{
					this.OnredirecturlChanging(value);
					this.SendPropertyChanging();
					this._redirecturl = value;
					this.SendPropertyChanged("redirecturl");
					this.OnredirecturlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salesportalurl", DbType="NVarChar(500)")]
		public string salesportalurl
		{
			get
			{
				return this._salesportalurl;
			}
			set
			{
				if ((this._salesportalurl != value))
				{
					this.OnsalesportalurlChanging(value);
					this.SendPropertyChanging();
					this._salesportalurl = value;
					this.SendPropertyChanged("salesportalurl");
					this.OnsalesportalurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userfirstname", DbType="NVarChar(500)")]
		public string userfirstname
		{
			get
			{
				return this._userfirstname;
			}
			set
			{
				if ((this._userfirstname != value))
				{
					this.OnuserfirstnameChanging(value);
					this.SendPropertyChanging();
					this._userfirstname = value;
					this.SendPropertyChanged("userfirstname");
					this.OnuserfirstnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userlastname", DbType="NVarChar(500)")]
		public string userlastname
		{
			get
			{
				return this._userlastname;
			}
			set
			{
				if ((this._userlastname != value))
				{
					this.OnuserlastnameChanging(value);
					this.SendPropertyChanging();
					this._userlastname = value;
					this.SendPropertyChanged("userlastname");
					this.OnuserlastnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_roletype", DbType="NVarChar(500)")]
		public string roletype
		{
			get
			{
				return this._roletype;
			}
			set
			{
				if ((this._roletype != value))
				{
					this.OnroletypeChanging(value);
					this.SendPropertyChanging();
					this._roletype = value;
					this.SendPropertyChanged("roletype");
					this.OnroletypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usertype", DbType="NVarChar(500)")]
		public string usertype
		{
			get
			{
				return this._usertype;
			}
			set
			{
				if ((this._usertype != value))
				{
					this.OnusertypeChanging(value);
					this.SendPropertyChanging();
					this._usertype = value;
					this.SendPropertyChanged("usertype");
					this.OnusertypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country", DbType="NVarChar(500)")]
		public string country
		{
			get
			{
				return this._country;
			}
			set
			{
				if ((this._country != value))
				{
					this.OncountryChanging(value);
					this.SendPropertyChanging();
					this._country = value;
					this.SendPropertyChanged("country");
					this.OncountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_saleschannel", DbType="NVarChar(500)")]
		public string saleschannel
		{
			get
			{
				return this._saleschannel;
			}
			set
			{
				if ((this._saleschannel != value))
				{
					this.OnsaleschannelChanging(value);
					this.SendPropertyChanging();
					this._saleschannel = value;
					this.SendPropertyChanged("saleschannel");
					this.OnsaleschannelChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.clonemappingids")]
	public partial class clonemappingid : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _clonedfrom;
		
		private string _newid;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnclonedfromChanging(string value);
    partial void OnclonedfromChanged();
    partial void OnnewidChanging(string value);
    partial void OnnewidChanged();
    #endregion
		
		public clonemappingid()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_clonedfrom", DbType="NVarChar(50)")]
		public string clonedfrom
		{
			get
			{
				return this._clonedfrom;
			}
			set
			{
				if ((this._clonedfrom != value))
				{
					this.OnclonedfromChanging(value);
					this.SendPropertyChanging();
					this._clonedfrom = value;
					this.SendPropertyChanged("clonedfrom");
					this.OnclonedfromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_newid", DbType="NVarChar(50)")]
		public string newid
		{
			get
			{
				return this._newid;
			}
			set
			{
				if ((this._newid != value))
				{
					this.OnnewidChanging(value);
					this.SendPropertyChanging();
					this._newid = value;
					this.SendPropertyChanged("newid");
					this.OnnewidChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.insuranceArrangementSaving")]
	public partial class insuranceArrangementSaving : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _caseId;
		
		private string _policyOwnerName;
		
		private string _company;
		
		private string _contribution;
		
		private string _term;
		
		private string _fundValue;
		
		private string _natureOfPlan;
		
		private System.Nullable<int> _incomeExpenseId;
		
		private string _frequency;
		
		private EntityRef<incomeExpense> _incomeExpense;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncaseIdChanging(string value);
    partial void OncaseIdChanged();
    partial void OnpolicyOwnerNameChanging(string value);
    partial void OnpolicyOwnerNameChanged();
    partial void OncompanyChanging(string value);
    partial void OncompanyChanged();
    partial void OncontributionChanging(string value);
    partial void OncontributionChanged();
    partial void OntermChanging(string value);
    partial void OntermChanged();
    partial void OnfundValueChanging(string value);
    partial void OnfundValueChanged();
    partial void OnnatureOfPlanChanging(string value);
    partial void OnnatureOfPlanChanged();
    partial void OnincomeExpenseIdChanging(System.Nullable<int> value);
    partial void OnincomeExpenseIdChanged();
    partial void OnfrequencyChanging(string value);
    partial void OnfrequencyChanged();
    #endregion
		
		public insuranceArrangementSaving()
		{
			this._incomeExpense = default(EntityRef<incomeExpense>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_caseId", DbType="VarChar(50)")]
		public string caseId
		{
			get
			{
				return this._caseId;
			}
			set
			{
				if ((this._caseId != value))
				{
					this.OncaseIdChanging(value);
					this.SendPropertyChanging();
					this._caseId = value;
					this.SendPropertyChanged("caseId");
					this.OncaseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_policyOwnerName", DbType="NVarChar(100)")]
		public string policyOwnerName
		{
			get
			{
				return this._policyOwnerName;
			}
			set
			{
				if ((this._policyOwnerName != value))
				{
					this.OnpolicyOwnerNameChanging(value);
					this.SendPropertyChanging();
					this._policyOwnerName = value;
					this.SendPropertyChanged("policyOwnerName");
					this.OnpolicyOwnerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_company", DbType="NVarChar(50)")]
		public string company
		{
			get
			{
				return this._company;
			}
			set
			{
				if ((this._company != value))
				{
					this.OncompanyChanging(value);
					this.SendPropertyChanging();
					this._company = value;
					this.SendPropertyChanged("company");
					this.OncompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contribution", DbType="NVarChar(50)")]
		public string contribution
		{
			get
			{
				return this._contribution;
			}
			set
			{
				if ((this._contribution != value))
				{
					this.OncontributionChanging(value);
					this.SendPropertyChanging();
					this._contribution = value;
					this.SendPropertyChanged("contribution");
					this.OncontributionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_term", DbType="NVarChar(50)")]
		public string term
		{
			get
			{
				return this._term;
			}
			set
			{
				if ((this._term != value))
				{
					this.OntermChanging(value);
					this.SendPropertyChanging();
					this._term = value;
					this.SendPropertyChanged("term");
					this.OntermChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fundValue", DbType="NVarChar(50)")]
		public string fundValue
		{
			get
			{
				return this._fundValue;
			}
			set
			{
				if ((this._fundValue != value))
				{
					this.OnfundValueChanging(value);
					this.SendPropertyChanging();
					this._fundValue = value;
					this.SendPropertyChanged("fundValue");
					this.OnfundValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_natureOfPlan", DbType="NVarChar(150)")]
		public string natureOfPlan
		{
			get
			{
				return this._natureOfPlan;
			}
			set
			{
				if ((this._natureOfPlan != value))
				{
					this.OnnatureOfPlanChanging(value);
					this.SendPropertyChanging();
					this._natureOfPlan = value;
					this.SendPropertyChanged("natureOfPlan");
					this.OnnatureOfPlanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_incomeExpenseId", DbType="Int")]
		public System.Nullable<int> incomeExpenseId
		{
			get
			{
				return this._incomeExpenseId;
			}
			set
			{
				if ((this._incomeExpenseId != value))
				{
					if (this._incomeExpense.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnincomeExpenseIdChanging(value);
					this.SendPropertyChanging();
					this._incomeExpenseId = value;
					this.SendPropertyChanged("incomeExpenseId");
					this.OnincomeExpenseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_frequency", DbType="NVarChar(50)")]
		public string frequency
		{
			get
			{
				return this._frequency;
			}
			set
			{
				if ((this._frequency != value))
				{
					this.OnfrequencyChanging(value);
					this.SendPropertyChanging();
					this._frequency = value;
					this.SendPropertyChanged("frequency");
					this.OnfrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="incomeExpense_insuranceArrangementSaving", Storage="_incomeExpense", ThisKey="incomeExpenseId", OtherKey="id", IsForeignKey=true)]
		public incomeExpense incomeExpense
		{
			get
			{
				return this._incomeExpense.Entity;
			}
			set
			{
				incomeExpense previousValue = this._incomeExpense.Entity;
				if (((previousValue != value) 
							|| (this._incomeExpense.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._incomeExpense.Entity = null;
						previousValue.insuranceArrangementSavings.Remove(this);
					}
					this._incomeExpense.Entity = value;
					if ((value != null))
					{
						value.insuranceArrangementSavings.Add(this);
						this._incomeExpenseId = value.id;
					}
					else
					{
						this._incomeExpenseId = default(Nullable<int>);
					}
					this.SendPropertyChanged("incomeExpense");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.insuranceArrangementRetirement")]
	public partial class insuranceArrangementRetirement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _caseId;
		
		private string _policyOwnerName;
		
		private string _company;
		
		private string _contribution;
		
		private string _maturityDate;
		
		private string _projectedLumpSumMaturity;
		
		private string _projectedIncomeMaturity;
		
		private System.Nullable<int> _incomeExpenseId;
		
		private string _frequency;
		
		private EntityRef<incomeExpense> _incomeExpense;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncaseIdChanging(string value);
    partial void OncaseIdChanged();
    partial void OnpolicyOwnerNameChanging(string value);
    partial void OnpolicyOwnerNameChanged();
    partial void OncompanyChanging(string value);
    partial void OncompanyChanged();
    partial void OncontributionChanging(string value);
    partial void OncontributionChanged();
    partial void OnmaturityDateChanging(string value);
    partial void OnmaturityDateChanged();
    partial void OnprojectedLumpSumMaturityChanging(string value);
    partial void OnprojectedLumpSumMaturityChanged();
    partial void OnprojectedIncomeMaturityChanging(string value);
    partial void OnprojectedIncomeMaturityChanged();
    partial void OnincomeExpenseIdChanging(System.Nullable<int> value);
    partial void OnincomeExpenseIdChanged();
    partial void OnfrequencyChanging(string value);
    partial void OnfrequencyChanged();
    #endregion
		
		public insuranceArrangementRetirement()
		{
			this._incomeExpense = default(EntityRef<incomeExpense>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_caseId", DbType="VarChar(50)")]
		public string caseId
		{
			get
			{
				return this._caseId;
			}
			set
			{
				if ((this._caseId != value))
				{
					this.OncaseIdChanging(value);
					this.SendPropertyChanging();
					this._caseId = value;
					this.SendPropertyChanged("caseId");
					this.OncaseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_policyOwnerName", DbType="NVarChar(100)")]
		public string policyOwnerName
		{
			get
			{
				return this._policyOwnerName;
			}
			set
			{
				if ((this._policyOwnerName != value))
				{
					this.OnpolicyOwnerNameChanging(value);
					this.SendPropertyChanging();
					this._policyOwnerName = value;
					this.SendPropertyChanged("policyOwnerName");
					this.OnpolicyOwnerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_company", DbType="NVarChar(50)")]
		public string company
		{
			get
			{
				return this._company;
			}
			set
			{
				if ((this._company != value))
				{
					this.OncompanyChanging(value);
					this.SendPropertyChanging();
					this._company = value;
					this.SendPropertyChanged("company");
					this.OncompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contribution", DbType="NVarChar(50)")]
		public string contribution
		{
			get
			{
				return this._contribution;
			}
			set
			{
				if ((this._contribution != value))
				{
					this.OncontributionChanging(value);
					this.SendPropertyChanging();
					this._contribution = value;
					this.SendPropertyChanged("contribution");
					this.OncontributionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maturityDate", DbType="VarChar(50)")]
		public string maturityDate
		{
			get
			{
				return this._maturityDate;
			}
			set
			{
				if ((this._maturityDate != value))
				{
					this.OnmaturityDateChanging(value);
					this.SendPropertyChanging();
					this._maturityDate = value;
					this.SendPropertyChanged("maturityDate");
					this.OnmaturityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projectedLumpSumMaturity", DbType="NVarChar(50)")]
		public string projectedLumpSumMaturity
		{
			get
			{
				return this._projectedLumpSumMaturity;
			}
			set
			{
				if ((this._projectedLumpSumMaturity != value))
				{
					this.OnprojectedLumpSumMaturityChanging(value);
					this.SendPropertyChanging();
					this._projectedLumpSumMaturity = value;
					this.SendPropertyChanged("projectedLumpSumMaturity");
					this.OnprojectedLumpSumMaturityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projectedIncomeMaturity", DbType="NVarChar(50)")]
		public string projectedIncomeMaturity
		{
			get
			{
				return this._projectedIncomeMaturity;
			}
			set
			{
				if ((this._projectedIncomeMaturity != value))
				{
					this.OnprojectedIncomeMaturityChanging(value);
					this.SendPropertyChanging();
					this._projectedIncomeMaturity = value;
					this.SendPropertyChanged("projectedIncomeMaturity");
					this.OnprojectedIncomeMaturityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_incomeExpenseId", DbType="Int")]
		public System.Nullable<int> incomeExpenseId
		{
			get
			{
				return this._incomeExpenseId;
			}
			set
			{
				if ((this._incomeExpenseId != value))
				{
					if (this._incomeExpense.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnincomeExpenseIdChanging(value);
					this.SendPropertyChanging();
					this._incomeExpenseId = value;
					this.SendPropertyChanged("incomeExpenseId");
					this.OnincomeExpenseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_frequency", DbType="NVarChar(50)")]
		public string frequency
		{
			get
			{
				return this._frequency;
			}
			set
			{
				if ((this._frequency != value))
				{
					this.OnfrequencyChanging(value);
					this.SendPropertyChanging();
					this._frequency = value;
					this.SendPropertyChanged("frequency");
					this.OnfrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="incomeExpense_insuranceArrangementRetirement", Storage="_incomeExpense", ThisKey="incomeExpenseId", OtherKey="id", IsForeignKey=true)]
		public incomeExpense incomeExpense
		{
			get
			{
				return this._incomeExpense.Entity;
			}
			set
			{
				incomeExpense previousValue = this._incomeExpense.Entity;
				if (((previousValue != value) 
							|| (this._incomeExpense.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._incomeExpense.Entity = null;
						previousValue.insuranceArrangementRetirements.Remove(this);
					}
					this._incomeExpense.Entity = value;
					if ((value != null))
					{
						value.insuranceArrangementRetirements.Add(this);
						this._incomeExpenseId = value.id;
					}
					else
					{
						this._incomeExpenseId = default(Nullable<int>);
					}
					this.SendPropertyChanged("incomeExpense");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.insuranceArrangementEducation")]
	public partial class insuranceArrangementEducation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _caseId;
		
		private string _policyOwnerName;
		
		private string _company;
		
		private string _contribution;
		
		private string _maturityDate;
		
		private string _projectedLumpSumMaturity;
		
		private string _projectedIncomeMaturity;
		
		private System.Nullable<int> _incomeExpenseId;
		
		private string _frequency;
		
		private EntityRef<incomeExpense> _incomeExpense;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncaseIdChanging(string value);
    partial void OncaseIdChanged();
    partial void OnpolicyOwnerNameChanging(string value);
    partial void OnpolicyOwnerNameChanged();
    partial void OncompanyChanging(string value);
    partial void OncompanyChanged();
    partial void OncontributionChanging(string value);
    partial void OncontributionChanged();
    partial void OnmaturityDateChanging(string value);
    partial void OnmaturityDateChanged();
    partial void OnprojectedLumpSumMaturityChanging(string value);
    partial void OnprojectedLumpSumMaturityChanged();
    partial void OnprojectedIncomeMaturityChanging(string value);
    partial void OnprojectedIncomeMaturityChanged();
    partial void OnincomeExpenseIdChanging(System.Nullable<int> value);
    partial void OnincomeExpenseIdChanged();
    partial void OnfrequencyChanging(string value);
    partial void OnfrequencyChanged();
    #endregion
		
		public insuranceArrangementEducation()
		{
			this._incomeExpense = default(EntityRef<incomeExpense>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_caseId", DbType="VarChar(50)")]
		public string caseId
		{
			get
			{
				return this._caseId;
			}
			set
			{
				if ((this._caseId != value))
				{
					this.OncaseIdChanging(value);
					this.SendPropertyChanging();
					this._caseId = value;
					this.SendPropertyChanged("caseId");
					this.OncaseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_policyOwnerName", DbType="NVarChar(100)")]
		public string policyOwnerName
		{
			get
			{
				return this._policyOwnerName;
			}
			set
			{
				if ((this._policyOwnerName != value))
				{
					this.OnpolicyOwnerNameChanging(value);
					this.SendPropertyChanging();
					this._policyOwnerName = value;
					this.SendPropertyChanged("policyOwnerName");
					this.OnpolicyOwnerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_company", DbType="NVarChar(50)")]
		public string company
		{
			get
			{
				return this._company;
			}
			set
			{
				if ((this._company != value))
				{
					this.OncompanyChanging(value);
					this.SendPropertyChanging();
					this._company = value;
					this.SendPropertyChanged("company");
					this.OncompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contribution", DbType="NVarChar(50)")]
		public string contribution
		{
			get
			{
				return this._contribution;
			}
			set
			{
				if ((this._contribution != value))
				{
					this.OncontributionChanging(value);
					this.SendPropertyChanging();
					this._contribution = value;
					this.SendPropertyChanged("contribution");
					this.OncontributionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maturityDate", DbType="VarChar(50)")]
		public string maturityDate
		{
			get
			{
				return this._maturityDate;
			}
			set
			{
				if ((this._maturityDate != value))
				{
					this.OnmaturityDateChanging(value);
					this.SendPropertyChanging();
					this._maturityDate = value;
					this.SendPropertyChanged("maturityDate");
					this.OnmaturityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projectedLumpSumMaturity", DbType="NVarChar(50)")]
		public string projectedLumpSumMaturity
		{
			get
			{
				return this._projectedLumpSumMaturity;
			}
			set
			{
				if ((this._projectedLumpSumMaturity != value))
				{
					this.OnprojectedLumpSumMaturityChanging(value);
					this.SendPropertyChanging();
					this._projectedLumpSumMaturity = value;
					this.SendPropertyChanged("projectedLumpSumMaturity");
					this.OnprojectedLumpSumMaturityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projectedIncomeMaturity", DbType="NVarChar(50)")]
		public string projectedIncomeMaturity
		{
			get
			{
				return this._projectedIncomeMaturity;
			}
			set
			{
				if ((this._projectedIncomeMaturity != value))
				{
					this.OnprojectedIncomeMaturityChanging(value);
					this.SendPropertyChanging();
					this._projectedIncomeMaturity = value;
					this.SendPropertyChanged("projectedIncomeMaturity");
					this.OnprojectedIncomeMaturityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_incomeExpenseId", DbType="Int")]
		public System.Nullable<int> incomeExpenseId
		{
			get
			{
				return this._incomeExpenseId;
			}
			set
			{
				if ((this._incomeExpenseId != value))
				{
					if (this._incomeExpense.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnincomeExpenseIdChanging(value);
					this.SendPropertyChanging();
					this._incomeExpenseId = value;
					this.SendPropertyChanged("incomeExpenseId");
					this.OnincomeExpenseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_frequency", DbType="NVarChar(50)")]
		public string frequency
		{
			get
			{
				return this._frequency;
			}
			set
			{
				if ((this._frequency != value))
				{
					this.OnfrequencyChanging(value);
					this.SendPropertyChanging();
					this._frequency = value;
					this.SendPropertyChanged("frequency");
					this.OnfrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="incomeExpense_insuranceArrangementEducation", Storage="_incomeExpense", ThisKey="incomeExpenseId", OtherKey="id", IsForeignKey=true)]
		public incomeExpense incomeExpense
		{
			get
			{
				return this._incomeExpense.Entity;
			}
			set
			{
				incomeExpense previousValue = this._incomeExpense.Entity;
				if (((previousValue != value) 
							|| (this._incomeExpense.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._incomeExpense.Entity = null;
						previousValue.insuranceArrangementEducations.Remove(this);
					}
					this._incomeExpense.Entity = value;
					if ((value != null))
					{
						value.insuranceArrangementEducations.Add(this);
						this._incomeExpenseId = value.id;
					}
					else
					{
						this._incomeExpenseId = default(Nullable<int>);
					}
					this.SendPropertyChanged("incomeExpense");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.savinggoals")]
	public partial class savinggoal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _caseid;
		
		private string _goal;
		
		private string _yrstoaccumulate;
		
		private string _amtneededfv;
		
		private string _maturityvalue;
		
		private string _total;
		
		private string _regularannualcontrib;
		
		private System.Nullable<bool> _deleted;
		
		private string _existingassetstotal;
		
		private string _inflationrate;
		
		private System.Nullable<int> _savingGoalNeeded;
		
		private EntitySet<existingassetsg> _existingassetsgs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncaseidChanging(string value);
    partial void OncaseidChanged();
    partial void OngoalChanging(string value);
    partial void OngoalChanged();
    partial void OnyrstoaccumulateChanging(string value);
    partial void OnyrstoaccumulateChanged();
    partial void OnamtneededfvChanging(string value);
    partial void OnamtneededfvChanged();
    partial void OnmaturityvalueChanging(string value);
    partial void OnmaturityvalueChanged();
    partial void OntotalChanging(string value);
    partial void OntotalChanged();
    partial void OnregularannualcontribChanging(string value);
    partial void OnregularannualcontribChanged();
    partial void OndeletedChanging(System.Nullable<bool> value);
    partial void OndeletedChanged();
    partial void OnexistingassetstotalChanging(string value);
    partial void OnexistingassetstotalChanged();
    partial void OninflationrateChanging(string value);
    partial void OninflationrateChanged();
    partial void OnsavingGoalNeededChanging(System.Nullable<int> value);
    partial void OnsavingGoalNeededChanged();
    #endregion
		
		public savinggoal()
		{
			this._existingassetsgs = new EntitySet<existingassetsg>(new Action<existingassetsg>(this.attach_existingassetsgs), new Action<existingassetsg>(this.detach_existingassetsgs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_caseid", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string caseid
		{
			get
			{
				return this._caseid;
			}
			set
			{
				if ((this._caseid != value))
				{
					this.OncaseidChanging(value);
					this.SendPropertyChanging();
					this._caseid = value;
					this.SendPropertyChanged("caseid");
					this.OncaseidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_goal", DbType="NVarChar(50)")]
		public string goal
		{
			get
			{
				return this._goal;
			}
			set
			{
				if ((this._goal != value))
				{
					this.OngoalChanging(value);
					this.SendPropertyChanging();
					this._goal = value;
					this.SendPropertyChanged("goal");
					this.OngoalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_yrstoaccumulate", DbType="NVarChar(5)")]
		public string yrstoaccumulate
		{
			get
			{
				return this._yrstoaccumulate;
			}
			set
			{
				if ((this._yrstoaccumulate != value))
				{
					this.OnyrstoaccumulateChanging(value);
					this.SendPropertyChanging();
					this._yrstoaccumulate = value;
					this.SendPropertyChanged("yrstoaccumulate");
					this.OnyrstoaccumulateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amtneededfv", DbType="NVarChar(50)")]
		public string amtneededfv
		{
			get
			{
				return this._amtneededfv;
			}
			set
			{
				if ((this._amtneededfv != value))
				{
					this.OnamtneededfvChanging(value);
					this.SendPropertyChanging();
					this._amtneededfv = value;
					this.SendPropertyChanged("amtneededfv");
					this.OnamtneededfvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maturityvalue", DbType="NVarChar(50)")]
		public string maturityvalue
		{
			get
			{
				return this._maturityvalue;
			}
			set
			{
				if ((this._maturityvalue != value))
				{
					this.OnmaturityvalueChanging(value);
					this.SendPropertyChanging();
					this._maturityvalue = value;
					this.SendPropertyChanged("maturityvalue");
					this.OnmaturityvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total", DbType="NVarChar(50)")]
		public string total
		{
			get
			{
				return this._total;
			}
			set
			{
				if ((this._total != value))
				{
					this.OntotalChanging(value);
					this.SendPropertyChanging();
					this._total = value;
					this.SendPropertyChanged("total");
					this.OntotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regularannualcontrib", DbType="NVarChar(50)")]
		public string regularannualcontrib
		{
			get
			{
				return this._regularannualcontrib;
			}
			set
			{
				if ((this._regularannualcontrib != value))
				{
					this.OnregularannualcontribChanging(value);
					this.SendPropertyChanging();
					this._regularannualcontrib = value;
					this.SendPropertyChanged("regularannualcontrib");
					this.OnregularannualcontribChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deleted", DbType="Bit")]
		public System.Nullable<bool> deleted
		{
			get
			{
				return this._deleted;
			}
			set
			{
				if ((this._deleted != value))
				{
					this.OndeletedChanging(value);
					this.SendPropertyChanging();
					this._deleted = value;
					this.SendPropertyChanged("deleted");
					this.OndeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_existingassetstotal", DbType="NVarChar(50)")]
		public string existingassetstotal
		{
			get
			{
				return this._existingassetstotal;
			}
			set
			{
				if ((this._existingassetstotal != value))
				{
					this.OnexistingassetstotalChanging(value);
					this.SendPropertyChanging();
					this._existingassetstotal = value;
					this.SendPropertyChanged("existingassetstotal");
					this.OnexistingassetstotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inflationrate", DbType="NVarChar(50)")]
		public string inflationrate
		{
			get
			{
				return this._inflationrate;
			}
			set
			{
				if ((this._inflationrate != value))
				{
					this.OninflationrateChanging(value);
					this.SendPropertyChanging();
					this._inflationrate = value;
					this.SendPropertyChanged("inflationrate");
					this.OninflationrateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_savingGoalNeeded", DbType="Int")]
		public System.Nullable<int> savingGoalNeeded
		{
			get
			{
				return this._savingGoalNeeded;
			}
			set
			{
				if ((this._savingGoalNeeded != value))
				{
					this.OnsavingGoalNeededChanging(value);
					this.SendPropertyChanging();
					this._savingGoalNeeded = value;
					this.SendPropertyChanged("savingGoalNeeded");
					this.OnsavingGoalNeededChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="savinggoal_existingassetsg", Storage="_existingassetsgs", ThisKey="id", OtherKey="savinggoalsid")]
		public EntitySet<existingassetsg> existingassetsgs
		{
			get
			{
				return this._existingassetsgs;
			}
			set
			{
				this._existingassetsgs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_existingassetsgs(existingassetsg entity)
		{
			this.SendPropertyChanging();
			entity.savinggoal = this;
		}
		
		private void detach_existingassetsgs(existingassetsg entity)
		{
			this.SendPropertyChanging();
			entity.savinggoal = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.personaldetails")]
	public partial class personaldetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _title;
		
		private string _titleothers;
		
		private string _name;
		
		private string _gender;
		
		private string _nric;
		
		private string _nationality;
		
		private string _nationalityothers;
		
		private string _datepicker;
		
		private string _maritalstatus;
		
		private string _issmoker;
		
		private string _address;
		
		private string _employmentstatus;
		
		private string _occupation;
		
		private string _companyname;
		
		private string _contactnumber;
		
		private string _contactnumberfax;
		
		private string _contactnumberhp;
		
		private string _contactnumberoffice;
		
		private string _email;
		
		private string _educationlevel;
		
		private string _medicalcondition;
		
		private string _medicalconditiondetails;
		
		private string _nominee;
		
		private string _caseid;
		
		private string _will;
		
		private string _surname;
		
		private string _familyDetailsRequired;
		
		private string _spokenLanguage;
		
		private string _spokenLanguageOtherstxt;
		
		private string _writtenLanguage;
		
		private string _writtenLanguageOtherstxt;
		
		private string _accompanyQuestion;
		
		private string _trustedIndividualName;
		
		private string _clientRelationship;
		
		private string _NRICAccompany;
		
		private string _noAccompaniedIndividualReason;
		
		private EntitySet<familyMemberDetail> _familyMemberDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OntitleothersChanging(string value);
    partial void OntitleothersChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OngenderChanging(string value);
    partial void OngenderChanged();
    partial void OnnricChanging(string value);
    partial void OnnricChanged();
    partial void OnnationalityChanging(string value);
    partial void OnnationalityChanged();
    partial void OnnationalityothersChanging(string value);
    partial void OnnationalityothersChanged();
    partial void OndatepickerChanging(string value);
    partial void OndatepickerChanged();
    partial void OnmaritalstatusChanging(string value);
    partial void OnmaritalstatusChanged();
    partial void OnissmokerChanging(string value);
    partial void OnissmokerChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnemploymentstatusChanging(string value);
    partial void OnemploymentstatusChanged();
    partial void OnoccupationChanging(string value);
    partial void OnoccupationChanged();
    partial void OncompanynameChanging(string value);
    partial void OncompanynameChanged();
    partial void OncontactnumberChanging(string value);
    partial void OncontactnumberChanged();
    partial void OncontactnumberfaxChanging(string value);
    partial void OncontactnumberfaxChanged();
    partial void OncontactnumberhpChanging(string value);
    partial void OncontactnumberhpChanged();
    partial void OncontactnumberofficeChanging(string value);
    partial void OncontactnumberofficeChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OneducationlevelChanging(string value);
    partial void OneducationlevelChanged();
    partial void OnmedicalconditionChanging(string value);
    partial void OnmedicalconditionChanged();
    partial void OnmedicalconditiondetailsChanging(string value);
    partial void OnmedicalconditiondetailsChanged();
    partial void OnnomineeChanging(string value);
    partial void OnnomineeChanged();
    partial void OncaseidChanging(string value);
    partial void OncaseidChanged();
    partial void OnwillChanging(string value);
    partial void OnwillChanged();
    partial void OnsurnameChanging(string value);
    partial void OnsurnameChanged();
    partial void OnfamilyDetailsRequiredChanging(string value);
    partial void OnfamilyDetailsRequiredChanged();
    partial void OnspokenLanguageChanging(string value);
    partial void OnspokenLanguageChanged();
    partial void OnspokenLanguageOtherstxtChanging(string value);
    partial void OnspokenLanguageOtherstxtChanged();
    partial void OnwrittenLanguageChanging(string value);
    partial void OnwrittenLanguageChanged();
    partial void OnwrittenLanguageOtherstxtChanging(string value);
    partial void OnwrittenLanguageOtherstxtChanged();
    partial void OnaccompanyQuestionChanging(string value);
    partial void OnaccompanyQuestionChanged();
    partial void OntrustedIndividualNameChanging(string value);
    partial void OntrustedIndividualNameChanged();
    partial void OnclientRelationshipChanging(string value);
    partial void OnclientRelationshipChanged();
    partial void OnNRICAccompanyChanging(string value);
    partial void OnNRICAccompanyChanged();
    partial void OnnoAccompaniedIndividualReasonChanging(string value);
    partial void OnnoAccompaniedIndividualReasonChanged();
    #endregion
		
		public personaldetail()
		{
			this._familyMemberDetails = new EntitySet<familyMemberDetail>(new Action<familyMemberDetail>(this.attach_familyMemberDetails), new Action<familyMemberDetail>(this.detach_familyMemberDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(50)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_titleothers", DbType="NVarChar(50)")]
		public string titleothers
		{
			get
			{
				return this._titleothers;
			}
			set
			{
				if ((this._titleothers != value))
				{
					this.OntitleothersChanging(value);
					this.SendPropertyChanging();
					this._titleothers = value;
					this.SendPropertyChanged("titleothers");
					this.OntitleothersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(500)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="NVarChar(10)")]
		public string gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nric", DbType="NVarChar(500)")]
		public string nric
		{
			get
			{
				return this._nric;
			}
			set
			{
				if ((this._nric != value))
				{
					this.OnnricChanging(value);
					this.SendPropertyChanging();
					this._nric = value;
					this.SendPropertyChanged("nric");
					this.OnnricChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nationality", DbType="NVarChar(100)")]
		public string nationality
		{
			get
			{
				return this._nationality;
			}
			set
			{
				if ((this._nationality != value))
				{
					this.OnnationalityChanging(value);
					this.SendPropertyChanging();
					this._nationality = value;
					this.SendPropertyChanged("nationality");
					this.OnnationalityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nationalityothers", DbType="NVarChar(50)")]
		public string nationalityothers
		{
			get
			{
				return this._nationalityothers;
			}
			set
			{
				if ((this._nationalityothers != value))
				{
					this.OnnationalityothersChanging(value);
					this.SendPropertyChanging();
					this._nationalityothers = value;
					this.SendPropertyChanged("nationalityothers");
					this.OnnationalityothersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datepicker", DbType="NVarChar(50)")]
		public string datepicker
		{
			get
			{
				return this._datepicker;
			}
			set
			{
				if ((this._datepicker != value))
				{
					this.OndatepickerChanging(value);
					this.SendPropertyChanging();
					this._datepicker = value;
					this.SendPropertyChanged("datepicker");
					this.OndatepickerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maritalstatus", DbType="NVarChar(50)")]
		public string maritalstatus
		{
			get
			{
				return this._maritalstatus;
			}
			set
			{
				if ((this._maritalstatus != value))
				{
					this.OnmaritalstatusChanging(value);
					this.SendPropertyChanging();
					this._maritalstatus = value;
					this.SendPropertyChanged("maritalstatus");
					this.OnmaritalstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_issmoker", DbType="NVarChar(5)")]
		public string issmoker
		{
			get
			{
				return this._issmoker;
			}
			set
			{
				if ((this._issmoker != value))
				{
					this.OnissmokerChanging(value);
					this.SendPropertyChanging();
					this._issmoker = value;
					this.SendPropertyChanged("issmoker");
					this.OnissmokerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(1000)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employmentstatus", DbType="NVarChar(20)")]
		public string employmentstatus
		{
			get
			{
				return this._employmentstatus;
			}
			set
			{
				if ((this._employmentstatus != value))
				{
					this.OnemploymentstatusChanging(value);
					this.SendPropertyChanging();
					this._employmentstatus = value;
					this.SendPropertyChanged("employmentstatus");
					this.OnemploymentstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_occupation", DbType="NVarChar(1000)")]
		public string occupation
		{
			get
			{
				return this._occupation;
			}
			set
			{
				if ((this._occupation != value))
				{
					this.OnoccupationChanging(value);
					this.SendPropertyChanging();
					this._occupation = value;
					this.SendPropertyChanged("occupation");
					this.OnoccupationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyname", DbType="NVarChar(1000)")]
		public string companyname
		{
			get
			{
				return this._companyname;
			}
			set
			{
				if ((this._companyname != value))
				{
					this.OncompanynameChanging(value);
					this.SendPropertyChanging();
					this._companyname = value;
					this.SendPropertyChanged("companyname");
					this.OncompanynameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactnumber", DbType="NVarChar(50)")]
		public string contactnumber
		{
			get
			{
				return this._contactnumber;
			}
			set
			{
				if ((this._contactnumber != value))
				{
					this.OncontactnumberChanging(value);
					this.SendPropertyChanging();
					this._contactnumber = value;
					this.SendPropertyChanged("contactnumber");
					this.OncontactnumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactnumberfax", DbType="NVarChar(50)")]
		public string contactnumberfax
		{
			get
			{
				return this._contactnumberfax;
			}
			set
			{
				if ((this._contactnumberfax != value))
				{
					this.OncontactnumberfaxChanging(value);
					this.SendPropertyChanging();
					this._contactnumberfax = value;
					this.SendPropertyChanged("contactnumberfax");
					this.OncontactnumberfaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactnumberhp", DbType="NVarChar(50)")]
		public string contactnumberhp
		{
			get
			{
				return this._contactnumberhp;
			}
			set
			{
				if ((this._contactnumberhp != value))
				{
					this.OncontactnumberhpChanging(value);
					this.SendPropertyChanging();
					this._contactnumberhp = value;
					this.SendPropertyChanged("contactnumberhp");
					this.OncontactnumberhpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactnumberoffice", DbType="NVarChar(50)")]
		public string contactnumberoffice
		{
			get
			{
				return this._contactnumberoffice;
			}
			set
			{
				if ((this._contactnumberoffice != value))
				{
					this.OncontactnumberofficeChanging(value);
					this.SendPropertyChanging();
					this._contactnumberoffice = value;
					this.SendPropertyChanged("contactnumberoffice");
					this.OncontactnumberofficeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(500)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_educationlevel", DbType="NVarChar(50)")]
		public string educationlevel
		{
			get
			{
				return this._educationlevel;
			}
			set
			{
				if ((this._educationlevel != value))
				{
					this.OneducationlevelChanging(value);
					this.SendPropertyChanging();
					this._educationlevel = value;
					this.SendPropertyChanged("educationlevel");
					this.OneducationlevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_medicalcondition", DbType="NVarChar(50)")]
		public string medicalcondition
		{
			get
			{
				return this._medicalcondition;
			}
			set
			{
				if ((this._medicalcondition != value))
				{
					this.OnmedicalconditionChanging(value);
					this.SendPropertyChanging();
					this._medicalcondition = value;
					this.SendPropertyChanged("medicalcondition");
					this.OnmedicalconditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_medicalconditiondetails", DbType="NVarChar(1000)")]
		public string medicalconditiondetails
		{
			get
			{
				return this._medicalconditiondetails;
			}
			set
			{
				if ((this._medicalconditiondetails != value))
				{
					this.OnmedicalconditiondetailsChanging(value);
					this.SendPropertyChanging();
					this._medicalconditiondetails = value;
					this.SendPropertyChanged("medicalconditiondetails");
					this.OnmedicalconditiondetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nominee", DbType="NVarChar(5)")]
		public string nominee
		{
			get
			{
				return this._nominee;
			}
			set
			{
				if ((this._nominee != value))
				{
					this.OnnomineeChanging(value);
					this.SendPropertyChanging();
					this._nominee = value;
					this.SendPropertyChanged("nominee");
					this.OnnomineeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_caseid", DbType="NVarChar(50)")]
		public string caseid
		{
			get
			{
				return this._caseid;
			}
			set
			{
				if ((this._caseid != value))
				{
					this.OncaseidChanging(value);
					this.SendPropertyChanging();
					this._caseid = value;
					this.SendPropertyChanged("caseid");
					this.OncaseidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_will", DbType="NVarChar(5)")]
		public string will
		{
			get
			{
				return this._will;
			}
			set
			{
				if ((this._will != value))
				{
					this.OnwillChanging(value);
					this.SendPropertyChanging();
					this._will = value;
					this.SendPropertyChanged("will");
					this.OnwillChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_surname", DbType="NVarChar(500)")]
		public string surname
		{
			get
			{
				return this._surname;
			}
			set
			{
				if ((this._surname != value))
				{
					this.OnsurnameChanging(value);
					this.SendPropertyChanging();
					this._surname = value;
					this.SendPropertyChanged("surname");
					this.OnsurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_familyDetailsRequired", DbType="NVarChar(5)")]
		public string familyDetailsRequired
		{
			get
			{
				return this._familyDetailsRequired;
			}
			set
			{
				if ((this._familyDetailsRequired != value))
				{
					this.OnfamilyDetailsRequiredChanging(value);
					this.SendPropertyChanging();
					this._familyDetailsRequired = value;
					this.SendPropertyChanged("familyDetailsRequired");
					this.OnfamilyDetailsRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_spokenLanguage", DbType="NVarChar(50)")]
		public string spokenLanguage
		{
			get
			{
				return this._spokenLanguage;
			}
			set
			{
				if ((this._spokenLanguage != value))
				{
					this.OnspokenLanguageChanging(value);
					this.SendPropertyChanging();
					this._spokenLanguage = value;
					this.SendPropertyChanged("spokenLanguage");
					this.OnspokenLanguageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_spokenLanguageOtherstxt", DbType="NVarChar(500)")]
		public string spokenLanguageOtherstxt
		{
			get
			{
				return this._spokenLanguageOtherstxt;
			}
			set
			{
				if ((this._spokenLanguageOtherstxt != value))
				{
					this.OnspokenLanguageOtherstxtChanging(value);
					this.SendPropertyChanging();
					this._spokenLanguageOtherstxt = value;
					this.SendPropertyChanged("spokenLanguageOtherstxt");
					this.OnspokenLanguageOtherstxtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_writtenLanguage", DbType="NVarChar(50)")]
		public string writtenLanguage
		{
			get
			{
				return this._writtenLanguage;
			}
			set
			{
				if ((this._writtenLanguage != value))
				{
					this.OnwrittenLanguageChanging(value);
					this.SendPropertyChanging();
					this._writtenLanguage = value;
					this.SendPropertyChanged("writtenLanguage");
					this.OnwrittenLanguageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_writtenLanguageOtherstxt", DbType="NVarChar(500)")]
		public string writtenLanguageOtherstxt
		{
			get
			{
				return this._writtenLanguageOtherstxt;
			}
			set
			{
				if ((this._writtenLanguageOtherstxt != value))
				{
					this.OnwrittenLanguageOtherstxtChanging(value);
					this.SendPropertyChanging();
					this._writtenLanguageOtherstxt = value;
					this.SendPropertyChanged("writtenLanguageOtherstxt");
					this.OnwrittenLanguageOtherstxtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accompanyQuestion", DbType="NVarChar(5)")]
		public string accompanyQuestion
		{
			get
			{
				return this._accompanyQuestion;
			}
			set
			{
				if ((this._accompanyQuestion != value))
				{
					this.OnaccompanyQuestionChanging(value);
					this.SendPropertyChanging();
					this._accompanyQuestion = value;
					this.SendPropertyChanged("accompanyQuestion");
					this.OnaccompanyQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trustedIndividualName", DbType="NVarChar(500)")]
		public string trustedIndividualName
		{
			get
			{
				return this._trustedIndividualName;
			}
			set
			{
				if ((this._trustedIndividualName != value))
				{
					this.OntrustedIndividualNameChanging(value);
					this.SendPropertyChanging();
					this._trustedIndividualName = value;
					this.SendPropertyChanged("trustedIndividualName");
					this.OntrustedIndividualNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_clientRelationship", DbType="NVarChar(500)")]
		public string clientRelationship
		{
			get
			{
				return this._clientRelationship;
			}
			set
			{
				if ((this._clientRelationship != value))
				{
					this.OnclientRelationshipChanging(value);
					this.SendPropertyChanging();
					this._clientRelationship = value;
					this.SendPropertyChanged("clientRelationship");
					this.OnclientRelationshipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NRICAccompany", DbType="NVarChar(50)")]
		public string NRICAccompany
		{
			get
			{
				return this._NRICAccompany;
			}
			set
			{
				if ((this._NRICAccompany != value))
				{
					this.OnNRICAccompanyChanging(value);
					this.SendPropertyChanging();
					this._NRICAccompany = value;
					this.SendPropertyChanged("NRICAccompany");
					this.OnNRICAccompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_noAccompaniedIndividualReason", DbType="NVarChar(1000)")]
		public string noAccompaniedIndividualReason
		{
			get
			{
				return this._noAccompaniedIndividualReason;
			}
			set
			{
				if ((this._noAccompaniedIndividualReason != value))
				{
					this.OnnoAccompaniedIndividualReasonChanging(value);
					this.SendPropertyChanging();
					this._noAccompaniedIndividualReason = value;
					this.SendPropertyChanged("noAccompaniedIndividualReason");
					this.OnnoAccompaniedIndividualReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="personaldetail_familyMemberDetail", Storage="_familyMemberDetails", ThisKey="id", OtherKey="personalDetailId")]
		public EntitySet<familyMemberDetail> familyMemberDetails
		{
			get
			{
				return this._familyMemberDetails;
			}
			set
			{
				this._familyMemberDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_familyMemberDetails(familyMemberDetail entity)
		{
			this.SendPropertyChanging();
			entity.personaldetail = this;
		}
		
		private void detach_familyMemberDetails(familyMemberDetail entity)
		{
			this.SendPropertyChanging();
			entity.personaldetail = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.priorityDetails")]
	public partial class priorityDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _protection1;
		
		private string _protection2;
		
		private string _protection3;
		
		private string _savings1;
		
		private string _savings2;
		
		private string _savings3;
		
		private string _caseid;
		
		private string _protection4;
		
		private string _protection5;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onprotection1Changing(string value);
    partial void Onprotection1Changed();
    partial void Onprotection2Changing(string value);
    partial void Onprotection2Changed();
    partial void Onprotection3Changing(string value);
    partial void Onprotection3Changed();
    partial void Onsavings1Changing(string value);
    partial void Onsavings1Changed();
    partial void Onsavings2Changing(string value);
    partial void Onsavings2Changed();
    partial void Onsavings3Changing(string value);
    partial void Onsavings3Changed();
    partial void OncaseidChanging(string value);
    partial void OncaseidChanged();
    partial void Onprotection4Changing(string value);
    partial void Onprotection4Changed();
    partial void Onprotection5Changing(string value);
    partial void Onprotection5Changed();
    #endregion
		
		public priorityDetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_protection1", DbType="NChar(10)")]
		public string protection1
		{
			get
			{
				return this._protection1;
			}
			set
			{
				if ((this._protection1 != value))
				{
					this.Onprotection1Changing(value);
					this.SendPropertyChanging();
					this._protection1 = value;
					this.SendPropertyChanged("protection1");
					this.Onprotection1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_protection2", DbType="NChar(10)")]
		public string protection2
		{
			get
			{
				return this._protection2;
			}
			set
			{
				if ((this._protection2 != value))
				{
					this.Onprotection2Changing(value);
					this.SendPropertyChanging();
					this._protection2 = value;
					this.SendPropertyChanged("protection2");
					this.Onprotection2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_protection3", DbType="NChar(10)")]
		public string protection3
		{
			get
			{
				return this._protection3;
			}
			set
			{
				if ((this._protection3 != value))
				{
					this.Onprotection3Changing(value);
					this.SendPropertyChanging();
					this._protection3 = value;
					this.SendPropertyChanged("protection3");
					this.Onprotection3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_savings1", DbType="NChar(10)")]
		public string savings1
		{
			get
			{
				return this._savings1;
			}
			set
			{
				if ((this._savings1 != value))
				{
					this.Onsavings1Changing(value);
					this.SendPropertyChanging();
					this._savings1 = value;
					this.SendPropertyChanged("savings1");
					this.Onsavings1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_savings2", DbType="NChar(10)")]
		public string savings2
		{
			get
			{
				return this._savings2;
			}
			set
			{
				if ((this._savings2 != value))
				{
					this.Onsavings2Changing(value);
					this.SendPropertyChanging();
					this._savings2 = value;
					this.SendPropertyChanged("savings2");
					this.Onsavings2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_savings3", DbType="NChar(10)")]
		public string savings3
		{
			get
			{
				return this._savings3;
			}
			set
			{
				if ((this._savings3 != value))
				{
					this.Onsavings3Changing(value);
					this.SendPropertyChanging();
					this._savings3 = value;
					this.SendPropertyChanged("savings3");
					this.Onsavings3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_caseid", DbType="NVarChar(50)")]
		public string caseid
		{
			get
			{
				return this._caseid;
			}
			set
			{
				if ((this._caseid != value))
				{
					this.OncaseidChanging(value);
					this.SendPropertyChanging();
					this._caseid = value;
					this.SendPropertyChanged("caseid");
					this.OncaseidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_protection4", DbType="NChar(10)")]
		public string protection4
		{
			get
			{
				return this._protection4;
			}
			set
			{
				if ((this._protection4 != value))
				{
					this.Onprotection4Changing(value);
					this.SendPropertyChanging();
					this._protection4 = value;
					this.SendPropertyChanged("protection4");
					this.Onprotection4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_protection5", DbType="NChar(10)")]
		public string protection5
		{
			get
			{
				return this._protection5;
			}
			set
			{
				if ((this._protection5 != value))
				{
					this.Onprotection5Changing(value);
					this.SendPropertyChanging();
					this._protection5 = value;
					this.SendPropertyChanged("protection5");
					this.Onprotection5Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.educationgoals")]
	public partial class educationgoal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _caseid;
		
		private string _nameofchild;
		
		private string _currentage;
		
		private string _agefundsneeded;
		
		private string _noofyrstosave;
		
		private System.Nullable<int> _countryofstudyid;
		
		private string _maturityvalue;
		
		private string _total;
		
		private System.Nullable<bool> _deleted;
		
		private string _existingassetstotal;
		
		private string _futurecost;
		
		private string _presentcost;
		
		private string _inflationrate;
		
		private System.Nullable<int> _educationGoalNeeded;
		
		private EntitySet<existingasseteg> _existingassetegs;
		
		private EntityRef<countrycostofeducation> _countrycostofeducation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncaseidChanging(string value);
    partial void OncaseidChanged();
    partial void OnnameofchildChanging(string value);
    partial void OnnameofchildChanged();
    partial void OncurrentageChanging(string value);
    partial void OncurrentageChanged();
    partial void OnagefundsneededChanging(string value);
    partial void OnagefundsneededChanged();
    partial void OnnoofyrstosaveChanging(string value);
    partial void OnnoofyrstosaveChanged();
    partial void OncountryofstudyidChanging(System.Nullable<int> value);
    partial void OncountryofstudyidChanged();
    partial void OnmaturityvalueChanging(string value);
    partial void OnmaturityvalueChanged();
    partial void OntotalChanging(string value);
    partial void OntotalChanged();
    partial void OndeletedChanging(System.Nullable<bool> value);
    partial void OndeletedChanged();
    partial void OnexistingassetstotalChanging(string value);
    partial void OnexistingassetstotalChanged();
    partial void OnfuturecostChanging(string value);
    partial void OnfuturecostChanged();
    partial void OnpresentcostChanging(string value);
    partial void OnpresentcostChanged();
    partial void OninflationrateChanging(string value);
    partial void OninflationrateChanged();
    partial void OneducationGoalNeededChanging(System.Nullable<int> value);
    partial void OneducationGoalNeededChanged();
    #endregion
		
		public educationgoal()
		{
			this._existingassetegs = new EntitySet<existingasseteg>(new Action<existingasseteg>(this.attach_existingassetegs), new Action<existingasseteg>(this.detach_existingassetegs));
			this._countrycostofeducation = default(EntityRef<countrycostofeducation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_caseid", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string caseid
		{
			get
			{
				return this._caseid;
			}
			set
			{
				if ((this._caseid != value))
				{
					this.OncaseidChanging(value);
					this.SendPropertyChanging();
					this._caseid = value;
					this.SendPropertyChanged("caseid");
					this.OncaseidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nameofchild", DbType="NVarChar(50)")]
		public string nameofchild
		{
			get
			{
				return this._nameofchild;
			}
			set
			{
				if ((this._nameofchild != value))
				{
					this.OnnameofchildChanging(value);
					this.SendPropertyChanging();
					this._nameofchild = value;
					this.SendPropertyChanged("nameofchild");
					this.OnnameofchildChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_currentage", DbType="NVarChar(5)")]
		public string currentage
		{
			get
			{
				return this._currentage;
			}
			set
			{
				if ((this._currentage != value))
				{
					this.OncurrentageChanging(value);
					this.SendPropertyChanging();
					this._currentage = value;
					this.SendPropertyChanged("currentage");
					this.OncurrentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_agefundsneeded", DbType="NVarChar(5)")]
		public string agefundsneeded
		{
			get
			{
				return this._agefundsneeded;
			}
			set
			{
				if ((this._agefundsneeded != value))
				{
					this.OnagefundsneededChanging(value);
					this.SendPropertyChanging();
					this._agefundsneeded = value;
					this.SendPropertyChanged("agefundsneeded");
					this.OnagefundsneededChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_noofyrstosave", DbType="NVarChar(5)")]
		public string noofyrstosave
		{
			get
			{
				return this._noofyrstosave;
			}
			set
			{
				if ((this._noofyrstosave != value))
				{
					this.OnnoofyrstosaveChanging(value);
					this.SendPropertyChanging();
					this._noofyrstosave = value;
					this.SendPropertyChanged("noofyrstosave");
					this.OnnoofyrstosaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_countryofstudyid", DbType="Int")]
		public System.Nullable<int> countryofstudyid
		{
			get
			{
				return this._countryofstudyid;
			}
			set
			{
				if ((this._countryofstudyid != value))
				{
					if (this._countrycostofeducation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncountryofstudyidChanging(value);
					this.SendPropertyChanging();
					this._countryofstudyid = value;
					this.SendPropertyChanged("countryofstudyid");
					this.OncountryofstudyidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maturityvalue", DbType="NVarChar(50)")]
		public string maturityvalue
		{
			get
			{
				return this._maturityvalue;
			}
			set
			{
				if ((this._maturityvalue != value))
				{
					this.OnmaturityvalueChanging(value);
					this.SendPropertyChanging();
					this._maturityvalue = value;
					this.SendPropertyChanged("maturityvalue");
					this.OnmaturityvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total", DbType="NVarChar(50)")]
		public string total
		{
			get
			{
				return this._total;
			}
			set
			{
				if ((this._total != value))
				{
					this.OntotalChanging(value);
					this.SendPropertyChanging();
					this._total = value;
					this.SendPropertyChanged("total");
					this.OntotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deleted", DbType="Bit")]
		public System.Nullable<bool> deleted
		{
			get
			{
				return this._deleted;
			}
			set
			{
				if ((this._deleted != value))
				{
					this.OndeletedChanging(value);
					this.SendPropertyChanging();
					this._deleted = value;
					this.SendPropertyChanged("deleted");
					this.OndeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_existingassetstotal", DbType="NVarChar(50)")]
		public string existingassetstotal
		{
			get
			{
				return this._existingassetstotal;
			}
			set
			{
				if ((this._existingassetstotal != value))
				{
					this.OnexistingassetstotalChanging(value);
					this.SendPropertyChanging();
					this._existingassetstotal = value;
					this.SendPropertyChanged("existingassetstotal");
					this.OnexistingassetstotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_futurecost", DbType="NVarChar(50)")]
		public string futurecost
		{
			get
			{
				return this._futurecost;
			}
			set
			{
				if ((this._futurecost != value))
				{
					this.OnfuturecostChanging(value);
					this.SendPropertyChanging();
					this._futurecost = value;
					this.SendPropertyChanged("futurecost");
					this.OnfuturecostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_presentcost", DbType="NVarChar(50)")]
		public string presentcost
		{
			get
			{
				return this._presentcost;
			}
			set
			{
				if ((this._presentcost != value))
				{
					this.OnpresentcostChanging(value);
					this.SendPropertyChanging();
					this._presentcost = value;
					this.SendPropertyChanged("presentcost");
					this.OnpresentcostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inflationrate", DbType="NVarChar(50)")]
		public string inflationrate
		{
			get
			{
				return this._inflationrate;
			}
			set
			{
				if ((this._inflationrate != value))
				{
					this.OninflationrateChanging(value);
					this.SendPropertyChanging();
					this._inflationrate = value;
					this.SendPropertyChanged("inflationrate");
					this.OninflationrateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_educationGoalNeeded", DbType="Int")]
		public System.Nullable<int> educationGoalNeeded
		{
			get
			{
				return this._educationGoalNeeded;
			}
			set
			{
				if ((this._educationGoalNeeded != value))
				{
					this.OneducationGoalNeededChanging(value);
					this.SendPropertyChanging();
					this._educationGoalNeeded = value;
					this.SendPropertyChanged("educationGoalNeeded");
					this.OneducationGoalNeededChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="educationgoal_existingasseteg", Storage="_existingassetegs", ThisKey="id", OtherKey="educationgoalsid")]
		public EntitySet<existingasseteg> existingassetegs
		{
			get
			{
				return this._existingassetegs;
			}
			set
			{
				this._existingassetegs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="countrycostofeducation_educationgoal", Storage="_countrycostofeducation", ThisKey="countryofstudyid", OtherKey="id", IsForeignKey=true)]
		public countrycostofeducation countrycostofeducation
		{
			get
			{
				return this._countrycostofeducation.Entity;
			}
			set
			{
				countrycostofeducation previousValue = this._countrycostofeducation.Entity;
				if (((previousValue != value) 
							|| (this._countrycostofeducation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._countrycostofeducation.Entity = null;
						previousValue.educationgoals.Remove(this);
					}
					this._countrycostofeducation.Entity = value;
					if ((value != null))
					{
						value.educationgoals.Add(this);
						this._countryofstudyid = value.id;
					}
					else
					{
						this._countryofstudyid = default(Nullable<int>);
					}
					this.SendPropertyChanged("countrycostofeducation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_existingassetegs(existingasseteg entity)
		{
			this.SendPropertyChanging();
			entity.educationgoal = this;
		}
		
		private void detach_existingassetegs(existingasseteg entity)
		{
			this.SendPropertyChanging();
			entity.educationgoal = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.assetAndLiability")]
	public partial class assetAndLiability : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _bankAcctCash;
		
		private string _cpfoaBal;
		
		private string _cpfsaBal;
		
		private string _srsBal;
		
		private string _stocksSharesCash;
		
		private string _stocksSharesCpf;
		
		private string _unitTrustsCash;
		
		private string _unitTrustsCpf;
		
		private string _ilpCash;
		
		private string _ilpCpf;
		
		private string _srsInvCash;
		
		private string _invPropCash;
		
		private string _invPropCpf;
		
		private string _resPropCash;
		
		private string _resPropCpf;
		
		private string _homeMortgage;
		
		private string _vehicleLoan;
		
		private string _cashLoan;
		
		private string _creditCard;
		
		private string _netWorth;
		
		private string _regularSumCash;
		
		private string _lumpSumCash;
		
		private string _regularSumCpf;
		
		private string _lumpSumCpf;
		
		private System.Nullable<System.DateTime> _submissionDate;
		
		private string _caseId;
		
		private string _cpfMediSaveBalance;
		
		private System.Nullable<int> _assetAndLiabilityNeeded;
		
		private string _assetAndLiabilityNotNeededReason;
		
		private System.Nullable<int> _premiumRecomendedNeeded;
		
		private string _assetIncomePercent;
		
		private EntitySet<personalUseAssetsOther> _personalUseAssetsOthers;
		
		private EntitySet<investedAssetOther> _investedAssetOthers;
		
		private EntitySet<liabilityOther> _liabilityOthers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnbankAcctCashChanging(string value);
    partial void OnbankAcctCashChanged();
    partial void OncpfoaBalChanging(string value);
    partial void OncpfoaBalChanged();
    partial void OncpfsaBalChanging(string value);
    partial void OncpfsaBalChanged();
    partial void OnsrsBalChanging(string value);
    partial void OnsrsBalChanged();
    partial void OnstocksSharesCashChanging(string value);
    partial void OnstocksSharesCashChanged();
    partial void OnstocksSharesCpfChanging(string value);
    partial void OnstocksSharesCpfChanged();
    partial void OnunitTrustsCashChanging(string value);
    partial void OnunitTrustsCashChanged();
    partial void OnunitTrustsCpfChanging(string value);
    partial void OnunitTrustsCpfChanged();
    partial void OnilpCashChanging(string value);
    partial void OnilpCashChanged();
    partial void OnilpCpfChanging(string value);
    partial void OnilpCpfChanged();
    partial void OnsrsInvCashChanging(string value);
    partial void OnsrsInvCashChanged();
    partial void OninvPropCashChanging(string value);
    partial void OninvPropCashChanged();
    partial void OninvPropCpfChanging(string value);
    partial void OninvPropCpfChanged();
    partial void OnresPropCashChanging(string value);
    partial void OnresPropCashChanged();
    partial void OnresPropCpfChanging(string value);
    partial void OnresPropCpfChanged();
    partial void OnhomeMortgageChanging(string value);
    partial void OnhomeMortgageChanged();
    partial void OnvehicleLoanChanging(string value);
    partial void OnvehicleLoanChanged();
    partial void OncashLoanChanging(string value);
    partial void OncashLoanChanged();
    partial void OncreditCardChanging(string value);
    partial void OncreditCardChanged();
    partial void OnnetWorthChanging(string value);
    partial void OnnetWorthChanged();
    partial void OnregularSumCashChanging(string value);
    partial void OnregularSumCashChanged();
    partial void OnlumpSumCashChanging(string value);
    partial void OnlumpSumCashChanged();
    partial void OnregularSumCpfChanging(string value);
    partial void OnregularSumCpfChanged();
    partial void OnlumpSumCpfChanging(string value);
    partial void OnlumpSumCpfChanged();
    partial void OnsubmissionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnsubmissionDateChanged();
    partial void OncaseIdChanging(string value);
    partial void OncaseIdChanged();
    partial void OncpfMediSaveBalanceChanging(string value);
    partial void OncpfMediSaveBalanceChanged();
    partial void OnassetAndLiabilityNeededChanging(System.Nullable<int> value);
    partial void OnassetAndLiabilityNeededChanged();
    partial void OnassetAndLiabilityNotNeededReasonChanging(string value);
    partial void OnassetAndLiabilityNotNeededReasonChanged();
    partial void OnpremiumRecomendedNeededChanging(System.Nullable<int> value);
    partial void OnpremiumRecomendedNeededChanged();
    partial void OnassetIncomePercentChanging(string value);
    partial void OnassetIncomePercentChanged();
    #endregion
		
		public assetAndLiability()
		{
			this._personalUseAssetsOthers = new EntitySet<personalUseAssetsOther>(new Action<personalUseAssetsOther>(this.attach_personalUseAssetsOthers), new Action<personalUseAssetsOther>(this.detach_personalUseAssetsOthers));
			this._investedAssetOthers = new EntitySet<investedAssetOther>(new Action<investedAssetOther>(this.attach_investedAssetOthers), new Action<investedAssetOther>(this.detach_investedAssetOthers));
			this._liabilityOthers = new EntitySet<liabilityOther>(new Action<liabilityOther>(this.attach_liabilityOthers), new Action<liabilityOther>(this.detach_liabilityOthers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bankAcctCash", DbType="NVarChar(50)")]
		public string bankAcctCash
		{
			get
			{
				return this._bankAcctCash;
			}
			set
			{
				if ((this._bankAcctCash != value))
				{
					this.OnbankAcctCashChanging(value);
					this.SendPropertyChanging();
					this._bankAcctCash = value;
					this.SendPropertyChanged("bankAcctCash");
					this.OnbankAcctCashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cpfoaBal", DbType="NVarChar(50)")]
		public string cpfoaBal
		{
			get
			{
				return this._cpfoaBal;
			}
			set
			{
				if ((this._cpfoaBal != value))
				{
					this.OncpfoaBalChanging(value);
					this.SendPropertyChanging();
					this._cpfoaBal = value;
					this.SendPropertyChanged("cpfoaBal");
					this.OncpfoaBalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cpfsaBal", DbType="NVarChar(50)")]
		public string cpfsaBal
		{
			get
			{
				return this._cpfsaBal;
			}
			set
			{
				if ((this._cpfsaBal != value))
				{
					this.OncpfsaBalChanging(value);
					this.SendPropertyChanging();
					this._cpfsaBal = value;
					this.SendPropertyChanged("cpfsaBal");
					this.OncpfsaBalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_srsBal", DbType="NVarChar(50)")]
		public string srsBal
		{
			get
			{
				return this._srsBal;
			}
			set
			{
				if ((this._srsBal != value))
				{
					this.OnsrsBalChanging(value);
					this.SendPropertyChanging();
					this._srsBal = value;
					this.SendPropertyChanged("srsBal");
					this.OnsrsBalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stocksSharesCash", DbType="NVarChar(50)")]
		public string stocksSharesCash
		{
			get
			{
				return this._stocksSharesCash;
			}
			set
			{
				if ((this._stocksSharesCash != value))
				{
					this.OnstocksSharesCashChanging(value);
					this.SendPropertyChanging();
					this._stocksSharesCash = value;
					this.SendPropertyChanged("stocksSharesCash");
					this.OnstocksSharesCashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stocksSharesCpf", DbType="NVarChar(50)")]
		public string stocksSharesCpf
		{
			get
			{
				return this._stocksSharesCpf;
			}
			set
			{
				if ((this._stocksSharesCpf != value))
				{
					this.OnstocksSharesCpfChanging(value);
					this.SendPropertyChanging();
					this._stocksSharesCpf = value;
					this.SendPropertyChanged("stocksSharesCpf");
					this.OnstocksSharesCpfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unitTrustsCash", DbType="NVarChar(50)")]
		public string unitTrustsCash
		{
			get
			{
				return this._unitTrustsCash;
			}
			set
			{
				if ((this._unitTrustsCash != value))
				{
					this.OnunitTrustsCashChanging(value);
					this.SendPropertyChanging();
					this._unitTrustsCash = value;
					this.SendPropertyChanged("unitTrustsCash");
					this.OnunitTrustsCashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unitTrustsCpf", DbType="NVarChar(50)")]
		public string unitTrustsCpf
		{
			get
			{
				return this._unitTrustsCpf;
			}
			set
			{
				if ((this._unitTrustsCpf != value))
				{
					this.OnunitTrustsCpfChanging(value);
					this.SendPropertyChanging();
					this._unitTrustsCpf = value;
					this.SendPropertyChanged("unitTrustsCpf");
					this.OnunitTrustsCpfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ilpCash", DbType="NVarChar(50)")]
		public string ilpCash
		{
			get
			{
				return this._ilpCash;
			}
			set
			{
				if ((this._ilpCash != value))
				{
					this.OnilpCashChanging(value);
					this.SendPropertyChanging();
					this._ilpCash = value;
					this.SendPropertyChanged("ilpCash");
					this.OnilpCashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ilpCpf", DbType="NVarChar(50)")]
		public string ilpCpf
		{
			get
			{
				return this._ilpCpf;
			}
			set
			{
				if ((this._ilpCpf != value))
				{
					this.OnilpCpfChanging(value);
					this.SendPropertyChanging();
					this._ilpCpf = value;
					this.SendPropertyChanged("ilpCpf");
					this.OnilpCpfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_srsInvCash", DbType="NVarChar(50)")]
		public string srsInvCash
		{
			get
			{
				return this._srsInvCash;
			}
			set
			{
				if ((this._srsInvCash != value))
				{
					this.OnsrsInvCashChanging(value);
					this.SendPropertyChanging();
					this._srsInvCash = value;
					this.SendPropertyChanged("srsInvCash");
					this.OnsrsInvCashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invPropCash", DbType="NVarChar(50)")]
		public string invPropCash
		{
			get
			{
				return this._invPropCash;
			}
			set
			{
				if ((this._invPropCash != value))
				{
					this.OninvPropCashChanging(value);
					this.SendPropertyChanging();
					this._invPropCash = value;
					this.SendPropertyChanged("invPropCash");
					this.OninvPropCashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invPropCpf", DbType="NVarChar(50)")]
		public string invPropCpf
		{
			get
			{
				return this._invPropCpf;
			}
			set
			{
				if ((this._invPropCpf != value))
				{
					this.OninvPropCpfChanging(value);
					this.SendPropertyChanging();
					this._invPropCpf = value;
					this.SendPropertyChanged("invPropCpf");
					this.OninvPropCpfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_resPropCash", DbType="NVarChar(50)")]
		public string resPropCash
		{
			get
			{
				return this._resPropCash;
			}
			set
			{
				if ((this._resPropCash != value))
				{
					this.OnresPropCashChanging(value);
					this.SendPropertyChanging();
					this._resPropCash = value;
					this.SendPropertyChanged("resPropCash");
					this.OnresPropCashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_resPropCpf", DbType="NVarChar(50)")]
		public string resPropCpf
		{
			get
			{
				return this._resPropCpf;
			}
			set
			{
				if ((this._resPropCpf != value))
				{
					this.OnresPropCpfChanging(value);
					this.SendPropertyChanging();
					this._resPropCpf = value;
					this.SendPropertyChanged("resPropCpf");
					this.OnresPropCpfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_homeMortgage", DbType="NVarChar(50)")]
		public string homeMortgage
		{
			get
			{
				return this._homeMortgage;
			}
			set
			{
				if ((this._homeMortgage != value))
				{
					this.OnhomeMortgageChanging(value);
					this.SendPropertyChanging();
					this._homeMortgage = value;
					this.SendPropertyChanged("homeMortgage");
					this.OnhomeMortgageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vehicleLoan", DbType="NVarChar(50)")]
		public string vehicleLoan
		{
			get
			{
				return this._vehicleLoan;
			}
			set
			{
				if ((this._vehicleLoan != value))
				{
					this.OnvehicleLoanChanging(value);
					this.SendPropertyChanging();
					this._vehicleLoan = value;
					this.SendPropertyChanged("vehicleLoan");
					this.OnvehicleLoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cashLoan", DbType="NVarChar(50)")]
		public string cashLoan
		{
			get
			{
				return this._cashLoan;
			}
			set
			{
				if ((this._cashLoan != value))
				{
					this.OncashLoanChanging(value);
					this.SendPropertyChanging();
					this._cashLoan = value;
					this.SendPropertyChanged("cashLoan");
					this.OncashLoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_creditCard", DbType="NVarChar(50)")]
		public string creditCard
		{
			get
			{
				return this._creditCard;
			}
			set
			{
				if ((this._creditCard != value))
				{
					this.OncreditCardChanging(value);
					this.SendPropertyChanging();
					this._creditCard = value;
					this.SendPropertyChanged("creditCard");
					this.OncreditCardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_netWorth", DbType="NVarChar(50)")]
		public string netWorth
		{
			get
			{
				return this._netWorth;
			}
			set
			{
				if ((this._netWorth != value))
				{
					this.OnnetWorthChanging(value);
					this.SendPropertyChanging();
					this._netWorth = value;
					this.SendPropertyChanged("netWorth");
					this.OnnetWorthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regularSumCash", DbType="NVarChar(50)")]
		public string regularSumCash
		{
			get
			{
				return this._regularSumCash;
			}
			set
			{
				if ((this._regularSumCash != value))
				{
					this.OnregularSumCashChanging(value);
					this.SendPropertyChanging();
					this._regularSumCash = value;
					this.SendPropertyChanged("regularSumCash");
					this.OnregularSumCashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lumpSumCash", DbType="NVarChar(50)")]
		public string lumpSumCash
		{
			get
			{
				return this._lumpSumCash;
			}
			set
			{
				if ((this._lumpSumCash != value))
				{
					this.OnlumpSumCashChanging(value);
					this.SendPropertyChanging();
					this._lumpSumCash = value;
					this.SendPropertyChanged("lumpSumCash");
					this.OnlumpSumCashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regularSumCpf", DbType="NVarChar(50)")]
		public string regularSumCpf
		{
			get
			{
				return this._regularSumCpf;
			}
			set
			{
				if ((this._regularSumCpf != value))
				{
					this.OnregularSumCpfChanging(value);
					this.SendPropertyChanging();
					this._regularSumCpf = value;
					this.SendPropertyChanged("regularSumCpf");
					this.OnregularSumCpfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lumpSumCpf", DbType="NVarChar(50)")]
		public string lumpSumCpf
		{
			get
			{
				return this._lumpSumCpf;
			}
			set
			{
				if ((this._lumpSumCpf != value))
				{
					this.OnlumpSumCpfChanging(value);
					this.SendPropertyChanging();
					this._lumpSumCpf = value;
					this.SendPropertyChanged("lumpSumCpf");
					this.OnlumpSumCpfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_submissionDate", DbType="Date")]
		public System.Nullable<System.DateTime> submissionDate
		{
			get
			{
				return this._submissionDate;
			}
			set
			{
				if ((this._submissionDate != value))
				{
					this.OnsubmissionDateChanging(value);
					this.SendPropertyChanging();
					this._submissionDate = value;
					this.SendPropertyChanged("submissionDate");
					this.OnsubmissionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_caseId", DbType="VarChar(50)")]
		public string caseId
		{
			get
			{
				return this._caseId;
			}
			set
			{
				if ((this._caseId != value))
				{
					this.OncaseIdChanging(value);
					this.SendPropertyChanging();
					this._caseId = value;
					this.SendPropertyChanged("caseId");
					this.OncaseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cpfMediSaveBalance", DbType="NVarChar(50)")]
		public string cpfMediSaveBalance
		{
			get
			{
				return this._cpfMediSaveBalance;
			}
			set
			{
				if ((this._cpfMediSaveBalance != value))
				{
					this.OncpfMediSaveBalanceChanging(value);
					this.SendPropertyChanging();
					this._cpfMediSaveBalance = value;
					this.SendPropertyChanged("cpfMediSaveBalance");
					this.OncpfMediSaveBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_assetAndLiabilityNeeded", DbType="Int")]
		public System.Nullable<int> assetAndLiabilityNeeded
		{
			get
			{
				return this._assetAndLiabilityNeeded;
			}
			set
			{
				if ((this._assetAndLiabilityNeeded != value))
				{
					this.OnassetAndLiabilityNeededChanging(value);
					this.SendPropertyChanging();
					this._assetAndLiabilityNeeded = value;
					this.SendPropertyChanged("assetAndLiabilityNeeded");
					this.OnassetAndLiabilityNeededChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_assetAndLiabilityNotNeededReason", DbType="NVarChar(200)")]
		public string assetAndLiabilityNotNeededReason
		{
			get
			{
				return this._assetAndLiabilityNotNeededReason;
			}
			set
			{
				if ((this._assetAndLiabilityNotNeededReason != value))
				{
					this.OnassetAndLiabilityNotNeededReasonChanging(value);
					this.SendPropertyChanging();
					this._assetAndLiabilityNotNeededReason = value;
					this.SendPropertyChanged("assetAndLiabilityNotNeededReason");
					this.OnassetAndLiabilityNotNeededReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_premiumRecomendedNeeded", DbType="Int")]
		public System.Nullable<int> premiumRecomendedNeeded
		{
			get
			{
				return this._premiumRecomendedNeeded;
			}
			set
			{
				if ((this._premiumRecomendedNeeded != value))
				{
					this.OnpremiumRecomendedNeededChanging(value);
					this.SendPropertyChanging();
					this._premiumRecomendedNeeded = value;
					this.SendPropertyChanged("premiumRecomendedNeeded");
					this.OnpremiumRecomendedNeededChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_assetIncomePercent", DbType="NVarChar(4)")]
		public string assetIncomePercent
		{
			get
			{
				return this._assetIncomePercent;
			}
			set
			{
				if ((this._assetIncomePercent != value))
				{
					this.OnassetIncomePercentChanging(value);
					this.SendPropertyChanging();
					this._assetIncomePercent = value;
					this.SendPropertyChanged("assetIncomePercent");
					this.OnassetIncomePercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="assetAndLiability_personalUseAssetsOther", Storage="_personalUseAssetsOthers", ThisKey="id", OtherKey="assetLiabilityId")]
		public EntitySet<personalUseAssetsOther> personalUseAssetsOthers
		{
			get
			{
				return this._personalUseAssetsOthers;
			}
			set
			{
				this._personalUseAssetsOthers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="assetAndLiability_investedAssetOther", Storage="_investedAssetOthers", ThisKey="id", OtherKey="assetLiabilityId")]
		public EntitySet<investedAssetOther> investedAssetOthers
		{
			get
			{
				return this._investedAssetOthers;
			}
			set
			{
				this._investedAssetOthers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="assetAndLiability_liabilityOther", Storage="_liabilityOthers", ThisKey="id", OtherKey="assetLiabilityId")]
		public EntitySet<liabilityOther> liabilityOthers
		{
			get
			{
				return this._liabilityOthers;
			}
			set
			{
				this._liabilityOthers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_personalUseAssetsOthers(personalUseAssetsOther entity)
		{
			this.SendPropertyChanging();
			entity.assetAndLiability = this;
		}
		
		private void detach_personalUseAssetsOthers(personalUseAssetsOther entity)
		{
			this.SendPropertyChanging();
			entity.assetAndLiability = null;
		}
		
		private void attach_investedAssetOthers(investedAssetOther entity)
		{
			this.SendPropertyChanging();
			entity.assetAndLiability = this;
		}
		
		private void detach_investedAssetOthers(investedAssetOther entity)
		{
			this.SendPropertyChanging();
			entity.assetAndLiability = null;
		}
		
		private void attach_liabilityOthers(liabilityOther entity)
		{
			this.SendPropertyChanging();
			entity.assetAndLiability = this;
		}
		
		private void detach_liabilityOthers(liabilityOther entity)
		{
			this.SendPropertyChanging();
			entity.assetAndLiability = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.retirementgoals")]
	public partial class retirementgoal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _caseid;
		
		private string _intendedretirementage;
		
		private string _incomerequired;
		
		private string _yrstoretirement;
		
		private string _futureincome;
		
		private string _sourcesofincome;
		
		private string _totalfirstyrincome;
		
		private string _durationretirement;
		
		private string _lumpsumrequired;
		
		private string _maturityvalue;
		
		private string _total;
		
		private string _selforspouse;
		
		private string _existingassetstotal;
		
		private string _inflationrate;
		
		private string _inflationreturnrate;
		
		private System.Nullable<int> _retirementGoalNeeded;
		
		private EntitySet<existingassetrg> _existingassetrgs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncaseidChanging(string value);
    partial void OncaseidChanged();
    partial void OnintendedretirementageChanging(string value);
    partial void OnintendedretirementageChanged();
    partial void OnincomerequiredChanging(string value);
    partial void OnincomerequiredChanged();
    partial void OnyrstoretirementChanging(string value);
    partial void OnyrstoretirementChanged();
    partial void OnfutureincomeChanging(string value);
    partial void OnfutureincomeChanged();
    partial void OnsourcesofincomeChanging(string value);
    partial void OnsourcesofincomeChanged();
    partial void OntotalfirstyrincomeChanging(string value);
    partial void OntotalfirstyrincomeChanged();
    partial void OndurationretirementChanging(string value);
    partial void OndurationretirementChanged();
    partial void OnlumpsumrequiredChanging(string value);
    partial void OnlumpsumrequiredChanged();
    partial void OnmaturityvalueChanging(string value);
    partial void OnmaturityvalueChanged();
    partial void OntotalChanging(string value);
    partial void OntotalChanged();
    partial void OnselforspouseChanging(string value);
    partial void OnselforspouseChanged();
    partial void OnexistingassetstotalChanging(string value);
    partial void OnexistingassetstotalChanged();
    partial void OninflationrateChanging(string value);
    partial void OninflationrateChanged();
    partial void OninflationreturnrateChanging(string value);
    partial void OninflationreturnrateChanged();
    partial void OnretirementGoalNeededChanging(System.Nullable<int> value);
    partial void OnretirementGoalNeededChanged();
    #endregion
		
		public retirementgoal()
		{
			this._existingassetrgs = new EntitySet<existingassetrg>(new Action<existingassetrg>(this.attach_existingassetrgs), new Action<existingassetrg>(this.detach_existingassetrgs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_caseid", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string caseid
		{
			get
			{
				return this._caseid;
			}
			set
			{
				if ((this._caseid != value))
				{
					this.OncaseidChanging(value);
					this.SendPropertyChanging();
					this._caseid = value;
					this.SendPropertyChanged("caseid");
					this.OncaseidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intendedretirementage", DbType="NVarChar(5)")]
		public string intendedretirementage
		{
			get
			{
				return this._intendedretirementage;
			}
			set
			{
				if ((this._intendedretirementage != value))
				{
					this.OnintendedretirementageChanging(value);
					this.SendPropertyChanging();
					this._intendedretirementage = value;
					this.SendPropertyChanged("intendedretirementage");
					this.OnintendedretirementageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_incomerequired", DbType="NVarChar(50)")]
		public string incomerequired
		{
			get
			{
				return this._incomerequired;
			}
			set
			{
				if ((this._incomerequired != value))
				{
					this.OnincomerequiredChanging(value);
					this.SendPropertyChanging();
					this._incomerequired = value;
					this.SendPropertyChanged("incomerequired");
					this.OnincomerequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_yrstoretirement", DbType="NVarChar(5)")]
		public string yrstoretirement
		{
			get
			{
				return this._yrstoretirement;
			}
			set
			{
				if ((this._yrstoretirement != value))
				{
					this.OnyrstoretirementChanging(value);
					this.SendPropertyChanging();
					this._yrstoretirement = value;
					this.SendPropertyChanged("yrstoretirement");
					this.OnyrstoretirementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_futureincome", DbType="NVarChar(50)")]
		public string futureincome
		{
			get
			{
				return this._futureincome;
			}
			set
			{
				if ((this._futureincome != value))
				{
					this.OnfutureincomeChanging(value);
					this.SendPropertyChanging();
					this._futureincome = value;
					this.SendPropertyChanged("futureincome");
					this.OnfutureincomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sourcesofincome", DbType="NVarChar(50)")]
		public string sourcesofincome
		{
			get
			{
				return this._sourcesofincome;
			}
			set
			{
				if ((this._sourcesofincome != value))
				{
					this.OnsourcesofincomeChanging(value);
					this.SendPropertyChanging();
					this._sourcesofincome = value;
					this.SendPropertyChanged("sourcesofincome");
					this.OnsourcesofincomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalfirstyrincome", DbType="NVarChar(50)")]
		public string totalfirstyrincome
		{
			get
			{
				return this._totalfirstyrincome;
			}
			set
			{
				if ((this._totalfirstyrincome != value))
				{
					this.OntotalfirstyrincomeChanging(value);
					this.SendPropertyChanging();
					this._totalfirstyrincome = value;
					this.SendPropertyChanged("totalfirstyrincome");
					this.OntotalfirstyrincomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_durationretirement", DbType="NVarChar(5)")]
		public string durationretirement
		{
			get
			{
				return this._durationretirement;
			}
			set
			{
				if ((this._durationretirement != value))
				{
					this.OndurationretirementChanging(value);
					this.SendPropertyChanging();
					this._durationretirement = value;
					this.SendPropertyChanged("durationretirement");
					this.OndurationretirementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lumpsumrequired", DbType="NVarChar(50)")]
		public string lumpsumrequired
		{
			get
			{
				return this._lumpsumrequired;
			}
			set
			{
				if ((this._lumpsumrequired != value))
				{
					this.OnlumpsumrequiredChanging(value);
					this.SendPropertyChanging();
					this._lumpsumrequired = value;
					this.SendPropertyChanged("lumpsumrequired");
					this.OnlumpsumrequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maturityvalue", DbType="NVarChar(50)")]
		public string maturityvalue
		{
			get
			{
				return this._maturityvalue;
			}
			set
			{
				if ((this._maturityvalue != value))
				{
					this.OnmaturityvalueChanging(value);
					this.SendPropertyChanging();
					this._maturityvalue = value;
					this.SendPropertyChanged("maturityvalue");
					this.OnmaturityvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total", DbType="NVarChar(50)")]
		public string total
		{
			get
			{
				return this._total;
			}
			set
			{
				if ((this._total != value))
				{
					this.OntotalChanging(value);
					this.SendPropertyChanging();
					this._total = value;
					this.SendPropertyChanged("total");
					this.OntotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_selforspouse", DbType="NVarChar(10)")]
		public string selforspouse
		{
			get
			{
				return this._selforspouse;
			}
			set
			{
				if ((this._selforspouse != value))
				{
					this.OnselforspouseChanging(value);
					this.SendPropertyChanging();
					this._selforspouse = value;
					this.SendPropertyChanged("selforspouse");
					this.OnselforspouseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_existingassetstotal", DbType="NVarChar(50)")]
		public string existingassetstotal
		{
			get
			{
				return this._existingassetstotal;
			}
			set
			{
				if ((this._existingassetstotal != value))
				{
					this.OnexistingassetstotalChanging(value);
					this.SendPropertyChanging();
					this._existingassetstotal = value;
					this.SendPropertyChanged("existingassetstotal");
					this.OnexistingassetstotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inflationrate", DbType="NVarChar(50)")]
		public string inflationrate
		{
			get
			{
				return this._inflationrate;
			}
			set
			{
				if ((this._inflationrate != value))
				{
					this.OninflationrateChanging(value);
					this.SendPropertyChanging();
					this._inflationrate = value;
					this.SendPropertyChanged("inflationrate");
					this.OninflationrateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inflationreturnrate", DbType="NVarChar(50)")]
		public string inflationreturnrate
		{
			get
			{
				return this._inflationreturnrate;
			}
			set
			{
				if ((this._inflationreturnrate != value))
				{
					this.OninflationreturnrateChanging(value);
					this.SendPropertyChanging();
					this._inflationreturnrate = value;
					this.SendPropertyChanged("inflationreturnrate");
					this.OninflationreturnrateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_retirementGoalNeeded", DbType="Int")]
		public System.Nullable<int> retirementGoalNeeded
		{
			get
			{
				return this._retirementGoalNeeded;
			}
			set
			{
				if ((this._retirementGoalNeeded != value))
				{
					this.OnretirementGoalNeededChanging(value);
					this.SendPropertyChanging();
					this._retirementGoalNeeded = value;
					this.SendPropertyChanged("retirementGoalNeeded");
					this.OnretirementGoalNeededChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="retirementgoal_existingassetrg", Storage="_existingassetrgs", ThisKey="id", OtherKey="retirementgoalsid")]
		public EntitySet<existingassetrg> existingassetrgs
		{
			get
			{
				return this._existingassetrgs;
			}
			set
			{
				this._existingassetrgs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_existingassetrgs(existingassetrg entity)
		{
			this.SendPropertyChanging();
			entity.retirementgoal = this;
		}
		
		private void detach_existingassetrgs(existingassetrg entity)
		{
			this.SendPropertyChanging();
			entity.retirementgoal = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.familyNeeds")]
	public partial class familyNeed : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _caseId;
		
		private string _replacementIncomeRequired;
		
		private string _yearsOfSupportRequired;
		
		private string _inflationAdjustedReturns;
		
		private string _lumpSumRequired;
		
		private string _otherLiabilities;
		
		private string _emergencyFundsNeeded;
		
		private string _finalExpenses;
		
		private string _otherFundingNeeds;
		
		private string _otherComments;
		
		private string _totalRequired;
		
		private string _existingLifeInsurance;
		
		private string _existingAssetsFamilyneeds;
		
		private string _totalShortfallSurplus;
		
		private string _lumpSumRequiredChart;
		
		private string _existingSumRequiredChart;
		
		private string _shortfallSumRequiredChart;
		
		private string _inflationAdjustedReturnsGraph;
		
		private string _yearsOfSupportRequiredGraph;
		
		private string _replacementIncomeChart;
		
		private string _mortgageProtectionOutstanding;
		
		private string _mortgageProtectionInsurances;
		
		private string _mortgageProtectionTotal;
		
		private string _mortgageLoan;
		
		private string _mortgageInsurance;
		
		private string _mortgageShortfall;
		
		private string _replacementIncomePercentage;
		
		private System.Nullable<int> _familyIncPrNeeded;
		
		private System.Nullable<int> _mortgageNeeded;
		
		private EntitySet<familyNeedsAsset> _familyNeedsAssets;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncaseIdChanging(string value);
    partial void OncaseIdChanged();
    partial void OnreplacementIncomeRequiredChanging(string value);
    partial void OnreplacementIncomeRequiredChanged();
    partial void OnyearsOfSupportRequiredChanging(string value);
    partial void OnyearsOfSupportRequiredChanged();
    partial void OninflationAdjustedReturnsChanging(string value);
    partial void OninflationAdjustedReturnsChanged();
    partial void OnlumpSumRequiredChanging(string value);
    partial void OnlumpSumRequiredChanged();
    partial void OnotherLiabilitiesChanging(string value);
    partial void OnotherLiabilitiesChanged();
    partial void OnemergencyFundsNeededChanging(string value);
    partial void OnemergencyFundsNeededChanged();
    partial void OnfinalExpensesChanging(string value);
    partial void OnfinalExpensesChanged();
    partial void OnotherFundingNeedsChanging(string value);
    partial void OnotherFundingNeedsChanged();
    partial void OnotherCommentsChanging(string value);
    partial void OnotherCommentsChanged();
    partial void OntotalRequiredChanging(string value);
    partial void OntotalRequiredChanged();
    partial void OnexistingLifeInsuranceChanging(string value);
    partial void OnexistingLifeInsuranceChanged();
    partial void OnexistingAssetsFamilyneedsChanging(string value);
    partial void OnexistingAssetsFamilyneedsChanged();
    partial void OntotalShortfallSurplusChanging(string value);
    partial void OntotalShortfallSurplusChanged();
    partial void OnlumpSumRequiredChartChanging(string value);
    partial void OnlumpSumRequiredChartChanged();
    partial void OnexistingSumRequiredChartChanging(string value);
    partial void OnexistingSumRequiredChartChanged();
    partial void OnshortfallSumRequiredChartChanging(string value);
    partial void OnshortfallSumRequiredChartChanged();
    partial void OninflationAdjustedReturnsGraphChanging(string value);
    partial void OninflationAdjustedReturnsGraphChanged();
    partial void OnyearsOfSupportRequiredGraphChanging(string value);
    partial void OnyearsOfSupportRequiredGraphChanged();
    partial void OnreplacementIncomeChartChanging(string value);
    partial void OnreplacementIncomeChartChanged();
    partial void OnmortgageProtectionOutstandingChanging(string value);
    partial void OnmortgageProtectionOutstandingChanged();
    partial void OnmortgageProtectionInsurancesChanging(string value);
    partial void OnmortgageProtectionInsurancesChanged();
    partial void OnmortgageProtectionTotalChanging(string value);
    partial void OnmortgageProtectionTotalChanged();
    partial void OnmortgageLoanChanging(string value);
    partial void OnmortgageLoanChanged();
    partial void OnmortgageInsuranceChanging(string value);
    partial void OnmortgageInsuranceChanged();
    partial void OnmortgageShortfallChanging(string value);
    partial void OnmortgageShortfallChanged();
    partial void OnreplacementIncomePercentageChanging(string value);
    partial void OnreplacementIncomePercentageChanged();
    partial void OnfamilyIncPrNeededChanging(System.Nullable<int> value);
    partial void OnfamilyIncPrNeededChanged();
    partial void OnmortgageNeededChanging(System.Nullable<int> value);
    partial void OnmortgageNeededChanged();
    #endregion
		
		public familyNeed()
		{
			this._familyNeedsAssets = new EntitySet<familyNeedsAsset>(new Action<familyNeedsAsset>(this.attach_familyNeedsAssets), new Action<familyNeedsAsset>(this.detach_familyNeedsAssets));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_caseId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string caseId
		{
			get
			{
				return this._caseId;
			}
			set
			{
				if ((this._caseId != value))
				{
					this.OncaseIdChanging(value);
					this.SendPropertyChanging();
					this._caseId = value;
					this.SendPropertyChanged("caseId");
					this.OncaseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_replacementIncomeRequired", DbType="NVarChar(50)")]
		public string replacementIncomeRequired
		{
			get
			{
				return this._replacementIncomeRequired;
			}
			set
			{
				if ((this._replacementIncomeRequired != value))
				{
					this.OnreplacementIncomeRequiredChanging(value);
					this.SendPropertyChanging();
					this._replacementIncomeRequired = value;
					this.SendPropertyChanged("replacementIncomeRequired");
					this.OnreplacementIncomeRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_yearsOfSupportRequired", DbType="NVarChar(50)")]
		public string yearsOfSupportRequired
		{
			get
			{
				return this._yearsOfSupportRequired;
			}
			set
			{
				if ((this._yearsOfSupportRequired != value))
				{
					this.OnyearsOfSupportRequiredChanging(value);
					this.SendPropertyChanging();
					this._yearsOfSupportRequired = value;
					this.SendPropertyChanged("yearsOfSupportRequired");
					this.OnyearsOfSupportRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inflationAdjustedReturns", DbType="NVarChar(50)")]
		public string inflationAdjustedReturns
		{
			get
			{
				return this._inflationAdjustedReturns;
			}
			set
			{
				if ((this._inflationAdjustedReturns != value))
				{
					this.OninflationAdjustedReturnsChanging(value);
					this.SendPropertyChanging();
					this._inflationAdjustedReturns = value;
					this.SendPropertyChanged("inflationAdjustedReturns");
					this.OninflationAdjustedReturnsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lumpSumRequired", DbType="NVarChar(50)")]
		public string lumpSumRequired
		{
			get
			{
				return this._lumpSumRequired;
			}
			set
			{
				if ((this._lumpSumRequired != value))
				{
					this.OnlumpSumRequiredChanging(value);
					this.SendPropertyChanging();
					this._lumpSumRequired = value;
					this.SendPropertyChanged("lumpSumRequired");
					this.OnlumpSumRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_otherLiabilities", DbType="NVarChar(50)")]
		public string otherLiabilities
		{
			get
			{
				return this._otherLiabilities;
			}
			set
			{
				if ((this._otherLiabilities != value))
				{
					this.OnotherLiabilitiesChanging(value);
					this.SendPropertyChanging();
					this._otherLiabilities = value;
					this.SendPropertyChanged("otherLiabilities");
					this.OnotherLiabilitiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emergencyFundsNeeded", DbType="NVarChar(50)")]
		public string emergencyFundsNeeded
		{
			get
			{
				return this._emergencyFundsNeeded;
			}
			set
			{
				if ((this._emergencyFundsNeeded != value))
				{
					this.OnemergencyFundsNeededChanging(value);
					this.SendPropertyChanging();
					this._emergencyFundsNeeded = value;
					this.SendPropertyChanged("emergencyFundsNeeded");
					this.OnemergencyFundsNeededChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_finalExpenses", DbType="NVarChar(50)")]
		public string finalExpenses
		{
			get
			{
				return this._finalExpenses;
			}
			set
			{
				if ((this._finalExpenses != value))
				{
					this.OnfinalExpensesChanging(value);
					this.SendPropertyChanging();
					this._finalExpenses = value;
					this.SendPropertyChanged("finalExpenses");
					this.OnfinalExpensesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_otherFundingNeeds", DbType="NVarChar(50)")]
		public string otherFundingNeeds
		{
			get
			{
				return this._otherFundingNeeds;
			}
			set
			{
				if ((this._otherFundingNeeds != value))
				{
					this.OnotherFundingNeedsChanging(value);
					this.SendPropertyChanging();
					this._otherFundingNeeds = value;
					this.SendPropertyChanged("otherFundingNeeds");
					this.OnotherFundingNeedsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_otherComments", DbType="NVarChar(50)")]
		public string otherComments
		{
			get
			{
				return this._otherComments;
			}
			set
			{
				if ((this._otherComments != value))
				{
					this.OnotherCommentsChanging(value);
					this.SendPropertyChanging();
					this._otherComments = value;
					this.SendPropertyChanged("otherComments");
					this.OnotherCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalRequired", DbType="NVarChar(50)")]
		public string totalRequired
		{
			get
			{
				return this._totalRequired;
			}
			set
			{
				if ((this._totalRequired != value))
				{
					this.OntotalRequiredChanging(value);
					this.SendPropertyChanging();
					this._totalRequired = value;
					this.SendPropertyChanged("totalRequired");
					this.OntotalRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_existingLifeInsurance", DbType="NVarChar(50)")]
		public string existingLifeInsurance
		{
			get
			{
				return this._existingLifeInsurance;
			}
			set
			{
				if ((this._existingLifeInsurance != value))
				{
					this.OnexistingLifeInsuranceChanging(value);
					this.SendPropertyChanging();
					this._existingLifeInsurance = value;
					this.SendPropertyChanged("existingLifeInsurance");
					this.OnexistingLifeInsuranceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_existingAssetsFamilyneeds", DbType="NVarChar(50)")]
		public string existingAssetsFamilyneeds
		{
			get
			{
				return this._existingAssetsFamilyneeds;
			}
			set
			{
				if ((this._existingAssetsFamilyneeds != value))
				{
					this.OnexistingAssetsFamilyneedsChanging(value);
					this.SendPropertyChanging();
					this._existingAssetsFamilyneeds = value;
					this.SendPropertyChanged("existingAssetsFamilyneeds");
					this.OnexistingAssetsFamilyneedsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalShortfallSurplus", DbType="NVarChar(50)")]
		public string totalShortfallSurplus
		{
			get
			{
				return this._totalShortfallSurplus;
			}
			set
			{
				if ((this._totalShortfallSurplus != value))
				{
					this.OntotalShortfallSurplusChanging(value);
					this.SendPropertyChanging();
					this._totalShortfallSurplus = value;
					this.SendPropertyChanged("totalShortfallSurplus");
					this.OntotalShortfallSurplusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lumpSumRequiredChart", DbType="NVarChar(50)")]
		public string lumpSumRequiredChart
		{
			get
			{
				return this._lumpSumRequiredChart;
			}
			set
			{
				if ((this._lumpSumRequiredChart != value))
				{
					this.OnlumpSumRequiredChartChanging(value);
					this.SendPropertyChanging();
					this._lumpSumRequiredChart = value;
					this.SendPropertyChanged("lumpSumRequiredChart");
					this.OnlumpSumRequiredChartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_existingSumRequiredChart", DbType="NVarChar(50)")]
		public string existingSumRequiredChart
		{
			get
			{
				return this._existingSumRequiredChart;
			}
			set
			{
				if ((this._existingSumRequiredChart != value))
				{
					this.OnexistingSumRequiredChartChanging(value);
					this.SendPropertyChanging();
					this._existingSumRequiredChart = value;
					this.SendPropertyChanged("existingSumRequiredChart");
					this.OnexistingSumRequiredChartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shortfallSumRequiredChart", DbType="NVarChar(50)")]
		public string shortfallSumRequiredChart
		{
			get
			{
				return this._shortfallSumRequiredChart;
			}
			set
			{
				if ((this._shortfallSumRequiredChart != value))
				{
					this.OnshortfallSumRequiredChartChanging(value);
					this.SendPropertyChanging();
					this._shortfallSumRequiredChart = value;
					this.SendPropertyChanged("shortfallSumRequiredChart");
					this.OnshortfallSumRequiredChartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inflationAdjustedReturnsGraph", DbType="NVarChar(50)")]
		public string inflationAdjustedReturnsGraph
		{
			get
			{
				return this._inflationAdjustedReturnsGraph;
			}
			set
			{
				if ((this._inflationAdjustedReturnsGraph != value))
				{
					this.OninflationAdjustedReturnsGraphChanging(value);
					this.SendPropertyChanging();
					this._inflationAdjustedReturnsGraph = value;
					this.SendPropertyChanged("inflationAdjustedReturnsGraph");
					this.OninflationAdjustedReturnsGraphChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_yearsOfSupportRequiredGraph", DbType="NVarChar(50)")]
		public string yearsOfSupportRequiredGraph
		{
			get
			{
				return this._yearsOfSupportRequiredGraph;
			}
			set
			{
				if ((this._yearsOfSupportRequiredGraph != value))
				{
					this.OnyearsOfSupportRequiredGraphChanging(value);
					this.SendPropertyChanging();
					this._yearsOfSupportRequiredGraph = value;
					this.SendPropertyChanged("yearsOfSupportRequiredGraph");
					this.OnyearsOfSupportRequiredGraphChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_replacementIncomeChart", DbType="NVarChar(50)")]
		public string replacementIncomeChart
		{
			get
			{
				return this._replacementIncomeChart;
			}
			set
			{
				if ((this._replacementIncomeChart != value))
				{
					this.OnreplacementIncomeChartChanging(value);
					this.SendPropertyChanging();
					this._replacementIncomeChart = value;
					this.SendPropertyChanged("replacementIncomeChart");
					this.OnreplacementIncomeChartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mortgageProtectionOutstanding", DbType="NVarChar(50)")]
		public string mortgageProtectionOutstanding
		{
			get
			{
				return this._mortgageProtectionOutstanding;
			}
			set
			{
				if ((this._mortgageProtectionOutstanding != value))
				{
					this.OnmortgageProtectionOutstandingChanging(value);
					this.SendPropertyChanging();
					this._mortgageProtectionOutstanding = value;
					this.SendPropertyChanged("mortgageProtectionOutstanding");
					this.OnmortgageProtectionOutstandingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mortgageProtectionInsurances", DbType="NVarChar(50)")]
		public string mortgageProtectionInsurances
		{
			get
			{
				return this._mortgageProtectionInsurances;
			}
			set
			{
				if ((this._mortgageProtectionInsurances != value))
				{
					this.OnmortgageProtectionInsurancesChanging(value);
					this.SendPropertyChanging();
					this._mortgageProtectionInsurances = value;
					this.SendPropertyChanged("mortgageProtectionInsurances");
					this.OnmortgageProtectionInsurancesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mortgageProtectionTotal", DbType="NVarChar(50)")]
		public string mortgageProtectionTotal
		{
			get
			{
				return this._mortgageProtectionTotal;
			}
			set
			{
				if ((this._mortgageProtectionTotal != value))
				{
					this.OnmortgageProtectionTotalChanging(value);
					this.SendPropertyChanging();
					this._mortgageProtectionTotal = value;
					this.SendPropertyChanged("mortgageProtectionTotal");
					this.OnmortgageProtectionTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mortgageLoan", DbType="NVarChar(50)")]
		public string mortgageLoan
		{
			get
			{
				return this._mortgageLoan;
			}
			set
			{
				if ((this._mortgageLoan != value))
				{
					this.OnmortgageLoanChanging(value);
					this.SendPropertyChanging();
					this._mortgageLoan = value;
					this.SendPropertyChanged("mortgageLoan");
					this.OnmortgageLoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mortgageInsurance", DbType="NVarChar(50)")]
		public string mortgageInsurance
		{
			get
			{
				return this._mortgageInsurance;
			}
			set
			{
				if ((this._mortgageInsurance != value))
				{
					this.OnmortgageInsuranceChanging(value);
					this.SendPropertyChanging();
					this._mortgageInsurance = value;
					this.SendPropertyChanged("mortgageInsurance");
					this.OnmortgageInsuranceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mortgageShortfall", DbType="NVarChar(50)")]
		public string mortgageShortfall
		{
			get
			{
				return this._mortgageShortfall;
			}
			set
			{
				if ((this._mortgageShortfall != value))
				{
					this.OnmortgageShortfallChanging(value);
					this.SendPropertyChanging();
					this._mortgageShortfall = value;
					this.SendPropertyChanged("mortgageShortfall");
					this.OnmortgageShortfallChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_replacementIncomePercentage", DbType="NVarChar(50)")]
		public string replacementIncomePercentage
		{
			get
			{
				return this._replacementIncomePercentage;
			}
			set
			{
				if ((this._replacementIncomePercentage != value))
				{
					this.OnreplacementIncomePercentageChanging(value);
					this.SendPropertyChanging();
					this._replacementIncomePercentage = value;
					this.SendPropertyChanged("replacementIncomePercentage");
					this.OnreplacementIncomePercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_familyIncPrNeeded", DbType="Int")]
		public System.Nullable<int> familyIncPrNeeded
		{
			get
			{
				return this._familyIncPrNeeded;
			}
			set
			{
				if ((this._familyIncPrNeeded != value))
				{
					this.OnfamilyIncPrNeededChanging(value);
					this.SendPropertyChanging();
					this._familyIncPrNeeded = value;
					this.SendPropertyChanged("familyIncPrNeeded");
					this.OnfamilyIncPrNeededChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mortgageNeeded", DbType="Int")]
		public System.Nullable<int> mortgageNeeded
		{
			get
			{
				return this._mortgageNeeded;
			}
			set
			{
				if ((this._mortgageNeeded != value))
				{
					this.OnmortgageNeededChanging(value);
					this.SendPropertyChanging();
					this._mortgageNeeded = value;
					this.SendPropertyChanged("mortgageNeeded");
					this.OnmortgageNeededChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="familyNeed_familyNeedsAsset", Storage="_familyNeedsAssets", ThisKey="id", OtherKey="familyNeedId")]
		public EntitySet<familyNeedsAsset> familyNeedsAssets
		{
			get
			{
				return this._familyNeedsAssets;
			}
			set
			{
				this._familyNeedsAssets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_familyNeedsAssets(familyNeedsAsset entity)
		{
			this.SendPropertyChanging();
			entity.familyNeed = this;
		}
		
		private void detach_familyNeedsAssets(familyNeedsAsset entity)
		{
			this.SendPropertyChanging();
			entity.familyNeed = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.incomeExpense")]
	public partial class incomeExpense : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _emergencyFundsNeeded;
		
		private string _shortTermGoals;
		
		private string _extraDetails;
		
		private string _netMonthlyIncomeAfterCpf;
		
		private string _netMonthlyExpenses;
		
		private string _monthlySavings;
		
		private string _lifeInsuranceSA;
		
		private string _lifeInsuranceMV;
		
		private string _expiry1;
		
		private string _lifeInsurancePremium;
		
		private string _lifeInsuranceRemarks;
		
		private string _tpdcSA;
		
		private string _tpdcMV;
		
		private string _expiry2;
		
		private string _tpdcPremium;
		
		private string _tpdcRemarks;
		
		private string _criticalIllnessSA;
		
		private string _criticalIllnessMV;
		
		private string _expiry3;
		
		private string _criticalIllnessPremium;
		
		private string _criticalIllnessRemarks;
		
		private string _disabilityIncomeSA;
		
		private string _disabilityIncomeMV;
		
		private string _expiry4;
		
		private string _disabilityIncomePremium;
		
		private string _disabilityIncomeRemarks;
		
		private string _mortgageSA;
		
		private string _mortgageMV;
		
		private string _expiry5;
		
		private string _mortgagePremium;
		
		private string _mortgageRemarks;
		
		private string _others1A;
		
		private string _others1V;
		
		private string _expiry6;
		
		private string _others1Premium;
		
		private string _others1Remarks;
		
		private string _others2;
		
		private string _others2A;
		
		private string _others2V;
		
		private string _expiry7;
		
		private string _others2Premium;
		
		private string _others2Remarks;
		
		private string _caseId;
		
		private string _DeathTermInsuranceSA;
		
		private string _DeathWholeLifeInsuranceSA;
		
		private string _DeathTermInsuranceTerm;
		
		private string _DeathWholeLifeInsuranceTerm;
		
		private string _DeathTermInsurancePremium;
		
		private string _DeathWholeLifeInsurancePremium;
		
		private string _otherSourcesOfIncome;
		
		private System.Nullable<int> _incomeExpenseNeeded;
		
		private string _incomeExpenseNotNeededReason;
		
		private System.Nullable<int> _assecertainingAffordabilityEnable;
		
		private string _assecertainingAffordabilityReason;
		
		private EntitySet<incomeExpenseOther> _incomeExpenseOthers;
		
		private EntitySet<insuranceArrangementSaving> _insuranceArrangementSavings;
		
		private EntitySet<insuranceArrangementRetirement> _insuranceArrangementRetirements;
		
		private EntitySet<insuranceArrangementEducation> _insuranceArrangementEducations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnemergencyFundsNeededChanging(string value);
    partial void OnemergencyFundsNeededChanged();
    partial void OnshortTermGoalsChanging(string value);
    partial void OnshortTermGoalsChanged();
    partial void OnextraDetailsChanging(string value);
    partial void OnextraDetailsChanged();
    partial void OnnetMonthlyIncomeAfterCpfChanging(string value);
    partial void OnnetMonthlyIncomeAfterCpfChanged();
    partial void OnnetMonthlyExpensesChanging(string value);
    partial void OnnetMonthlyExpensesChanged();
    partial void OnmonthlySavingsChanging(string value);
    partial void OnmonthlySavingsChanged();
    partial void OnlifeInsuranceSAChanging(string value);
    partial void OnlifeInsuranceSAChanged();
    partial void OnlifeInsuranceMVChanging(string value);
    partial void OnlifeInsuranceMVChanged();
    partial void Onexpiry1Changing(string value);
    partial void Onexpiry1Changed();
    partial void OnlifeInsurancePremiumChanging(string value);
    partial void OnlifeInsurancePremiumChanged();
    partial void OnlifeInsuranceRemarksChanging(string value);
    partial void OnlifeInsuranceRemarksChanged();
    partial void OntpdcSAChanging(string value);
    partial void OntpdcSAChanged();
    partial void OntpdcMVChanging(string value);
    partial void OntpdcMVChanged();
    partial void Onexpiry2Changing(string value);
    partial void Onexpiry2Changed();
    partial void OntpdcPremiumChanging(string value);
    partial void OntpdcPremiumChanged();
    partial void OntpdcRemarksChanging(string value);
    partial void OntpdcRemarksChanged();
    partial void OncriticalIllnessSAChanging(string value);
    partial void OncriticalIllnessSAChanged();
    partial void OncriticalIllnessMVChanging(string value);
    partial void OncriticalIllnessMVChanged();
    partial void Onexpiry3Changing(string value);
    partial void Onexpiry3Changed();
    partial void OncriticalIllnessPremiumChanging(string value);
    partial void OncriticalIllnessPremiumChanged();
    partial void OncriticalIllnessRemarksChanging(string value);
    partial void OncriticalIllnessRemarksChanged();
    partial void OndisabilityIncomeSAChanging(string value);
    partial void OndisabilityIncomeSAChanged();
    partial void OndisabilityIncomeMVChanging(string value);
    partial void OndisabilityIncomeMVChanged();
    partial void Onexpiry4Changing(string value);
    partial void Onexpiry4Changed();
    partial void OndisabilityIncomePremiumChanging(string value);
    partial void OndisabilityIncomePremiumChanged();
    partial void OndisabilityIncomeRemarksChanging(string value);
    partial void OndisabilityIncomeRemarksChanged();
    partial void OnmortgageSAChanging(string value);
    partial void OnmortgageSAChanged();
    partial void OnmortgageMVChanging(string value);
    partial void OnmortgageMVChanged();
    partial void Onexpiry5Changing(string value);
    partial void Onexpiry5Changed();
    partial void OnmortgagePremiumChanging(string value);
    partial void OnmortgagePremiumChanged();
    partial void OnmortgageRemarksChanging(string value);
    partial void OnmortgageRemarksChanged();
    partial void Onothers1AChanging(string value);
    partial void Onothers1AChanged();
    partial void Onothers1VChanging(string value);
    partial void Onothers1VChanged();
    partial void Onexpiry6Changing(string value);
    partial void Onexpiry6Changed();
    partial void Onothers1PremiumChanging(string value);
    partial void Onothers1PremiumChanged();
    partial void Onothers1RemarksChanging(string value);
    partial void Onothers1RemarksChanged();
    partial void Onothers2Changing(string value);
    partial void Onothers2Changed();
    partial void Onothers2AChanging(string value);
    partial void Onothers2AChanged();
    partial void Onothers2VChanging(string value);
    partial void Onothers2VChanged();
    partial void Onexpiry7Changing(string value);
    partial void Onexpiry7Changed();
    partial void Onothers2PremiumChanging(string value);
    partial void Onothers2PremiumChanged();
    partial void Onothers2RemarksChanging(string value);
    partial void Onothers2RemarksChanged();
    partial void OncaseIdChanging(string value);
    partial void OncaseIdChanged();
    partial void OnDeathTermInsuranceSAChanging(string value);
    partial void OnDeathTermInsuranceSAChanged();
    partial void OnDeathWholeLifeInsuranceSAChanging(string value);
    partial void OnDeathWholeLifeInsuranceSAChanged();
    partial void OnDeathTermInsuranceTermChanging(string value);
    partial void OnDeathTermInsuranceTermChanged();
    partial void OnDeathWholeLifeInsuranceTermChanging(string value);
    partial void OnDeathWholeLifeInsuranceTermChanged();
    partial void OnDeathTermInsurancePremiumChanging(string value);
    partial void OnDeathTermInsurancePremiumChanged();
    partial void OnDeathWholeLifeInsurancePremiumChanging(string value);
    partial void OnDeathWholeLifeInsurancePremiumChanged();
    partial void OnotherSourcesOfIncomeChanging(string value);
    partial void OnotherSourcesOfIncomeChanged();
    partial void OnincomeExpenseNeededChanging(System.Nullable<int> value);
    partial void OnincomeExpenseNeededChanged();
    partial void OnincomeExpenseNotNeededReasonChanging(string value);
    partial void OnincomeExpenseNotNeededReasonChanged();
    partial void OnassecertainingAffordabilityEnableChanging(System.Nullable<int> value);
    partial void OnassecertainingAffordabilityEnableChanged();
    partial void OnassecertainingAffordabilityReasonChanging(string value);
    partial void OnassecertainingAffordabilityReasonChanged();
    #endregion
		
		public incomeExpense()
		{
			this._incomeExpenseOthers = new EntitySet<incomeExpenseOther>(new Action<incomeExpenseOther>(this.attach_incomeExpenseOthers), new Action<incomeExpenseOther>(this.detach_incomeExpenseOthers));
			this._insuranceArrangementSavings = new EntitySet<insuranceArrangementSaving>(new Action<insuranceArrangementSaving>(this.attach_insuranceArrangementSavings), new Action<insuranceArrangementSaving>(this.detach_insuranceArrangementSavings));
			this._insuranceArrangementRetirements = new EntitySet<insuranceArrangementRetirement>(new Action<insuranceArrangementRetirement>(this.attach_insuranceArrangementRetirements), new Action<insuranceArrangementRetirement>(this.detach_insuranceArrangementRetirements));
			this._insuranceArrangementEducations = new EntitySet<insuranceArrangementEducation>(new Action<insuranceArrangementEducation>(this.attach_insuranceArrangementEducations), new Action<insuranceArrangementEducation>(this.detach_insuranceArrangementEducations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emergencyFundsNeeded", DbType="NVarChar(50)")]
		public string emergencyFundsNeeded
		{
			get
			{
				return this._emergencyFundsNeeded;
			}
			set
			{
				if ((this._emergencyFundsNeeded != value))
				{
					this.OnemergencyFundsNeededChanging(value);
					this.SendPropertyChanging();
					this._emergencyFundsNeeded = value;
					this.SendPropertyChanged("emergencyFundsNeeded");
					this.OnemergencyFundsNeededChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shortTermGoals", DbType="NVarChar(50)")]
		public string shortTermGoals
		{
			get
			{
				return this._shortTermGoals;
			}
			set
			{
				if ((this._shortTermGoals != value))
				{
					this.OnshortTermGoalsChanging(value);
					this.SendPropertyChanging();
					this._shortTermGoals = value;
					this.SendPropertyChanged("shortTermGoals");
					this.OnshortTermGoalsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_extraDetails", DbType="NVarChar(500)")]
		public string extraDetails
		{
			get
			{
				return this._extraDetails;
			}
			set
			{
				if ((this._extraDetails != value))
				{
					this.OnextraDetailsChanging(value);
					this.SendPropertyChanging();
					this._extraDetails = value;
					this.SendPropertyChanged("extraDetails");
					this.OnextraDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_netMonthlyIncomeAfterCpf", DbType="NVarChar(50)")]
		public string netMonthlyIncomeAfterCpf
		{
			get
			{
				return this._netMonthlyIncomeAfterCpf;
			}
			set
			{
				if ((this._netMonthlyIncomeAfterCpf != value))
				{
					this.OnnetMonthlyIncomeAfterCpfChanging(value);
					this.SendPropertyChanging();
					this._netMonthlyIncomeAfterCpf = value;
					this.SendPropertyChanged("netMonthlyIncomeAfterCpf");
					this.OnnetMonthlyIncomeAfterCpfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_netMonthlyExpenses", DbType="NVarChar(50)")]
		public string netMonthlyExpenses
		{
			get
			{
				return this._netMonthlyExpenses;
			}
			set
			{
				if ((this._netMonthlyExpenses != value))
				{
					this.OnnetMonthlyExpensesChanging(value);
					this.SendPropertyChanging();
					this._netMonthlyExpenses = value;
					this.SendPropertyChanged("netMonthlyExpenses");
					this.OnnetMonthlyExpensesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_monthlySavings", DbType="NVarChar(50)")]
		public string monthlySavings
		{
			get
			{
				return this._monthlySavings;
			}
			set
			{
				if ((this._monthlySavings != value))
				{
					this.OnmonthlySavingsChanging(value);
					this.SendPropertyChanging();
					this._monthlySavings = value;
					this.SendPropertyChanged("monthlySavings");
					this.OnmonthlySavingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lifeInsuranceSA", DbType="NVarChar(50)")]
		public string lifeInsuranceSA
		{
			get
			{
				return this._lifeInsuranceSA;
			}
			set
			{
				if ((this._lifeInsuranceSA != value))
				{
					this.OnlifeInsuranceSAChanging(value);
					this.SendPropertyChanging();
					this._lifeInsuranceSA = value;
					this.SendPropertyChanged("lifeInsuranceSA");
					this.OnlifeInsuranceSAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lifeInsuranceMV", DbType="NVarChar(50)")]
		public string lifeInsuranceMV
		{
			get
			{
				return this._lifeInsuranceMV;
			}
			set
			{
				if ((this._lifeInsuranceMV != value))
				{
					this.OnlifeInsuranceMVChanging(value);
					this.SendPropertyChanging();
					this._lifeInsuranceMV = value;
					this.SendPropertyChanged("lifeInsuranceMV");
					this.OnlifeInsuranceMVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_expiry1", DbType="NVarChar(50)")]
		public string expiry1
		{
			get
			{
				return this._expiry1;
			}
			set
			{
				if ((this._expiry1 != value))
				{
					this.Onexpiry1Changing(value);
					this.SendPropertyChanging();
					this._expiry1 = value;
					this.SendPropertyChanged("expiry1");
					this.Onexpiry1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lifeInsurancePremium", DbType="NVarChar(50)")]
		public string lifeInsurancePremium
		{
			get
			{
				return this._lifeInsurancePremium;
			}
			set
			{
				if ((this._lifeInsurancePremium != value))
				{
					this.OnlifeInsurancePremiumChanging(value);
					this.SendPropertyChanging();
					this._lifeInsurancePremium = value;
					this.SendPropertyChanged("lifeInsurancePremium");
					this.OnlifeInsurancePremiumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lifeInsuranceRemarks", DbType="NVarChar(150)")]
		public string lifeInsuranceRemarks
		{
			get
			{
				return this._lifeInsuranceRemarks;
			}
			set
			{
				if ((this._lifeInsuranceRemarks != value))
				{
					this.OnlifeInsuranceRemarksChanging(value);
					this.SendPropertyChanging();
					this._lifeInsuranceRemarks = value;
					this.SendPropertyChanged("lifeInsuranceRemarks");
					this.OnlifeInsuranceRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tpdcSA", DbType="NVarChar(50)")]
		public string tpdcSA
		{
			get
			{
				return this._tpdcSA;
			}
			set
			{
				if ((this._tpdcSA != value))
				{
					this.OntpdcSAChanging(value);
					this.SendPropertyChanging();
					this._tpdcSA = value;
					this.SendPropertyChanged("tpdcSA");
					this.OntpdcSAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tpdcMV", DbType="NVarChar(50)")]
		public string tpdcMV
		{
			get
			{
				return this._tpdcMV;
			}
			set
			{
				if ((this._tpdcMV != value))
				{
					this.OntpdcMVChanging(value);
					this.SendPropertyChanging();
					this._tpdcMV = value;
					this.SendPropertyChanged("tpdcMV");
					this.OntpdcMVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_expiry2", DbType="NVarChar(50)")]
		public string expiry2
		{
			get
			{
				return this._expiry2;
			}
			set
			{
				if ((this._expiry2 != value))
				{
					this.Onexpiry2Changing(value);
					this.SendPropertyChanging();
					this._expiry2 = value;
					this.SendPropertyChanged("expiry2");
					this.Onexpiry2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tpdcPremium", DbType="NVarChar(50)")]
		public string tpdcPremium
		{
			get
			{
				return this._tpdcPremium;
			}
			set
			{
				if ((this._tpdcPremium != value))
				{
					this.OntpdcPremiumChanging(value);
					this.SendPropertyChanging();
					this._tpdcPremium = value;
					this.SendPropertyChanged("tpdcPremium");
					this.OntpdcPremiumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tpdcRemarks", DbType="NVarChar(150)")]
		public string tpdcRemarks
		{
			get
			{
				return this._tpdcRemarks;
			}
			set
			{
				if ((this._tpdcRemarks != value))
				{
					this.OntpdcRemarksChanging(value);
					this.SendPropertyChanging();
					this._tpdcRemarks = value;
					this.SendPropertyChanged("tpdcRemarks");
					this.OntpdcRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_criticalIllnessSA", DbType="NVarChar(50)")]
		public string criticalIllnessSA
		{
			get
			{
				return this._criticalIllnessSA;
			}
			set
			{
				if ((this._criticalIllnessSA != value))
				{
					this.OncriticalIllnessSAChanging(value);
					this.SendPropertyChanging();
					this._criticalIllnessSA = value;
					this.SendPropertyChanged("criticalIllnessSA");
					this.OncriticalIllnessSAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_criticalIllnessMV", DbType="NVarChar(50)")]
		public string criticalIllnessMV
		{
			get
			{
				return this._criticalIllnessMV;
			}
			set
			{
				if ((this._criticalIllnessMV != value))
				{
					this.OncriticalIllnessMVChanging(value);
					this.SendPropertyChanging();
					this._criticalIllnessMV = value;
					this.SendPropertyChanged("criticalIllnessMV");
					this.OncriticalIllnessMVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_expiry3", DbType="NVarChar(50)")]
		public string expiry3
		{
			get
			{
				return this._expiry3;
			}
			set
			{
				if ((this._expiry3 != value))
				{
					this.Onexpiry3Changing(value);
					this.SendPropertyChanging();
					this._expiry3 = value;
					this.SendPropertyChanged("expiry3");
					this.Onexpiry3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_criticalIllnessPremium", DbType="NVarChar(50)")]
		public string criticalIllnessPremium
		{
			get
			{
				return this._criticalIllnessPremium;
			}
			set
			{
				if ((this._criticalIllnessPremium != value))
				{
					this.OncriticalIllnessPremiumChanging(value);
					this.SendPropertyChanging();
					this._criticalIllnessPremium = value;
					this.SendPropertyChanged("criticalIllnessPremium");
					this.OncriticalIllnessPremiumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_criticalIllnessRemarks", DbType="NVarChar(150)")]
		public string criticalIllnessRemarks
		{
			get
			{
				return this._criticalIllnessRemarks;
			}
			set
			{
				if ((this._criticalIllnessRemarks != value))
				{
					this.OncriticalIllnessRemarksChanging(value);
					this.SendPropertyChanging();
					this._criticalIllnessRemarks = value;
					this.SendPropertyChanged("criticalIllnessRemarks");
					this.OncriticalIllnessRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_disabilityIncomeSA", DbType="NVarChar(50)")]
		public string disabilityIncomeSA
		{
			get
			{
				return this._disabilityIncomeSA;
			}
			set
			{
				if ((this._disabilityIncomeSA != value))
				{
					this.OndisabilityIncomeSAChanging(value);
					this.SendPropertyChanging();
					this._disabilityIncomeSA = value;
					this.SendPropertyChanged("disabilityIncomeSA");
					this.OndisabilityIncomeSAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_disabilityIncomeMV", DbType="NVarChar(50)")]
		public string disabilityIncomeMV
		{
			get
			{
				return this._disabilityIncomeMV;
			}
			set
			{
				if ((this._disabilityIncomeMV != value))
				{
					this.OndisabilityIncomeMVChanging(value);
					this.SendPropertyChanging();
					this._disabilityIncomeMV = value;
					this.SendPropertyChanged("disabilityIncomeMV");
					this.OndisabilityIncomeMVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_expiry4", DbType="NVarChar(50)")]
		public string expiry4
		{
			get
			{
				return this._expiry4;
			}
			set
			{
				if ((this._expiry4 != value))
				{
					this.Onexpiry4Changing(value);
					this.SendPropertyChanging();
					this._expiry4 = value;
					this.SendPropertyChanged("expiry4");
					this.Onexpiry4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_disabilityIncomePremium", DbType="NVarChar(50)")]
		public string disabilityIncomePremium
		{
			get
			{
				return this._disabilityIncomePremium;
			}
			set
			{
				if ((this._disabilityIncomePremium != value))
				{
					this.OndisabilityIncomePremiumChanging(value);
					this.SendPropertyChanging();
					this._disabilityIncomePremium = value;
					this.SendPropertyChanged("disabilityIncomePremium");
					this.OndisabilityIncomePremiumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_disabilityIncomeRemarks", DbType="NVarChar(150)")]
		public string disabilityIncomeRemarks
		{
			get
			{
				return this._disabilityIncomeRemarks;
			}
			set
			{
				if ((this._disabilityIncomeRemarks != value))
				{
					this.OndisabilityIncomeRemarksChanging(value);
					this.SendPropertyChanging();
					this._disabilityIncomeRemarks = value;
					this.SendPropertyChanged("disabilityIncomeRemarks");
					this.OndisabilityIncomeRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mortgageSA", DbType="NVarChar(50)")]
		public string mortgageSA
		{
			get
			{
				return this._mortgageSA;
			}
			set
			{
				if ((this._mortgageSA != value))
				{
					this.OnmortgageSAChanging(value);
					this.SendPropertyChanging();
					this._mortgageSA = value;
					this.SendPropertyChanged("mortgageSA");
					this.OnmortgageSAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mortgageMV", DbType="NVarChar(50)")]
		public string mortgageMV
		{
			get
			{
				return this._mortgageMV;
			}
			set
			{
				if ((this._mortgageMV != value))
				{
					this.OnmortgageMVChanging(value);
					this.SendPropertyChanging();
					this._mortgageMV = value;
					this.SendPropertyChanged("mortgageMV");
					this.OnmortgageMVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_expiry5", DbType="NVarChar(50)")]
		public string expiry5
		{
			get
			{
				return this._expiry5;
			}
			set
			{
				if ((this._expiry5 != value))
				{
					this.Onexpiry5Changing(value);
					this.SendPropertyChanging();
					this._expiry5 = value;
					this.SendPropertyChanged("expiry5");
					this.Onexpiry5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mortgagePremium", DbType="NVarChar(50)")]
		public string mortgagePremium
		{
			get
			{
				return this._mortgagePremium;
			}
			set
			{
				if ((this._mortgagePremium != value))
				{
					this.OnmortgagePremiumChanging(value);
					this.SendPropertyChanging();
					this._mortgagePremium = value;
					this.SendPropertyChanged("mortgagePremium");
					this.OnmortgagePremiumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mortgageRemarks", DbType="NVarChar(150)")]
		public string mortgageRemarks
		{
			get
			{
				return this._mortgageRemarks;
			}
			set
			{
				if ((this._mortgageRemarks != value))
				{
					this.OnmortgageRemarksChanging(value);
					this.SendPropertyChanging();
					this._mortgageRemarks = value;
					this.SendPropertyChanged("mortgageRemarks");
					this.OnmortgageRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_others1A", DbType="NVarChar(50)")]
		public string others1A
		{
			get
			{
				return this._others1A;
			}
			set
			{
				if ((this._others1A != value))
				{
					this.Onothers1AChanging(value);
					this.SendPropertyChanging();
					this._others1A = value;
					this.SendPropertyChanged("others1A");
					this.Onothers1AChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_others1V", DbType="NVarChar(50)")]
		public string others1V
		{
			get
			{
				return this._others1V;
			}
			set
			{
				if ((this._others1V != value))
				{
					this.Onothers1VChanging(value);
					this.SendPropertyChanging();
					this._others1V = value;
					this.SendPropertyChanged("others1V");
					this.Onothers1VChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_expiry6", DbType="NVarChar(50)")]
		public string expiry6
		{
			get
			{
				return this._expiry6;
			}
			set
			{
				if ((this._expiry6 != value))
				{
					this.Onexpiry6Changing(value);
					this.SendPropertyChanging();
					this._expiry6 = value;
					this.SendPropertyChanged("expiry6");
					this.Onexpiry6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_others1Premium", DbType="NVarChar(50)")]
		public string others1Premium
		{
			get
			{
				return this._others1Premium;
			}
			set
			{
				if ((this._others1Premium != value))
				{
					this.Onothers1PremiumChanging(value);
					this.SendPropertyChanging();
					this._others1Premium = value;
					this.SendPropertyChanged("others1Premium");
					this.Onothers1PremiumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_others1Remarks", DbType="NVarChar(150)")]
		public string others1Remarks
		{
			get
			{
				return this._others1Remarks;
			}
			set
			{
				if ((this._others1Remarks != value))
				{
					this.Onothers1RemarksChanging(value);
					this.SendPropertyChanging();
					this._others1Remarks = value;
					this.SendPropertyChanged("others1Remarks");
					this.Onothers1RemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_others2", DbType="NVarChar(50)")]
		public string others2
		{
			get
			{
				return this._others2;
			}
			set
			{
				if ((this._others2 != value))
				{
					this.Onothers2Changing(value);
					this.SendPropertyChanging();
					this._others2 = value;
					this.SendPropertyChanged("others2");
					this.Onothers2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_others2A", DbType="NVarChar(50)")]
		public string others2A
		{
			get
			{
				return this._others2A;
			}
			set
			{
				if ((this._others2A != value))
				{
					this.Onothers2AChanging(value);
					this.SendPropertyChanging();
					this._others2A = value;
					this.SendPropertyChanged("others2A");
					this.Onothers2AChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_others2V", DbType="NVarChar(50)")]
		public string others2V
		{
			get
			{
				return this._others2V;
			}
			set
			{
				if ((this._others2V != value))
				{
					this.Onothers2VChanging(value);
					this.SendPropertyChanging();
					this._others2V = value;
					this.SendPropertyChanged("others2V");
					this.Onothers2VChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_expiry7", DbType="NVarChar(50)")]
		public string expiry7
		{
			get
			{
				return this._expiry7;
			}
			set
			{
				if ((this._expiry7 != value))
				{
					this.Onexpiry7Changing(value);
					this.SendPropertyChanging();
					this._expiry7 = value;
					this.SendPropertyChanged("expiry7");
					this.Onexpiry7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_others2Premium", DbType="NVarChar(50)")]
		public string others2Premium
		{
			get
			{
				return this._others2Premium;
			}
			set
			{
				if ((this._others2Premium != value))
				{
					this.Onothers2PremiumChanging(value);
					this.SendPropertyChanging();
					this._others2Premium = value;
					this.SendPropertyChanged("others2Premium");
					this.Onothers2PremiumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_others2Remarks", DbType="NVarChar(150)")]
		public string others2Remarks
		{
			get
			{
				return this._others2Remarks;
			}
			set
			{
				if ((this._others2Remarks != value))
				{
					this.Onothers2RemarksChanging(value);
					this.SendPropertyChanging();
					this._others2Remarks = value;
					this.SendPropertyChanged("others2Remarks");
					this.Onothers2RemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_caseId", DbType="VarChar(50)")]
		public string caseId
		{
			get
			{
				return this._caseId;
			}
			set
			{
				if ((this._caseId != value))
				{
					this.OncaseIdChanging(value);
					this.SendPropertyChanging();
					this._caseId = value;
					this.SendPropertyChanged("caseId");
					this.OncaseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeathTermInsuranceSA", DbType="VarChar(50)")]
		public string DeathTermInsuranceSA
		{
			get
			{
				return this._DeathTermInsuranceSA;
			}
			set
			{
				if ((this._DeathTermInsuranceSA != value))
				{
					this.OnDeathTermInsuranceSAChanging(value);
					this.SendPropertyChanging();
					this._DeathTermInsuranceSA = value;
					this.SendPropertyChanged("DeathTermInsuranceSA");
					this.OnDeathTermInsuranceSAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeathWholeLifeInsuranceSA", DbType="VarChar(50)")]
		public string DeathWholeLifeInsuranceSA
		{
			get
			{
				return this._DeathWholeLifeInsuranceSA;
			}
			set
			{
				if ((this._DeathWholeLifeInsuranceSA != value))
				{
					this.OnDeathWholeLifeInsuranceSAChanging(value);
					this.SendPropertyChanging();
					this._DeathWholeLifeInsuranceSA = value;
					this.SendPropertyChanged("DeathWholeLifeInsuranceSA");
					this.OnDeathWholeLifeInsuranceSAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeathTermInsuranceTerm", DbType="VarChar(50)")]
		public string DeathTermInsuranceTerm
		{
			get
			{
				return this._DeathTermInsuranceTerm;
			}
			set
			{
				if ((this._DeathTermInsuranceTerm != value))
				{
					this.OnDeathTermInsuranceTermChanging(value);
					this.SendPropertyChanging();
					this._DeathTermInsuranceTerm = value;
					this.SendPropertyChanged("DeathTermInsuranceTerm");
					this.OnDeathTermInsuranceTermChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeathWholeLifeInsuranceTerm", DbType="VarChar(50)")]
		public string DeathWholeLifeInsuranceTerm
		{
			get
			{
				return this._DeathWholeLifeInsuranceTerm;
			}
			set
			{
				if ((this._DeathWholeLifeInsuranceTerm != value))
				{
					this.OnDeathWholeLifeInsuranceTermChanging(value);
					this.SendPropertyChanging();
					this._DeathWholeLifeInsuranceTerm = value;
					this.SendPropertyChanged("DeathWholeLifeInsuranceTerm");
					this.OnDeathWholeLifeInsuranceTermChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeathTermInsurancePremium", DbType="VarChar(50)")]
		public string DeathTermInsurancePremium
		{
			get
			{
				return this._DeathTermInsurancePremium;
			}
			set
			{
				if ((this._DeathTermInsurancePremium != value))
				{
					this.OnDeathTermInsurancePremiumChanging(value);
					this.SendPropertyChanging();
					this._DeathTermInsurancePremium = value;
					this.SendPropertyChanged("DeathTermInsurancePremium");
					this.OnDeathTermInsurancePremiumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeathWholeLifeInsurancePremium", DbType="VarChar(50)")]
		public string DeathWholeLifeInsurancePremium
		{
			get
			{
				return this._DeathWholeLifeInsurancePremium;
			}
			set
			{
				if ((this._DeathWholeLifeInsurancePremium != value))
				{
					this.OnDeathWholeLifeInsurancePremiumChanging(value);
					this.SendPropertyChanging();
					this._DeathWholeLifeInsurancePremium = value;
					this.SendPropertyChanged("DeathWholeLifeInsurancePremium");
					this.OnDeathWholeLifeInsurancePremiumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_otherSourcesOfIncome", DbType="NVarChar(50)")]
		public string otherSourcesOfIncome
		{
			get
			{
				return this._otherSourcesOfIncome;
			}
			set
			{
				if ((this._otherSourcesOfIncome != value))
				{
					this.OnotherSourcesOfIncomeChanging(value);
					this.SendPropertyChanging();
					this._otherSourcesOfIncome = value;
					this.SendPropertyChanged("otherSourcesOfIncome");
					this.OnotherSourcesOfIncomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_incomeExpenseNeeded", DbType="Int")]
		public System.Nullable<int> incomeExpenseNeeded
		{
			get
			{
				return this._incomeExpenseNeeded;
			}
			set
			{
				if ((this._incomeExpenseNeeded != value))
				{
					this.OnincomeExpenseNeededChanging(value);
					this.SendPropertyChanging();
					this._incomeExpenseNeeded = value;
					this.SendPropertyChanged("incomeExpenseNeeded");
					this.OnincomeExpenseNeededChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_incomeExpenseNotNeededReason", DbType="NVarChar(200)")]
		public string incomeExpenseNotNeededReason
		{
			get
			{
				return this._incomeExpenseNotNeededReason;
			}
			set
			{
				if ((this._incomeExpenseNotNeededReason != value))
				{
					this.OnincomeExpenseNotNeededReasonChanging(value);
					this.SendPropertyChanging();
					this._incomeExpenseNotNeededReason = value;
					this.SendPropertyChanged("incomeExpenseNotNeededReason");
					this.OnincomeExpenseNotNeededReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_assecertainingAffordabilityEnable", DbType="Int")]
		public System.Nullable<int> assecertainingAffordabilityEnable
		{
			get
			{
				return this._assecertainingAffordabilityEnable;
			}
			set
			{
				if ((this._assecertainingAffordabilityEnable != value))
				{
					this.OnassecertainingAffordabilityEnableChanging(value);
					this.SendPropertyChanging();
					this._assecertainingAffordabilityEnable = value;
					this.SendPropertyChanged("assecertainingAffordabilityEnable");
					this.OnassecertainingAffordabilityEnableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_assecertainingAffordabilityReason", DbType="NVarChar(300)")]
		public string assecertainingAffordabilityReason
		{
			get
			{
				return this._assecertainingAffordabilityReason;
			}
			set
			{
				if ((this._assecertainingAffordabilityReason != value))
				{
					this.OnassecertainingAffordabilityReasonChanging(value);
					this.SendPropertyChanging();
					this._assecertainingAffordabilityReason = value;
					this.SendPropertyChanged("assecertainingAffordabilityReason");
					this.OnassecertainingAffordabilityReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="incomeExpense_incomeExpenseOther", Storage="_incomeExpenseOthers", ThisKey="id", OtherKey="incomeExpenseId")]
		public EntitySet<incomeExpenseOther> incomeExpenseOthers
		{
			get
			{
				return this._incomeExpenseOthers;
			}
			set
			{
				this._incomeExpenseOthers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="incomeExpense_insuranceArrangementSaving", Storage="_insuranceArrangementSavings", ThisKey="id", OtherKey="incomeExpenseId")]
		public EntitySet<insuranceArrangementSaving> insuranceArrangementSavings
		{
			get
			{
				return this._insuranceArrangementSavings;
			}
			set
			{
				this._insuranceArrangementSavings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="incomeExpense_insuranceArrangementRetirement", Storage="_insuranceArrangementRetirements", ThisKey="id", OtherKey="incomeExpenseId")]
		public EntitySet<insuranceArrangementRetirement> insuranceArrangementRetirements
		{
			get
			{
				return this._insuranceArrangementRetirements;
			}
			set
			{
				this._insuranceArrangementRetirements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="incomeExpense_insuranceArrangementEducation", Storage="_insuranceArrangementEducations", ThisKey="id", OtherKey="incomeExpenseId")]
		public EntitySet<insuranceArrangementEducation> insuranceArrangementEducations
		{
			get
			{
				return this._insuranceArrangementEducations;
			}
			set
			{
				this._insuranceArrangementEducations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_incomeExpenseOthers(incomeExpenseOther entity)
		{
			this.SendPropertyChanging();
			entity.incomeExpense = this;
		}
		
		private void detach_incomeExpenseOthers(incomeExpenseOther entity)
		{
			this.SendPropertyChanging();
			entity.incomeExpense = null;
		}
		
		private void attach_insuranceArrangementSavings(insuranceArrangementSaving entity)
		{
			this.SendPropertyChanging();
			entity.incomeExpense = this;
		}
		
		private void detach_insuranceArrangementSavings(insuranceArrangementSaving entity)
		{
			this.SendPropertyChanging();
			entity.incomeExpense = null;
		}
		
		private void attach_insuranceArrangementRetirements(insuranceArrangementRetirement entity)
		{
			this.SendPropertyChanging();
			entity.incomeExpense = this;
		}
		
		private void detach_insuranceArrangementRetirements(insuranceArrangementRetirement entity)
		{
			this.SendPropertyChanging();
			entity.incomeExpense = null;
		}
		
		private void attach_insuranceArrangementEducations(insuranceArrangementEducation entity)
		{
			this.SendPropertyChanging();
			entity.incomeExpense = this;
		}
		
		private void detach_insuranceArrangementEducations(insuranceArrangementEducation entity)
		{
			this.SendPropertyChanging();
			entity.incomeExpense = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CkaAssessment")]
	public partial class CkaAssessment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _agreeCKA;
		
		private string _disagreeCKA;
		
		private string _financeRelatedKnowledgeOption1;
		
		private string _financeRelatedKnowledgeOption2;
		
		private string _investmentExperienceOption1;
		
		private string _investmentExperienceOption2;
		
		private string _workingExperienceOption1;
		
		private string _workingExperienceOption2;
		
		private string _educationalExperienceOption1;
		
		private string _educationalExperienceOption2;
		
		private string _csaOutcomeOption1;
		
		private string _csaOutcomeOption2;
		
		private string _caseId;
		
		private string _investmentExperienceList;
		
		private string _workingExperienceList;
		
		private string _educationalExperienceList;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnagreeCKAChanging(string value);
    partial void OnagreeCKAChanged();
    partial void OndisagreeCKAChanging(string value);
    partial void OndisagreeCKAChanged();
    partial void OnfinanceRelatedKnowledgeOption1Changing(string value);
    partial void OnfinanceRelatedKnowledgeOption1Changed();
    partial void OnfinanceRelatedKnowledgeOption2Changing(string value);
    partial void OnfinanceRelatedKnowledgeOption2Changed();
    partial void OninvestmentExperienceOption1Changing(string value);
    partial void OninvestmentExperienceOption1Changed();
    partial void OninvestmentExperienceOption2Changing(string value);
    partial void OninvestmentExperienceOption2Changed();
    partial void OnworkingExperienceOption1Changing(string value);
    partial void OnworkingExperienceOption1Changed();
    partial void OnworkingExperienceOption2Changing(string value);
    partial void OnworkingExperienceOption2Changed();
    partial void OneducationalExperienceOption1Changing(string value);
    partial void OneducationalExperienceOption1Changed();
    partial void OneducationalExperienceOption2Changing(string value);
    partial void OneducationalExperienceOption2Changed();
    partial void OncsaOutcomeOption1Changing(string value);
    partial void OncsaOutcomeOption1Changed();
    partial void OncsaOutcomeOption2Changing(string value);
    partial void OncsaOutcomeOption2Changed();
    partial void OncaseIdChanging(string value);
    partial void OncaseIdChanged();
    partial void OninvestmentExperienceListChanging(string value);
    partial void OninvestmentExperienceListChanged();
    partial void OnworkingExperienceListChanging(string value);
    partial void OnworkingExperienceListChanged();
    partial void OneducationalExperienceListChanging(string value);
    partial void OneducationalExperienceListChanged();
    #endregion
		
		public CkaAssessment()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_agreeCKA", DbType="NVarChar(10)")]
		public string agreeCKA
		{
			get
			{
				return this._agreeCKA;
			}
			set
			{
				if ((this._agreeCKA != value))
				{
					this.OnagreeCKAChanging(value);
					this.SendPropertyChanging();
					this._agreeCKA = value;
					this.SendPropertyChanged("agreeCKA");
					this.OnagreeCKAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_disagreeCKA", DbType="NVarChar(10)")]
		public string disagreeCKA
		{
			get
			{
				return this._disagreeCKA;
			}
			set
			{
				if ((this._disagreeCKA != value))
				{
					this.OndisagreeCKAChanging(value);
					this.SendPropertyChanging();
					this._disagreeCKA = value;
					this.SendPropertyChanged("disagreeCKA");
					this.OndisagreeCKAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_financeRelatedKnowledgeOption1", DbType="NVarChar(10)")]
		public string financeRelatedKnowledgeOption1
		{
			get
			{
				return this._financeRelatedKnowledgeOption1;
			}
			set
			{
				if ((this._financeRelatedKnowledgeOption1 != value))
				{
					this.OnfinanceRelatedKnowledgeOption1Changing(value);
					this.SendPropertyChanging();
					this._financeRelatedKnowledgeOption1 = value;
					this.SendPropertyChanged("financeRelatedKnowledgeOption1");
					this.OnfinanceRelatedKnowledgeOption1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_financeRelatedKnowledgeOption2", DbType="NVarChar(10)")]
		public string financeRelatedKnowledgeOption2
		{
			get
			{
				return this._financeRelatedKnowledgeOption2;
			}
			set
			{
				if ((this._financeRelatedKnowledgeOption2 != value))
				{
					this.OnfinanceRelatedKnowledgeOption2Changing(value);
					this.SendPropertyChanging();
					this._financeRelatedKnowledgeOption2 = value;
					this.SendPropertyChanged("financeRelatedKnowledgeOption2");
					this.OnfinanceRelatedKnowledgeOption2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_investmentExperienceOption1", DbType="NVarChar(10)")]
		public string investmentExperienceOption1
		{
			get
			{
				return this._investmentExperienceOption1;
			}
			set
			{
				if ((this._investmentExperienceOption1 != value))
				{
					this.OninvestmentExperienceOption1Changing(value);
					this.SendPropertyChanging();
					this._investmentExperienceOption1 = value;
					this.SendPropertyChanged("investmentExperienceOption1");
					this.OninvestmentExperienceOption1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_investmentExperienceOption2", DbType="NVarChar(10)")]
		public string investmentExperienceOption2
		{
			get
			{
				return this._investmentExperienceOption2;
			}
			set
			{
				if ((this._investmentExperienceOption2 != value))
				{
					this.OninvestmentExperienceOption2Changing(value);
					this.SendPropertyChanging();
					this._investmentExperienceOption2 = value;
					this.SendPropertyChanged("investmentExperienceOption2");
					this.OninvestmentExperienceOption2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_workingExperienceOption1", DbType="NVarChar(10)")]
		public string workingExperienceOption1
		{
			get
			{
				return this._workingExperienceOption1;
			}
			set
			{
				if ((this._workingExperienceOption1 != value))
				{
					this.OnworkingExperienceOption1Changing(value);
					this.SendPropertyChanging();
					this._workingExperienceOption1 = value;
					this.SendPropertyChanged("workingExperienceOption1");
					this.OnworkingExperienceOption1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_workingExperienceOption2", DbType="NVarChar(10)")]
		public string workingExperienceOption2
		{
			get
			{
				return this._workingExperienceOption2;
			}
			set
			{
				if ((this._workingExperienceOption2 != value))
				{
					this.OnworkingExperienceOption2Changing(value);
					this.SendPropertyChanging();
					this._workingExperienceOption2 = value;
					this.SendPropertyChanged("workingExperienceOption2");
					this.OnworkingExperienceOption2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_educationalExperienceOption1", DbType="NVarChar(10)")]
		public string educationalExperienceOption1
		{
			get
			{
				return this._educationalExperienceOption1;
			}
			set
			{
				if ((this._educationalExperienceOption1 != value))
				{
					this.OneducationalExperienceOption1Changing(value);
					this.SendPropertyChanging();
					this._educationalExperienceOption1 = value;
					this.SendPropertyChanged("educationalExperienceOption1");
					this.OneducationalExperienceOption1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_educationalExperienceOption2", DbType="NVarChar(10)")]
		public string educationalExperienceOption2
		{
			get
			{
				return this._educationalExperienceOption2;
			}
			set
			{
				if ((this._educationalExperienceOption2 != value))
				{
					this.OneducationalExperienceOption2Changing(value);
					this.SendPropertyChanging();
					this._educationalExperienceOption2 = value;
					this.SendPropertyChanged("educationalExperienceOption2");
					this.OneducationalExperienceOption2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_csaOutcomeOption1", DbType="NVarChar(10)")]
		public string csaOutcomeOption1
		{
			get
			{
				return this._csaOutcomeOption1;
			}
			set
			{
				if ((this._csaOutcomeOption1 != value))
				{
					this.OncsaOutcomeOption1Changing(value);
					this.SendPropertyChanging();
					this._csaOutcomeOption1 = value;
					this.SendPropertyChanged("csaOutcomeOption1");
					this.OncsaOutcomeOption1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_csaOutcomeOption2", DbType="NVarChar(10)")]
		public string csaOutcomeOption2
		{
			get
			{
				return this._csaOutcomeOption2;
			}
			set
			{
				if ((this._csaOutcomeOption2 != value))
				{
					this.OncsaOutcomeOption2Changing(value);
					this.SendPropertyChanging();
					this._csaOutcomeOption2 = value;
					this.SendPropertyChanged("csaOutcomeOption2");
					this.OncsaOutcomeOption2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_caseId", DbType="VarChar(50)")]
		public string caseId
		{
			get
			{
				return this._caseId;
			}
			set
			{
				if ((this._caseId != value))
				{
					this.OncaseIdChanging(value);
					this.SendPropertyChanging();
					this._caseId = value;
					this.SendPropertyChanged("caseId");
					this.OncaseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_investmentExperienceList", DbType="NVarChar(1000)")]
		public string investmentExperienceList
		{
			get
			{
				return this._investmentExperienceList;
			}
			set
			{
				if ((this._investmentExperienceList != value))
				{
					this.OninvestmentExperienceListChanging(value);
					this.SendPropertyChanging();
					this._investmentExperienceList = value;
					this.SendPropertyChanged("investmentExperienceList");
					this.OninvestmentExperienceListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_workingExperienceList", DbType="NVarChar(1000)")]
		public string workingExperienceList
		{
			get
			{
				return this._workingExperienceList;
			}
			set
			{
				if ((this._workingExperienceList != value))
				{
					this.OnworkingExperienceListChanging(value);
					this.SendPropertyChanging();
					this._workingExperienceList = value;
					this.SendPropertyChanged("workingExperienceList");
					this.OnworkingExperienceListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_educationalExperienceList", DbType="NVarChar(1000)")]
		public string educationalExperienceList
		{
			get
			{
				return this._educationalExperienceList;
			}
			set
			{
				if ((this._educationalExperienceList != value))
				{
					this.OneducationalExperienceListChanging(value);
					this.SendPropertyChanging();
					this._educationalExperienceList = value;
					this.SendPropertyChanged("educationalExperienceList");
					this.OneducationalExperienceListChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.myNeeds")]
	public partial class myNeed : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _caseId;
		
		private string _lumpSumRequiredForTreatment;
		
		private string _criticalIllnessInsurance;
		
		private string _existingAssetsMyneeds;
		
		private string _totalShortfallSurplusMyNeeds;
		
		private string _lumpSumMyNeeds;
		
		private string _existingSumMyNeeds;
		
		private string _shortfallSumMyNeeds;
		
		private string _monthlyIncomeDisabilityIncome;
		
		private string _percentOfIncomeCoverageRequired;
		
		private string _monthlyCoverageRequired;
		
		private string _disabilityInsuranceMyNeeds;
		
		private string _existingAssetsMyneedsDisability;
		
		private string _shortfallSurplusMyNeeds;
		
		private string _monthlyAmountMyNeeds;
		
		private string _existingMyNeeds;
		
		private string _shortfallMyNeeds;
		
		private string _typeOfHospitalCoverage;
		
		private System.Nullable<bool> _anyExistingPlans;
		
		private System.Nullable<int> _typeOfRoomCoverage;
		
		private System.Nullable<bool> _coverageOldageYesNo;
		
		private System.Nullable<bool> _epOldageYesNo;
		
		private System.Nullable<bool> _coverageIncomeYesNo;
		
		private System.Nullable<bool> _epIncomeYesNo;
		
		private System.Nullable<bool> _coverageOutpatientYesNo;
		
		private System.Nullable<bool> _epOutpatientYesNo;
		
		private System.Nullable<bool> _coverageDentalYesNo;
		
		private System.Nullable<bool> _epDentalYesNo;
		
		private System.Nullable<bool> _coveragePersonalYesNo;
		
		private System.Nullable<bool> _epPersonalYesNo;
		
		private string _detailsOfExistingPlans;
		
		private string _replacementIncomePercentage;
		
		private string _replacementIncomeRequired;
		
		private string _yearsOfSupportRequired;
		
		private string _inflatedAdjustedReturns;
		
		private string _replacementAmountRequired;
		
		private string _totalRequired;
		
		private string _txtExistingAssetsFamilyneeds;
		
		private string _disabilityProtectionReplacementIncomeRequiredPercentage;
		
		private string _disabilityProtectionReplacementIncomeRequired;
		
		private string _disabilityYearsOfSupport;
		
		private string _inflationAdjustedReturns;
		
		private string _disabilityReplacementAmountRequired;
		
		private string _disabilityInsurance;
		
		private string _existingPlansDetail;
		
		private System.Nullable<int> _criticalIllnessPrNeeded;
		
		private System.Nullable<int> _disabilityPrNeeded;
		
		private System.Nullable<int> _hospitalmedCoverNeeded;
		
		private System.Nullable<int> _accidentalhealthCoverNeeded;
		
		private System.Nullable<bool> _coverageOutpatientMedExp;
		
		private System.Nullable<bool> _epOutpatientMedExp;
		
		private System.Nullable<bool> _coverageLossOfIncome;
		
		private System.Nullable<bool> _epLossOfIncome;
		
		private System.Nullable<bool> _coverageOldageDisabilities;
		
		private System.Nullable<bool> _epOldageDisabilities;
		
		private System.Nullable<bool> _coverageDentalExp;
		
		private System.Nullable<bool> _epDentalExp;
		
		private EntitySet<myNeedsCriticalAsset> _myNeedsCriticalAssets;
		
		private EntitySet<myNeedsDisabilityAsset> _myNeedsDisabilityAssets;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncaseIdChanging(string value);
    partial void OncaseIdChanged();
    partial void OnlumpSumRequiredForTreatmentChanging(string value);
    partial void OnlumpSumRequiredForTreatmentChanged();
    partial void OncriticalIllnessInsuranceChanging(string value);
    partial void OncriticalIllnessInsuranceChanged();
    partial void OnexistingAssetsMyneedsChanging(string value);
    partial void OnexistingAssetsMyneedsChanged();
    partial void OntotalShortfallSurplusMyNeedsChanging(string value);
    partial void OntotalShortfallSurplusMyNeedsChanged();
    partial void OnlumpSumMyNeedsChanging(string value);
    partial void OnlumpSumMyNeedsChanged();
    partial void OnexistingSumMyNeedsChanging(string value);
    partial void OnexistingSumMyNeedsChanged();
    partial void OnshortfallSumMyNeedsChanging(string value);
    partial void OnshortfallSumMyNeedsChanged();
    partial void OnmonthlyIncomeDisabilityIncomeChanging(string value);
    partial void OnmonthlyIncomeDisabilityIncomeChanged();
    partial void OnpercentOfIncomeCoverageRequiredChanging(string value);
    partial void OnpercentOfIncomeCoverageRequiredChanged();
    partial void OnmonthlyCoverageRequiredChanging(string value);
    partial void OnmonthlyCoverageRequiredChanged();
    partial void OndisabilityInsuranceMyNeedsChanging(string value);
    partial void OndisabilityInsuranceMyNeedsChanged();
    partial void OnexistingAssetsMyneedsDisabilityChanging(string value);
    partial void OnexistingAssetsMyneedsDisabilityChanged();
    partial void OnshortfallSurplusMyNeedsChanging(string value);
    partial void OnshortfallSurplusMyNeedsChanged();
    partial void OnmonthlyAmountMyNeedsChanging(string value);
    partial void OnmonthlyAmountMyNeedsChanged();
    partial void OnexistingMyNeedsChanging(string value);
    partial void OnexistingMyNeedsChanged();
    partial void OnshortfallMyNeedsChanging(string value);
    partial void OnshortfallMyNeedsChanged();
    partial void OntypeOfHospitalCoverageChanging(string value);
    partial void OntypeOfHospitalCoverageChanged();
    partial void OnanyExistingPlansChanging(System.Nullable<bool> value);
    partial void OnanyExistingPlansChanged();
    partial void OntypeOfRoomCoverageChanging(System.Nullable<int> value);
    partial void OntypeOfRoomCoverageChanged();
    partial void OncoverageOldageYesNoChanging(System.Nullable<bool> value);
    partial void OncoverageOldageYesNoChanged();
    partial void OnepOldageYesNoChanging(System.Nullable<bool> value);
    partial void OnepOldageYesNoChanged();
    partial void OncoverageIncomeYesNoChanging(System.Nullable<bool> value);
    partial void OncoverageIncomeYesNoChanged();
    partial void OnepIncomeYesNoChanging(System.Nullable<bool> value);
    partial void OnepIncomeYesNoChanged();
    partial void OncoverageOutpatientYesNoChanging(System.Nullable<bool> value);
    partial void OncoverageOutpatientYesNoChanged();
    partial void OnepOutpatientYesNoChanging(System.Nullable<bool> value);
    partial void OnepOutpatientYesNoChanged();
    partial void OncoverageDentalYesNoChanging(System.Nullable<bool> value);
    partial void OncoverageDentalYesNoChanged();
    partial void OnepDentalYesNoChanging(System.Nullable<bool> value);
    partial void OnepDentalYesNoChanged();
    partial void OncoveragePersonalYesNoChanging(System.Nullable<bool> value);
    partial void OncoveragePersonalYesNoChanged();
    partial void OnepPersonalYesNoChanging(System.Nullable<bool> value);
    partial void OnepPersonalYesNoChanged();
    partial void OndetailsOfExistingPlansChanging(string value);
    partial void OndetailsOfExistingPlansChanged();
    partial void OnreplacementIncomePercentageChanging(string value);
    partial void OnreplacementIncomePercentageChanged();
    partial void OnreplacementIncomeRequiredChanging(string value);
    partial void OnreplacementIncomeRequiredChanged();
    partial void OnyearsOfSupportRequiredChanging(string value);
    partial void OnyearsOfSupportRequiredChanged();
    partial void OninflatedAdjustedReturnsChanging(string value);
    partial void OninflatedAdjustedReturnsChanged();
    partial void OnreplacementAmountRequiredChanging(string value);
    partial void OnreplacementAmountRequiredChanged();
    partial void OntotalRequiredChanging(string value);
    partial void OntotalRequiredChanged();
    partial void OntxtExistingAssetsFamilyneedsChanging(string value);
    partial void OntxtExistingAssetsFamilyneedsChanged();
    partial void OndisabilityProtectionReplacementIncomeRequiredPercentageChanging(string value);
    partial void OndisabilityProtectionReplacementIncomeRequiredPercentageChanged();
    partial void OndisabilityProtectionReplacementIncomeRequiredChanging(string value);
    partial void OndisabilityProtectionReplacementIncomeRequiredChanged();
    partial void OndisabilityYearsOfSupportChanging(string value);
    partial void OndisabilityYearsOfSupportChanged();
    partial void OninflationAdjustedReturnsChanging(string value);
    partial void OninflationAdjustedReturnsChanged();
    partial void OndisabilityReplacementAmountRequiredChanging(string value);
    partial void OndisabilityReplacementAmountRequiredChanged();
    partial void OndisabilityInsuranceChanging(string value);
    partial void OndisabilityInsuranceChanged();
    partial void OnexistingPlansDetailChanging(string value);
    partial void OnexistingPlansDetailChanged();
    partial void OncriticalIllnessPrNeededChanging(System.Nullable<int> value);
    partial void OncriticalIllnessPrNeededChanged();
    partial void OndisabilityPrNeededChanging(System.Nullable<int> value);
    partial void OndisabilityPrNeededChanged();
    partial void OnhospitalmedCoverNeededChanging(System.Nullable<int> value);
    partial void OnhospitalmedCoverNeededChanged();
    partial void OnaccidentalhealthCoverNeededChanging(System.Nullable<int> value);
    partial void OnaccidentalhealthCoverNeededChanged();
    partial void OncoverageOutpatientMedExpChanging(System.Nullable<bool> value);
    partial void OncoverageOutpatientMedExpChanged();
    partial void OnepOutpatientMedExpChanging(System.Nullable<bool> value);
    partial void OnepOutpatientMedExpChanged();
    partial void OncoverageLossOfIncomeChanging(System.Nullable<bool> value);
    partial void OncoverageLossOfIncomeChanged();
    partial void OnepLossOfIncomeChanging(System.Nullable<bool> value);
    partial void OnepLossOfIncomeChanged();
    partial void OncoverageOldageDisabilitiesChanging(System.Nullable<bool> value);
    partial void OncoverageOldageDisabilitiesChanged();
    partial void OnepOldageDisabilitiesChanging(System.Nullable<bool> value);
    partial void OnepOldageDisabilitiesChanged();
    partial void OncoverageDentalExpChanging(System.Nullable<bool> value);
    partial void OncoverageDentalExpChanged();
    partial void OnepDentalExpChanging(System.Nullable<bool> value);
    partial void OnepDentalExpChanged();
    #endregion
		
		public myNeed()
		{
			this._myNeedsCriticalAssets = new EntitySet<myNeedsCriticalAsset>(new Action<myNeedsCriticalAsset>(this.attach_myNeedsCriticalAssets), new Action<myNeedsCriticalAsset>(this.detach_myNeedsCriticalAssets));
			this._myNeedsDisabilityAssets = new EntitySet<myNeedsDisabilityAsset>(new Action<myNeedsDisabilityAsset>(this.attach_myNeedsDisabilityAssets), new Action<myNeedsDisabilityAsset>(this.detach_myNeedsDisabilityAssets));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_caseId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string caseId
		{
			get
			{
				return this._caseId;
			}
			set
			{
				if ((this._caseId != value))
				{
					this.OncaseIdChanging(value);
					this.SendPropertyChanging();
					this._caseId = value;
					this.SendPropertyChanged("caseId");
					this.OncaseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lumpSumRequiredForTreatment", DbType="NVarChar(50)")]
		public string lumpSumRequiredForTreatment
		{
			get
			{
				return this._lumpSumRequiredForTreatment;
			}
			set
			{
				if ((this._lumpSumRequiredForTreatment != value))
				{
					this.OnlumpSumRequiredForTreatmentChanging(value);
					this.SendPropertyChanging();
					this._lumpSumRequiredForTreatment = value;
					this.SendPropertyChanged("lumpSumRequiredForTreatment");
					this.OnlumpSumRequiredForTreatmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_criticalIllnessInsurance", DbType="NVarChar(50)")]
		public string criticalIllnessInsurance
		{
			get
			{
				return this._criticalIllnessInsurance;
			}
			set
			{
				if ((this._criticalIllnessInsurance != value))
				{
					this.OncriticalIllnessInsuranceChanging(value);
					this.SendPropertyChanging();
					this._criticalIllnessInsurance = value;
					this.SendPropertyChanged("criticalIllnessInsurance");
					this.OncriticalIllnessInsuranceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_existingAssetsMyneeds", DbType="NVarChar(50)")]
		public string existingAssetsMyneeds
		{
			get
			{
				return this._existingAssetsMyneeds;
			}
			set
			{
				if ((this._existingAssetsMyneeds != value))
				{
					this.OnexistingAssetsMyneedsChanging(value);
					this.SendPropertyChanging();
					this._existingAssetsMyneeds = value;
					this.SendPropertyChanged("existingAssetsMyneeds");
					this.OnexistingAssetsMyneedsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalShortfallSurplusMyNeeds", DbType="NVarChar(50)")]
		public string totalShortfallSurplusMyNeeds
		{
			get
			{
				return this._totalShortfallSurplusMyNeeds;
			}
			set
			{
				if ((this._totalShortfallSurplusMyNeeds != value))
				{
					this.OntotalShortfallSurplusMyNeedsChanging(value);
					this.SendPropertyChanging();
					this._totalShortfallSurplusMyNeeds = value;
					this.SendPropertyChanged("totalShortfallSurplusMyNeeds");
					this.OntotalShortfallSurplusMyNeedsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lumpSumMyNeeds", DbType="NVarChar(50)")]
		public string lumpSumMyNeeds
		{
			get
			{
				return this._lumpSumMyNeeds;
			}
			set
			{
				if ((this._lumpSumMyNeeds != value))
				{
					this.OnlumpSumMyNeedsChanging(value);
					this.SendPropertyChanging();
					this._lumpSumMyNeeds = value;
					this.SendPropertyChanged("lumpSumMyNeeds");
					this.OnlumpSumMyNeedsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_existingSumMyNeeds", DbType="NVarChar(50)")]
		public string existingSumMyNeeds
		{
			get
			{
				return this._existingSumMyNeeds;
			}
			set
			{
				if ((this._existingSumMyNeeds != value))
				{
					this.OnexistingSumMyNeedsChanging(value);
					this.SendPropertyChanging();
					this._existingSumMyNeeds = value;
					this.SendPropertyChanged("existingSumMyNeeds");
					this.OnexistingSumMyNeedsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shortfallSumMyNeeds", DbType="NVarChar(50)")]
		public string shortfallSumMyNeeds
		{
			get
			{
				return this._shortfallSumMyNeeds;
			}
			set
			{
				if ((this._shortfallSumMyNeeds != value))
				{
					this.OnshortfallSumMyNeedsChanging(value);
					this.SendPropertyChanging();
					this._shortfallSumMyNeeds = value;
					this.SendPropertyChanged("shortfallSumMyNeeds");
					this.OnshortfallSumMyNeedsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_monthlyIncomeDisabilityIncome", DbType="NVarChar(50)")]
		public string monthlyIncomeDisabilityIncome
		{
			get
			{
				return this._monthlyIncomeDisabilityIncome;
			}
			set
			{
				if ((this._monthlyIncomeDisabilityIncome != value))
				{
					this.OnmonthlyIncomeDisabilityIncomeChanging(value);
					this.SendPropertyChanging();
					this._monthlyIncomeDisabilityIncome = value;
					this.SendPropertyChanged("monthlyIncomeDisabilityIncome");
					this.OnmonthlyIncomeDisabilityIncomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_percentOfIncomeCoverageRequired", DbType="NVarChar(50)")]
		public string percentOfIncomeCoverageRequired
		{
			get
			{
				return this._percentOfIncomeCoverageRequired;
			}
			set
			{
				if ((this._percentOfIncomeCoverageRequired != value))
				{
					this.OnpercentOfIncomeCoverageRequiredChanging(value);
					this.SendPropertyChanging();
					this._percentOfIncomeCoverageRequired = value;
					this.SendPropertyChanged("percentOfIncomeCoverageRequired");
					this.OnpercentOfIncomeCoverageRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_monthlyCoverageRequired", DbType="NVarChar(50)")]
		public string monthlyCoverageRequired
		{
			get
			{
				return this._monthlyCoverageRequired;
			}
			set
			{
				if ((this._monthlyCoverageRequired != value))
				{
					this.OnmonthlyCoverageRequiredChanging(value);
					this.SendPropertyChanging();
					this._monthlyCoverageRequired = value;
					this.SendPropertyChanged("monthlyCoverageRequired");
					this.OnmonthlyCoverageRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_disabilityInsuranceMyNeeds", DbType="NVarChar(50)")]
		public string disabilityInsuranceMyNeeds
		{
			get
			{
				return this._disabilityInsuranceMyNeeds;
			}
			set
			{
				if ((this._disabilityInsuranceMyNeeds != value))
				{
					this.OndisabilityInsuranceMyNeedsChanging(value);
					this.SendPropertyChanging();
					this._disabilityInsuranceMyNeeds = value;
					this.SendPropertyChanged("disabilityInsuranceMyNeeds");
					this.OndisabilityInsuranceMyNeedsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_existingAssetsMyneedsDisability", DbType="NVarChar(50)")]
		public string existingAssetsMyneedsDisability
		{
			get
			{
				return this._existingAssetsMyneedsDisability;
			}
			set
			{
				if ((this._existingAssetsMyneedsDisability != value))
				{
					this.OnexistingAssetsMyneedsDisabilityChanging(value);
					this.SendPropertyChanging();
					this._existingAssetsMyneedsDisability = value;
					this.SendPropertyChanged("existingAssetsMyneedsDisability");
					this.OnexistingAssetsMyneedsDisabilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shortfallSurplusMyNeeds", DbType="NVarChar(50)")]
		public string shortfallSurplusMyNeeds
		{
			get
			{
				return this._shortfallSurplusMyNeeds;
			}
			set
			{
				if ((this._shortfallSurplusMyNeeds != value))
				{
					this.OnshortfallSurplusMyNeedsChanging(value);
					this.SendPropertyChanging();
					this._shortfallSurplusMyNeeds = value;
					this.SendPropertyChanged("shortfallSurplusMyNeeds");
					this.OnshortfallSurplusMyNeedsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_monthlyAmountMyNeeds", DbType="NVarChar(50)")]
		public string monthlyAmountMyNeeds
		{
			get
			{
				return this._monthlyAmountMyNeeds;
			}
			set
			{
				if ((this._monthlyAmountMyNeeds != value))
				{
					this.OnmonthlyAmountMyNeedsChanging(value);
					this.SendPropertyChanging();
					this._monthlyAmountMyNeeds = value;
					this.SendPropertyChanged("monthlyAmountMyNeeds");
					this.OnmonthlyAmountMyNeedsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_existingMyNeeds", DbType="NVarChar(50)")]
		public string existingMyNeeds
		{
			get
			{
				return this._existingMyNeeds;
			}
			set
			{
				if ((this._existingMyNeeds != value))
				{
					this.OnexistingMyNeedsChanging(value);
					this.SendPropertyChanging();
					this._existingMyNeeds = value;
					this.SendPropertyChanged("existingMyNeeds");
					this.OnexistingMyNeedsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shortfallMyNeeds", DbType="NVarChar(50)")]
		public string shortfallMyNeeds
		{
			get
			{
				return this._shortfallMyNeeds;
			}
			set
			{
				if ((this._shortfallMyNeeds != value))
				{
					this.OnshortfallMyNeedsChanging(value);
					this.SendPropertyChanging();
					this._shortfallMyNeeds = value;
					this.SendPropertyChanged("shortfallMyNeeds");
					this.OnshortfallMyNeedsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeOfHospitalCoverage", DbType="NVarChar(50)")]
		public string typeOfHospitalCoverage
		{
			get
			{
				return this._typeOfHospitalCoverage;
			}
			set
			{
				if ((this._typeOfHospitalCoverage != value))
				{
					this.OntypeOfHospitalCoverageChanging(value);
					this.SendPropertyChanging();
					this._typeOfHospitalCoverage = value;
					this.SendPropertyChanged("typeOfHospitalCoverage");
					this.OntypeOfHospitalCoverageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_anyExistingPlans", DbType="Bit")]
		public System.Nullable<bool> anyExistingPlans
		{
			get
			{
				return this._anyExistingPlans;
			}
			set
			{
				if ((this._anyExistingPlans != value))
				{
					this.OnanyExistingPlansChanging(value);
					this.SendPropertyChanging();
					this._anyExistingPlans = value;
					this.SendPropertyChanged("anyExistingPlans");
					this.OnanyExistingPlansChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeOfRoomCoverage", DbType="Int")]
		public System.Nullable<int> typeOfRoomCoverage
		{
			get
			{
				return this._typeOfRoomCoverage;
			}
			set
			{
				if ((this._typeOfRoomCoverage != value))
				{
					this.OntypeOfRoomCoverageChanging(value);
					this.SendPropertyChanging();
					this._typeOfRoomCoverage = value;
					this.SendPropertyChanged("typeOfRoomCoverage");
					this.OntypeOfRoomCoverageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_coverageOldageYesNo", DbType="Bit")]
		public System.Nullable<bool> coverageOldageYesNo
		{
			get
			{
				return this._coverageOldageYesNo;
			}
			set
			{
				if ((this._coverageOldageYesNo != value))
				{
					this.OncoverageOldageYesNoChanging(value);
					this.SendPropertyChanging();
					this._coverageOldageYesNo = value;
					this.SendPropertyChanged("coverageOldageYesNo");
					this.OncoverageOldageYesNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_epOldageYesNo", DbType="Bit")]
		public System.Nullable<bool> epOldageYesNo
		{
			get
			{
				return this._epOldageYesNo;
			}
			set
			{
				if ((this._epOldageYesNo != value))
				{
					this.OnepOldageYesNoChanging(value);
					this.SendPropertyChanging();
					this._epOldageYesNo = value;
					this.SendPropertyChanged("epOldageYesNo");
					this.OnepOldageYesNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_coverageIncomeYesNo", DbType="Bit")]
		public System.Nullable<bool> coverageIncomeYesNo
		{
			get
			{
				return this._coverageIncomeYesNo;
			}
			set
			{
				if ((this._coverageIncomeYesNo != value))
				{
					this.OncoverageIncomeYesNoChanging(value);
					this.SendPropertyChanging();
					this._coverageIncomeYesNo = value;
					this.SendPropertyChanged("coverageIncomeYesNo");
					this.OncoverageIncomeYesNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_epIncomeYesNo", DbType="Bit")]
		public System.Nullable<bool> epIncomeYesNo
		{
			get
			{
				return this._epIncomeYesNo;
			}
			set
			{
				if ((this._epIncomeYesNo != value))
				{
					this.OnepIncomeYesNoChanging(value);
					this.SendPropertyChanging();
					this._epIncomeYesNo = value;
					this.SendPropertyChanged("epIncomeYesNo");
					this.OnepIncomeYesNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_coverageOutpatientYesNo", DbType="Bit")]
		public System.Nullable<bool> coverageOutpatientYesNo
		{
			get
			{
				return this._coverageOutpatientYesNo;
			}
			set
			{
				if ((this._coverageOutpatientYesNo != value))
				{
					this.OncoverageOutpatientYesNoChanging(value);
					this.SendPropertyChanging();
					this._coverageOutpatientYesNo = value;
					this.SendPropertyChanged("coverageOutpatientYesNo");
					this.OncoverageOutpatientYesNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_epOutpatientYesNo", DbType="Bit")]
		public System.Nullable<bool> epOutpatientYesNo
		{
			get
			{
				return this._epOutpatientYesNo;
			}
			set
			{
				if ((this._epOutpatientYesNo != value))
				{
					this.OnepOutpatientYesNoChanging(value);
					this.SendPropertyChanging();
					this._epOutpatientYesNo = value;
					this.SendPropertyChanged("epOutpatientYesNo");
					this.OnepOutpatientYesNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_coverageDentalYesNo", DbType="Bit")]
		public System.Nullable<bool> coverageDentalYesNo
		{
			get
			{
				return this._coverageDentalYesNo;
			}
			set
			{
				if ((this._coverageDentalYesNo != value))
				{
					this.OncoverageDentalYesNoChanging(value);
					this.SendPropertyChanging();
					this._coverageDentalYesNo = value;
					this.SendPropertyChanged("coverageDentalYesNo");
					this.OncoverageDentalYesNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_epDentalYesNo", DbType="Bit")]
		public System.Nullable<bool> epDentalYesNo
		{
			get
			{
				return this._epDentalYesNo;
			}
			set
			{
				if ((this._epDentalYesNo != value))
				{
					this.OnepDentalYesNoChanging(value);
					this.SendPropertyChanging();
					this._epDentalYesNo = value;
					this.SendPropertyChanged("epDentalYesNo");
					this.OnepDentalYesNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_coveragePersonalYesNo", DbType="Bit")]
		public System.Nullable<bool> coveragePersonalYesNo
		{
			get
			{
				return this._coveragePersonalYesNo;
			}
			set
			{
				if ((this._coveragePersonalYesNo != value))
				{
					this.OncoveragePersonalYesNoChanging(value);
					this.SendPropertyChanging();
					this._coveragePersonalYesNo = value;
					this.SendPropertyChanged("coveragePersonalYesNo");
					this.OncoveragePersonalYesNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_epPersonalYesNo", DbType="Bit")]
		public System.Nullable<bool> epPersonalYesNo
		{
			get
			{
				return this._epPersonalYesNo;
			}
			set
			{
				if ((this._epPersonalYesNo != value))
				{
					this.OnepPersonalYesNoChanging(value);
					this.SendPropertyChanging();
					this._epPersonalYesNo = value;
					this.SendPropertyChanged("epPersonalYesNo");
					this.OnepPersonalYesNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_detailsOfExistingPlans", DbType="NVarChar(4000)")]
		public string detailsOfExistingPlans
		{
			get
			{
				return this._detailsOfExistingPlans;
			}
			set
			{
				if ((this._detailsOfExistingPlans != value))
				{
					this.OndetailsOfExistingPlansChanging(value);
					this.SendPropertyChanging();
					this._detailsOfExistingPlans = value;
					this.SendPropertyChanged("detailsOfExistingPlans");
					this.OndetailsOfExistingPlansChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_replacementIncomePercentage", DbType="NVarChar(50)")]
		public string replacementIncomePercentage
		{
			get
			{
				return this._replacementIncomePercentage;
			}
			set
			{
				if ((this._replacementIncomePercentage != value))
				{
					this.OnreplacementIncomePercentageChanging(value);
					this.SendPropertyChanging();
					this._replacementIncomePercentage = value;
					this.SendPropertyChanged("replacementIncomePercentage");
					this.OnreplacementIncomePercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_replacementIncomeRequired", DbType="NVarChar(50)")]
		public string replacementIncomeRequired
		{
			get
			{
				return this._replacementIncomeRequired;
			}
			set
			{
				if ((this._replacementIncomeRequired != value))
				{
					this.OnreplacementIncomeRequiredChanging(value);
					this.SendPropertyChanging();
					this._replacementIncomeRequired = value;
					this.SendPropertyChanged("replacementIncomeRequired");
					this.OnreplacementIncomeRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_yearsOfSupportRequired", DbType="NVarChar(50)")]
		public string yearsOfSupportRequired
		{
			get
			{
				return this._yearsOfSupportRequired;
			}
			set
			{
				if ((this._yearsOfSupportRequired != value))
				{
					this.OnyearsOfSupportRequiredChanging(value);
					this.SendPropertyChanging();
					this._yearsOfSupportRequired = value;
					this.SendPropertyChanged("yearsOfSupportRequired");
					this.OnyearsOfSupportRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inflatedAdjustedReturns", DbType="NVarChar(50)")]
		public string inflatedAdjustedReturns
		{
			get
			{
				return this._inflatedAdjustedReturns;
			}
			set
			{
				if ((this._inflatedAdjustedReturns != value))
				{
					this.OninflatedAdjustedReturnsChanging(value);
					this.SendPropertyChanging();
					this._inflatedAdjustedReturns = value;
					this.SendPropertyChanged("inflatedAdjustedReturns");
					this.OninflatedAdjustedReturnsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_replacementAmountRequired", DbType="NVarChar(50)")]
		public string replacementAmountRequired
		{
			get
			{
				return this._replacementAmountRequired;
			}
			set
			{
				if ((this._replacementAmountRequired != value))
				{
					this.OnreplacementAmountRequiredChanging(value);
					this.SendPropertyChanging();
					this._replacementAmountRequired = value;
					this.SendPropertyChanged("replacementAmountRequired");
					this.OnreplacementAmountRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalRequired", DbType="NVarChar(50)")]
		public string totalRequired
		{
			get
			{
				return this._totalRequired;
			}
			set
			{
				if ((this._totalRequired != value))
				{
					this.OntotalRequiredChanging(value);
					this.SendPropertyChanging();
					this._totalRequired = value;
					this.SendPropertyChanged("totalRequired");
					this.OntotalRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_txtExistingAssetsFamilyneeds", DbType="NVarChar(50)")]
		public string txtExistingAssetsFamilyneeds
		{
			get
			{
				return this._txtExistingAssetsFamilyneeds;
			}
			set
			{
				if ((this._txtExistingAssetsFamilyneeds != value))
				{
					this.OntxtExistingAssetsFamilyneedsChanging(value);
					this.SendPropertyChanging();
					this._txtExistingAssetsFamilyneeds = value;
					this.SendPropertyChanged("txtExistingAssetsFamilyneeds");
					this.OntxtExistingAssetsFamilyneedsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_disabilityProtectionReplacementIncomeRequiredPercentage", DbType="NVarChar(50)")]
		public string disabilityProtectionReplacementIncomeRequiredPercentage
		{
			get
			{
				return this._disabilityProtectionReplacementIncomeRequiredPercentage;
			}
			set
			{
				if ((this._disabilityProtectionReplacementIncomeRequiredPercentage != value))
				{
					this.OndisabilityProtectionReplacementIncomeRequiredPercentageChanging(value);
					this.SendPropertyChanging();
					this._disabilityProtectionReplacementIncomeRequiredPercentage = value;
					this.SendPropertyChanged("disabilityProtectionReplacementIncomeRequiredPercentage");
					this.OndisabilityProtectionReplacementIncomeRequiredPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_disabilityProtectionReplacementIncomeRequired", DbType="NVarChar(50)")]
		public string disabilityProtectionReplacementIncomeRequired
		{
			get
			{
				return this._disabilityProtectionReplacementIncomeRequired;
			}
			set
			{
				if ((this._disabilityProtectionReplacementIncomeRequired != value))
				{
					this.OndisabilityProtectionReplacementIncomeRequiredChanging(value);
					this.SendPropertyChanging();
					this._disabilityProtectionReplacementIncomeRequired = value;
					this.SendPropertyChanged("disabilityProtectionReplacementIncomeRequired");
					this.OndisabilityProtectionReplacementIncomeRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_disabilityYearsOfSupport", DbType="NVarChar(50)")]
		public string disabilityYearsOfSupport
		{
			get
			{
				return this._disabilityYearsOfSupport;
			}
			set
			{
				if ((this._disabilityYearsOfSupport != value))
				{
					this.OndisabilityYearsOfSupportChanging(value);
					this.SendPropertyChanging();
					this._disabilityYearsOfSupport = value;
					this.SendPropertyChanged("disabilityYearsOfSupport");
					this.OndisabilityYearsOfSupportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inflationAdjustedReturns", DbType="NVarChar(50)")]
		public string inflationAdjustedReturns
		{
			get
			{
				return this._inflationAdjustedReturns;
			}
			set
			{
				if ((this._inflationAdjustedReturns != value))
				{
					this.OninflationAdjustedReturnsChanging(value);
					this.SendPropertyChanging();
					this._inflationAdjustedReturns = value;
					this.SendPropertyChanged("inflationAdjustedReturns");
					this.OninflationAdjustedReturnsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_disabilityReplacementAmountRequired", DbType="NVarChar(50)")]
		public string disabilityReplacementAmountRequired
		{
			get
			{
				return this._disabilityReplacementAmountRequired;
			}
			set
			{
				if ((this._disabilityReplacementAmountRequired != value))
				{
					this.OndisabilityReplacementAmountRequiredChanging(value);
					this.SendPropertyChanging();
					this._disabilityReplacementAmountRequired = value;
					this.SendPropertyChanged("disabilityReplacementAmountRequired");
					this.OndisabilityReplacementAmountRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_disabilityInsurance", DbType="NVarChar(50)")]
		public string disabilityInsurance
		{
			get
			{
				return this._disabilityInsurance;
			}
			set
			{
				if ((this._disabilityInsurance != value))
				{
					this.OndisabilityInsuranceChanging(value);
					this.SendPropertyChanging();
					this._disabilityInsurance = value;
					this.SendPropertyChanged("disabilityInsurance");
					this.OndisabilityInsuranceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_existingPlansDetail", DbType="NVarChar(2000)")]
		public string existingPlansDetail
		{
			get
			{
				return this._existingPlansDetail;
			}
			set
			{
				if ((this._existingPlansDetail != value))
				{
					this.OnexistingPlansDetailChanging(value);
					this.SendPropertyChanging();
					this._existingPlansDetail = value;
					this.SendPropertyChanged("existingPlansDetail");
					this.OnexistingPlansDetailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_criticalIllnessPrNeeded", DbType="Int")]
		public System.Nullable<int> criticalIllnessPrNeeded
		{
			get
			{
				return this._criticalIllnessPrNeeded;
			}
			set
			{
				if ((this._criticalIllnessPrNeeded != value))
				{
					this.OncriticalIllnessPrNeededChanging(value);
					this.SendPropertyChanging();
					this._criticalIllnessPrNeeded = value;
					this.SendPropertyChanged("criticalIllnessPrNeeded");
					this.OncriticalIllnessPrNeededChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_disabilityPrNeeded", DbType="Int")]
		public System.Nullable<int> disabilityPrNeeded
		{
			get
			{
				return this._disabilityPrNeeded;
			}
			set
			{
				if ((this._disabilityPrNeeded != value))
				{
					this.OndisabilityPrNeededChanging(value);
					this.SendPropertyChanging();
					this._disabilityPrNeeded = value;
					this.SendPropertyChanged("disabilityPrNeeded");
					this.OndisabilityPrNeededChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hospitalmedCoverNeeded", DbType="Int")]
		public System.Nullable<int> hospitalmedCoverNeeded
		{
			get
			{
				return this._hospitalmedCoverNeeded;
			}
			set
			{
				if ((this._hospitalmedCoverNeeded != value))
				{
					this.OnhospitalmedCoverNeededChanging(value);
					this.SendPropertyChanging();
					this._hospitalmedCoverNeeded = value;
					this.SendPropertyChanged("hospitalmedCoverNeeded");
					this.OnhospitalmedCoverNeededChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accidentalhealthCoverNeeded", DbType="Int")]
		public System.Nullable<int> accidentalhealthCoverNeeded
		{
			get
			{
				return this._accidentalhealthCoverNeeded;
			}
			set
			{
				if ((this._accidentalhealthCoverNeeded != value))
				{
					this.OnaccidentalhealthCoverNeededChanging(value);
					this.SendPropertyChanging();
					this._accidentalhealthCoverNeeded = value;
					this.SendPropertyChanged("accidentalhealthCoverNeeded");
					this.OnaccidentalhealthCoverNeededChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_coverageOutpatientMedExp", DbType="Bit")]
		public System.Nullable<bool> coverageOutpatientMedExp
		{
			get
			{
				return this._coverageOutpatientMedExp;
			}
			set
			{
				if ((this._coverageOutpatientMedExp != value))
				{
					this.OncoverageOutpatientMedExpChanging(value);
					this.SendPropertyChanging();
					this._coverageOutpatientMedExp = value;
					this.SendPropertyChanged("coverageOutpatientMedExp");
					this.OncoverageOutpatientMedExpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_epOutpatientMedExp", DbType="Bit")]
		public System.Nullable<bool> epOutpatientMedExp
		{
			get
			{
				return this._epOutpatientMedExp;
			}
			set
			{
				if ((this._epOutpatientMedExp != value))
				{
					this.OnepOutpatientMedExpChanging(value);
					this.SendPropertyChanging();
					this._epOutpatientMedExp = value;
					this.SendPropertyChanged("epOutpatientMedExp");
					this.OnepOutpatientMedExpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_coverageLossOfIncome", DbType="Bit")]
		public System.Nullable<bool> coverageLossOfIncome
		{
			get
			{
				return this._coverageLossOfIncome;
			}
			set
			{
				if ((this._coverageLossOfIncome != value))
				{
					this.OncoverageLossOfIncomeChanging(value);
					this.SendPropertyChanging();
					this._coverageLossOfIncome = value;
					this.SendPropertyChanged("coverageLossOfIncome");
					this.OncoverageLossOfIncomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_epLossOfIncome", DbType="Bit")]
		public System.Nullable<bool> epLossOfIncome
		{
			get
			{
				return this._epLossOfIncome;
			}
			set
			{
				if ((this._epLossOfIncome != value))
				{
					this.OnepLossOfIncomeChanging(value);
					this.SendPropertyChanging();
					this._epLossOfIncome = value;
					this.SendPropertyChanged("epLossOfIncome");
					this.OnepLossOfIncomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_coverageOldageDisabilities", DbType="Bit")]
		public System.Nullable<bool> coverageOldageDisabilities
		{
			get
			{
				return this._coverageOldageDisabilities;
			}
			set
			{
				if ((this._coverageOldageDisabilities != value))
				{
					this.OncoverageOldageDisabilitiesChanging(value);
					this.SendPropertyChanging();
					this._coverageOldageDisabilities = value;
					this.SendPropertyChanged("coverageOldageDisabilities");
					this.OncoverageOldageDisabilitiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_epOldageDisabilities", DbType="Bit")]
		public System.Nullable<bool> epOldageDisabilities
		{
			get
			{
				return this._epOldageDisabilities;
			}
			set
			{
				if ((this._epOldageDisabilities != value))
				{
					this.OnepOldageDisabilitiesChanging(value);
					this.SendPropertyChanging();
					this._epOldageDisabilities = value;
					this.SendPropertyChanged("epOldageDisabilities");
					this.OnepOldageDisabilitiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_coverageDentalExp", DbType="Bit")]
		public System.Nullable<bool> coverageDentalExp
		{
			get
			{
				return this._coverageDentalExp;
			}
			set
			{
				if ((this._coverageDentalExp != value))
				{
					this.OncoverageDentalExpChanging(value);
					this.SendPropertyChanging();
					this._coverageDentalExp = value;
					this.SendPropertyChanged("coverageDentalExp");
					this.OncoverageDentalExpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_epDentalExp", DbType="Bit")]
		public System.Nullable<bool> epDentalExp
		{
			get
			{
				return this._epDentalExp;
			}
			set
			{
				if ((this._epDentalExp != value))
				{
					this.OnepDentalExpChanging(value);
					this.SendPropertyChanging();
					this._epDentalExp = value;
					this.SendPropertyChanged("epDentalExp");
					this.OnepDentalExpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="myNeed_myNeedsCriticalAsset", Storage="_myNeedsCriticalAssets", ThisKey="id", OtherKey="myNeedId")]
		public EntitySet<myNeedsCriticalAsset> myNeedsCriticalAssets
		{
			get
			{
				return this._myNeedsCriticalAssets;
			}
			set
			{
				this._myNeedsCriticalAssets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="myNeed_myNeedsDisabilityAsset", Storage="_myNeedsDisabilityAssets", ThisKey="id", OtherKey="myNeedId")]
		public EntitySet<myNeedsDisabilityAsset> myNeedsDisabilityAssets
		{
			get
			{
				return this._myNeedsDisabilityAssets;
			}
			set
			{
				this._myNeedsDisabilityAssets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_myNeedsCriticalAssets(myNeedsCriticalAsset entity)
		{
			this.SendPropertyChanging();
			entity.myNeed = this;
		}
		
		private void detach_myNeedsCriticalAssets(myNeedsCriticalAsset entity)
		{
			this.SendPropertyChanging();
			entity.myNeed = null;
		}
		
		private void attach_myNeedsDisabilityAssets(myNeedsDisabilityAsset entity)
		{
			this.SendPropertyChanging();
			entity.myNeed = this;
		}
		
		private void detach_myNeedsDisabilityAssets(myNeedsDisabilityAsset entity)
		{
			this.SendPropertyChanging();
			entity.myNeed = null;
		}
	}
}
#pragma warning restore 1591
