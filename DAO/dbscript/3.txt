/******20/08/2012******/

USE [FNA]
GO
/****** Object:  StoredProcedure [dbo].[sp_getGapSummary]    Script Date: 08/20/2012 19:49:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[sp_getGapSummary]    
@CaseId nvarchar(50)
AS
BEGIN
 
DECLARE @FIP AS NVARCHAR(10)
DECLARE @MORTGAGEPTN AS NVARCHAR(10)
DECLARE @CRITICALILLNESS AS NVARCHAR(10)
DECLARE @DISABILITYPTN AS NVARCHAR(10)
DECLARE @SAVINGGOAL AS NVARCHAR(10)
DECLARE @CHILDEDUGOAL AS NVARCHAR(10)
DECLARE @RETIREMENTGOAL AS NVARCHAR(10)

IF EXISTS (SELECT ID FROM priorityDetails where caseid = @CaseId)
BEGIN
	SELECT @FIP = ISNULL(pd.protection3, ''),
	@MORTGAGEPTN = ISNULL(pd.protection1, ''),
	@CRITICALILLNESS = ISNULL(pd.protection2, ''),
	@DISABILITYPTN = ISNULL(pd.protection4, ''),
	@SAVINGGOAL = ISNULL(savings3, ''),
	@CHILDEDUGOAL = ISNULL(pd.savings2, ''),
	@RETIREMENTGOAL = ISNULL(pd.savings1, '')
	FROM priorityDetails pd
	WHERE caseid = @CaseId
END
ELSE
BEGIN
	SET @FIP = ''
	SET @MORTGAGEPTN = ''
	SET @CRITICALILLNESS = ''
	SET @DISABILITYPTN = ''
	SET @SAVINGGOAL =  ''
	SET @CHILDEDUGOAL =  ''
	SET @RETIREMENTGOAL =  ''
END

PRINT @FIP
PRINT @MORTGAGEPTN
PRINT @CRITICALILLNESS
PRINT @DISABILITYPTN
PRINT @SAVINGGOAL
PRINT @CHILDEDUGOAL
PRINT @RETIREMENTGOAL

DECLARE @GAPSUMMARYTABLE AS TABLE(
	Id INT,
	gapSummaryTypeId INT,
	Title NVARCHAR(50),
	Needs NVARCHAR(50),
	AmountRequired NVARCHAR(50),
	ExistingArrangements NVARCHAR(50),
	CurrentShortfall NVARCHAR(50),
	MyPriorities NVARCHAR(100)
)

--PROTECTION GOALS (FAMILY NEEDS)  
 INSERT INTO @GAPSUMMARYTABLE  
 SELECT   
 fn.id as Id,  
 1 AS gapSummaryTypeId,  
 'PROTECTION' AS Title,   
 'Family Income Protection' Needs,   
 CONVERT(VARCHAR(20), fn.totalRequired) AS AmountRequired,
 CONVERT(VARCHAR(20), fn.existingLifeInsurance + SUM(convert(int, isnull(fnea.presentValue, 0)))) AS ExistingArrangements, 
 fn.totalShortfallSurplus AS CurrentShortfall,   
 @FIP AS MyPriorities  
 FROM familyNeeds fn   
  LEFT OUTER JOIN familyNeedsAssets fnea ON fn.id = fnea.familyNeedId    
   WHERE fn.id = (SELECT MAX(id) FROM familyNeeds WHERE caseId = @CaseId)  
   GROUP BY fn.id, fn.totalRequired, fn.existingLifeInsurance, fn.totalShortfallSurplus

   
 --PROTECTION GOALS (MORTGAGE PROTECTION)  
 INSERT INTO @GAPSUMMARYTABLE  
 SELECT   
 fn.id as Id,  
 2 AS gapSummaryTypeId,  
 '' AS Title,   
 'Mortgage Protection' Needs,   
 CONVERT(VARCHAR(20), fn.mortgageProtectionOutstanding) AS AmountRequired,   
 CONVERT(VARCHAR(20), fn.mortgageProtectionInsurances) AS ExistingArrangements,   
 fn.mortgageProtectionTotal AS CurrentShortfall,   
 @MORTGAGEPTN AS MyPriorities  
 FROM familyNeeds fn
  WHERE fn.id = (SELECT MAX(id) FROM familyNeeds WHERE caseId = @CaseId)
   
 --PROTECTION GOALS (CRITICAL ILLNESS)  
 INSERT INTO @GAPSUMMARYTABLE  
 SELECT   
 mn.id as Id,  
 3 AS gapSummaryTypeId,  
 '' AS Title,   
 'Critical Illness' Needs,   
 CONVERT(VARCHAR(20), mn.totalRequired) AS AmountRequired,   
 CONVERT(VARCHAR(20), mn.criticalIllnessInsurance + SUM(convert(int, isnull(mnea.presentValue, 0)))) AS ExistingArrangements,     
 mn.totalShortfallSurplusMyNeeds AS CurrentShortfall,   
 @CRITICALILLNESS AS MyPriorities  
 FROM myNeeds mn   
  LEFT OUTER JOIN myNeedsCriticalAssets mnea ON mn.id = mnea.myNeedId     
  WHERE mn.id = (SELECT MAX(id) FROM myNeeds WHERE caseId = @CaseId)  
  GROUP BY mn.id, mn.totalRequired, mn.criticalIllnessInsurance, mn.totalShortfallSurplusMyNeeds
   
 --PROTECTION GOALS (DISABILITY PROTECTION)  
 INSERT INTO @GAPSUMMARYTABLE  
 SELECT   
 mn.id as Id,  
 4 AS gapSummaryTypeId,  
 '' AS Title,   
 'Disability Protection' Needs,   
 CONVERT(VARCHAR(20), mn.disabilityReplacementAmountRequired) AS AmountRequired,   
 CONVERT(VARCHAR(20), mn.disabilityInsurance + SUM(convert(decimal(25, 2), isnull(mnda.presentValue, 0))))  AS ExistingArrangements,   
 mn.shortfallSurplusMyNeeds AS CurrentShortfall,   
 @DISABILITYPTN AS MyPriorities  
 FROM myNeeds mn   
  LEFT OUTER JOIN myNeedsDisabilityAssets mnda ON mn.id = mnda.myNeedId    
  WHERE mn.id = (SELECT MAX(id) FROM myNeeds WHERE caseId = @CaseId)      
  GROUP BY mn.id, mn.disabilityReplacementAmountRequired, mn.disabilityInsurance, mn.shortfallSurplusMyNeeds
   
 --PROTECTION GOALS (HOSPITALIZATION)  
 INSERT INTO @GAPSUMMARYTABLE  
 SELECT   
 mn.id as Id,  
 5 AS gapSummaryTypeId,  
 '' AS Title,   
 'Hospitalization - Type of Hospital' Needs,   
 CONVERT(VARCHAR(20), mn.typeOfHospitalCoverage) AS AmountRequired,   
 CASE   
  WHEN mn.anyExistingPlans = 1 THEN 'YES'  
  ELSE  
  'NO'  
 END AS ExistingArrangements,   
 '' AS CurrentShortfall,   
 '' AS MyPriorities  
 FROM myNeeds mn 
  WHERE mn.id = (select MAX(id) from myNeeds where caseId = @CaseId)      
   
 INSERT INTO @GAPSUMMARYTABLE  
 SELECT   
 mn.id as Id,  
 6 AS gapSummaryTypeId,  
 '' AS Title,   
 'Hospitalization - No. Of Rooms' Needs,   
 CONVERT(VARCHAR(20), mn.typeOfRoomCoverage) AS AmountRequired,   
 CONVERT(VARCHAR(20), '') AS ExistingArrangements,   
 '' AS CurrentShortfall,   
 '' AS MyPriorities  
 FROM myNeeds mn    
 WHERE mn.id = (select MAX(id) from myNeeds where caseId = @CaseId)      
   
 --SAVING GOALS  
 INSERT INTO @GAPSUMMARYTABLE     
 SELECT   
 sg.id as Id,  
 7 AS gapSummaryTypeId,  
 'SAVINGS' AS Title,   
 'Goal ' + convert(varchar(10), row_number () over (order by sg.goal)) Needs,   
 CONVERT(VARCHAR(20), sg.amtneededfv) AS AmountRequired,
 CONVERT(VARCHAR(20), sg.existingassetstotal + sg.maturityvalue) AS ExistingArrangements,
 sg.total AS CurrentShortfall,   
 @SAVINGGOAL AS MyPriorities  
 FROM savinggoals sg     
  WHERE sg.caseid = @CaseId      
   
 --EDICATION GOALS  
 INSERT INTO @GAPSUMMARYTABLE  
 SELECT   
 eg.id as Id,  
 8 AS gapSummaryTypeId,  
 '' AS Title,   
 'Child''s Education - Child ' + convert(varchar(10), row_number () over (order by eg.nameofchild)) Needs,   
 CONVERT(VARCHAR(20), eg.futurecost) AS AmountRequired,   
 CONVERT(VARCHAR(20), eg.existingassetstotal + eg.maturityvalue) AS ExistingArrangements,   
 eg.total AS CurrentShortfall,   
 @CHILDEDUGOAL AS MyPriorities  
 FROM educationgoals eg     
  WHERE eg.caseid = @CaseId  
    
 --RETIREMENT GOALS  
 INSERT INTO @GAPSUMMARYTABLE  
 SELECT   
 rg.id as Id,  
 9 AS gapSummaryTypeId,  
 '' AS Title,   
 'Retirement ' + convert(varchar(10), row_number() over (order by rg.id)) Needs,   
 CONVERT(VARCHAR(20), rg.lumpsumrequired) AS AmountRequired,   
 CONVERT(VARCHAR(20), rg.existingassetstotal + rg.maturityvalue) AS ExistingArrangements,   
 rg.total AS CurrentShortfall,   
 @RETIREMENTGOAL AS MyPriorities  
 FROM retirementgoals rg    
  WHERE rg.caseid = @CaseId
  
  IF NOT EXISTS (SELECT ID FROM @GAPSUMMARYTABLE WHERE gapSummaryTypeId = 1)
  BEGIN
	INSERT INTO @GAPSUMMARYTABLE VALUES (0, 1, 'PROTECTION', 'Family Income Protection', 0, 0, 0, '')
  END
  IF NOT EXISTS (SELECT ID FROM @GAPSUMMARYTABLE WHERE gapSummaryTypeId = 2)
  BEGIN
	INSERT INTO @GAPSUMMARYTABLE VALUES (0, 2, '', 'Mortgage Protection', 0, 0, 0, '')
  END
  IF NOT EXISTS (SELECT ID FROM @GAPSUMMARYTABLE WHERE gapSummaryTypeId = 3)
  BEGIN
	INSERT INTO @GAPSUMMARYTABLE VALUES (0, 3, '', 'Critical Illness', 0, 0, 0, '')
  END
  IF NOT EXISTS (SELECT ID FROM @GAPSUMMARYTABLE WHERE gapSummaryTypeId = 4)
  BEGIN
	INSERT INTO @GAPSUMMARYTABLE VALUES (0, 4, '', 'Disability Protection', 0, 0, 0, '')	
  END
  IF NOT EXISTS (SELECT ID FROM @GAPSUMMARYTABLE WHERE gapSummaryTypeId = 5)
  BEGIN
	INSERT INTO @GAPSUMMARYTABLE VALUES (0, 5, '', 'Hospitalization - Type of Hospital', '', '', '', '')	
  END
  IF NOT EXISTS (SELECT ID FROM @GAPSUMMARYTABLE WHERE gapSummaryTypeId = 6)
  BEGIN
	INSERT INTO @GAPSUMMARYTABLE VALUES (0, 6, '', 'Hospitalization - No. Of Rooms', '', '', '', '')	
  END
  IF NOT EXISTS (SELECT ID FROM @GAPSUMMARYTABLE WHERE gapSummaryTypeId = 7)
  BEGIN
	INSERT INTO @GAPSUMMARYTABLE VALUES (0, 7, 'SAVINGS', 'Goal 1', 0, 0, 0, '')	
  END  
  IF NOT EXISTS (SELECT ID FROM @GAPSUMMARYTABLE WHERE gapSummaryTypeId = 8)
  BEGIN
	INSERT INTO @GAPSUMMARYTABLE VALUES (0, 8, '', 'Child Education 1', 0, 0, 0, '')	
  END
  IF NOT EXISTS (SELECT ID FROM @GAPSUMMARYTABLE WHERE gapSummaryTypeId = 9)
  BEGIN
	INSERT INTO @GAPSUMMARYTABLE VALUES (0, 9, '', 'Retirement 1', 0, 0, 0, '')	
  END
  
  SELECT Id, 
	 	 gapSummaryTypeId, 
		 Title, 
		 Needs, 
	     AmountRequired, 
	     ExistingArrangements, 
	     CurrentShortfall, 
	     MyPriorities 
  FROM @GAPSUMMARYTABLE
  ORDER BY gapSummaryTypeId
END
